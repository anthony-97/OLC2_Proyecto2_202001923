Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    TERN

Grammar

Rule 0     S' -> s
Rule 1     s -> block
Rule 2     block -> block instruccion
Rule 3     block -> instruccion
Rule 4     instruccion -> print
Rule 5     instruccion -> ifinstruction
Rule 6     instruccion -> ifElse
Rule 7     instruccion -> ifElseIfs
Rule 8     instruccion -> ifElseIfsElse
Rule 9     instruccion -> switchCase
Rule 10    instruccion -> switchCaseDefault
Rule 11    instruccion -> whileInstruction
Rule 12    instruccion -> forRange
Rule 13    instruccion -> declaration
Rule 14    instruccion -> declaracionValor
Rule 15    instruccion -> declaracionTipo
Rule 16    instruccion -> asignacion
Rule 17    instruccion -> asignacionIndMatriz
Rule 18    instruccion -> declaracionConstante
Rule 19    instruccion -> declConstanteValor
Rule 20    instruccion -> arrayDeclaration
Rule 21    instruccion -> matrizVariable
Rule 22    instruccion -> matrizConstante
Rule 23    instruccion -> arrayPush
Rule 24    instruccion -> breakstmt
Rule 25    instruccion -> continuestmt
Rule 26    instruccion -> returnstmt
Rule 27    instruccion -> functionstmt
Rule 28    instruccion -> interdeclaration
Rule 29    instruccion -> interfacecreation
Rule 30    instruccion -> interdeclarationConst
Rule 31    instruccion -> incrementoIns
Rule 32    instruccion -> call
Rule 33    print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
Rule 34    declaration -> VAR ID DOSPTS type IG expression PYC
Rule 35    declaracionValor -> VAR ID IG expression PYC
Rule 36    declaracionTipo -> VAR ID DOSPTS type PYC
Rule 37    asignacion -> ID IG expression PYC
Rule 38    asignacionIndMatriz -> accesoMatriz IG expression PYC
Rule 39    declaracionConstante -> CONST ID DOSPTS type IG expression PYC
Rule 40    declConstanteValor -> CONST ID IG expression PYC
Rule 41    arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
Rule 42    arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC
Rule 43    matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
Rule 44    matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
Rule 45    matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
Rule 46    corchetes -> corchetes corchete
Rule 47    corchetes -> corchete
Rule 48    corchete -> CORIZQ CORDER
Rule 49    ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 50    ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
Rule 51    ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
Rule 52    ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
Rule 53    elseifs -> elseifs elseif
Rule 54    elseifs -> elseif
Rule 55    elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 56    switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
Rule 57    switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
Rule 58    casos -> casos caso
Rule 59    casos -> caso
Rule 60    caso -> CASE expression DOSPTS block
Rule 61    whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 62    forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
Rule 63    incrementoIns -> ID MAS MAS PYC
Rule 64    incremento -> ID MAS MAS
Rule 65    functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
Rule 66    funcparams -> PARIZQ paramsList PARDER
Rule 67    funcparams -> PARIZQ PARDER
Rule 68    paramsList -> paramsList COMA ID DOSPTS type
Rule 69    paramsList -> ID DOSPTS type
Rule 70    functype -> DOSPTS type
Rule 71    functype -> <empty>
Rule 72    call -> ID PARIZQ expressionList PARDER PYC
Rule 73    call -> ID PARIZQ PARDER PYC
Rule 74    returnstmt -> RETURN expression PYC
Rule 75    returnstmt -> RETURN PYC
Rule 76    breakstmt -> BREAK PYC
Rule 77    continuestmt -> CONTINUE PYC
Rule 78    type -> NUMBER
Rule 79    type -> FLOAT
Rule 80    type -> STRING
Rule 81    type -> BOOL
Rule 82    type -> CHAR
Rule 83    type -> ID
Rule 84    type -> type corchete
Rule 85    interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER
Rule 86    attributeList -> attributeList ID DOSPTS type PYC
Rule 87    attributeList -> ID DOSPTS type PYC
Rule 88    interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
Rule 89    interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
Rule 90    interfaceContent -> interfaceContent COMA ID DOSPTS expression
Rule 91    interfaceContent -> ID DOSPTS expression
Rule 92    expressionList -> expressionList COMA expression
Rule 93    expressionList -> expression
Rule 94    expression -> MENOS expression
Rule 95    expression -> expression MAS expression
Rule 96    expression -> expression MENOS expression
Rule 97    expression -> expression POR expression
Rule 98    expression -> expression DIVIDIDO expression
Rule 99    expression -> expression MODULO expression
Rule 100   expression -> expression IGIG expression
Rule 101   expression -> expression DIF expression
Rule 102   expression -> expression MAYQUE expression
Rule 103   expression -> expression MENQUE expression
Rule 104   expression -> expression MAYIGUAL expression
Rule 105   expression -> expression MENIGUAL expression
Rule 106   expression -> expression OR expression
Rule 107   expression -> expression AND expression
Rule 108   expression -> NOT expression
Rule 109   expression -> PARIZQ expression PARDER
Rule 110   expression -> ID PARIZQ expressionList PARDER
Rule 111   expression -> ID PARIZQ PARDER
Rule 112   booleano -> TRUE
Rule 113   booleano -> FALSE
Rule 114   expression -> ENTERO
Rule 115   expression -> DECIMAL
Rule 116   expression -> CADENA
Rule 117   expression -> booleano
Rule 118   expression -> listArray
Rule 119   expression -> accesoInterface
Rule 120   expression -> accesoMatriz
Rule 121   expression -> funcEspecialObject
Rule 122   expression -> funcionEmbebida
Rule 123   expression -> ID PUNTO popjoin PARIZQ PARDER
Rule 124   popjoin -> POP
Rule 125   popjoin -> JOIN
Rule 126   expression -> ID PUNTO INDEXOF PARIZQ expression PARDER
Rule 127   expression -> ID PUNTO LENGTH
Rule 128   arrayPrimitivo -> CORIZQ expressionList CORDER
Rule 129   matrizPrimitiva -> CORIZQ listaArrays CORDER
Rule 130   arrayMatricial -> CORIZQ expressionList CORDER
Rule 131   arrayMatricial -> CORIZQ listaArrays CORDER
Rule 132   listaArrays -> listaArrays COMA arrayMatricial
Rule 133   listaArrays -> arrayMatricial
Rule 134   listArray -> ID CORIZQ expression CORDER
Rule 135   listArray -> ID
Rule 136   accesoInterface -> ID PUNTO ID
Rule 137   funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER
Rule 138   funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER
Rule 139   funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER
Rule 140   funcionEmbebida -> PARSEINT PARIZQ expression PARDER
Rule 141   funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER
Rule 142   funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER
Rule 143   funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER
Rule 144   funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER
Rule 145   funcionEmbebida -> TYPEOF ID
Rule 146   accesoMatriz -> ID accesosMatriz
Rule 147   accesosMatriz -> accesosMatriz acceso
Rule 148   accesosMatriz -> acceso
Rule 149   acceso -> CORIZQ expression CORDER

Terminals, with rules where they appear

AND                  : 107
BOOL                 : 81
BREAK                : 76
CADENA               : 116
CASE                 : 60
CHAR                 : 82
COMA                 : 68 90 92 132
CONSOLE              : 33
CONST                : 39 40 44 45 89
CONTINUE             : 77
CORDER               : 41 48 128 129 130 131 134 149
CORIZQ               : 41 48 128 129 130 131 134 149
DECIMAL              : 115
DEFAULT              : 57
DIF                  : 101
DIVIDIDO             : 98
DOSPTS               : 34 36 39 41 43 44 45 57 60 68 69 70 86 87 88 89 90 91
ELSE                 : 50 52 55
ENTERO               : 114
FALSE                : 113
FLOAT                : 79
FOR                  : 62
FUNC                 : 65
ID                   : 34 35 36 37 39 40 41 42 43 44 45 63 64 65 68 69 72 73 83 85 86 87 88 88 89 89 90 91 110 111 123 126 127 134 135 136 136 141 143 144 145 146
IF                   : 49 50 51 52 55
IG                   : 34 35 37 38 39 40 41 43 44 45 88 89
IGIG                 : 100
INDEXOF              : 126
INTERFACE            : 85
JOIN                 : 125
KEYS                 : 138
LENGTH               : 127
LLAVEDER             : 49 50 50 51 52 52 55 56 57 61 62 65 85 88 89
LLAVEIZQ             : 49 50 50 51 52 52 55 56 57 61 62 65 85 88 89
LOG                  : 33
MAS                  : 63 63 64 64 95
MAYIGUAL             : 104
MAYQUE               : 102
MENIGUAL             : 105
MENOS                : 94 96
MENQUE               : 103
MODULO               : 99
NOT                  : 108
NUMBER               : 78
OBJECT               : 137 138
OR                   : 106
PARDER               : 33 42 49 50 51 52 55 56 57 61 62 66 67 72 73 109 110 111 123 126 137 138 139 140 141 142 143 144
PARIZQ               : 33 42 49 50 51 52 55 56 57 61 62 66 67 72 73 109 110 111 123 126 137 138 139 140 141 142 143 144
PARSEFLOAT           : 139
PARSEINT             : 140
POP                  : 124
POR                  : 97
PUNTO                : 33 42 123 126 127 136 137 138 141 142 143 144
PUSH                 : 42
PYC                  : 33 34 35 36 37 38 39 40 41 42 43 44 45 62 63 72 73 74 75 76 77 86 87 88 89
RETURN               : 74 75
STRING               : 80
SWITCH               : 56 57
TERN                 : 
TOLOWERCASE          : 143
TOSTRING             : 141 142
TOUPPERCASE          : 144
TRUE                 : 112
TYPEOF               : 145
VALUES               : 137
VAR                  : 34 35 36 41 43 88
WHILE                : 61
error                : 

Nonterminals, with rules where they appear

acceso               : 147 148
accesoInterface      : 119
accesoMatriz         : 38 120
accesosMatriz        : 146 147
arrayDeclaration     : 20
arrayMatricial       : 132 133
arrayPrimitivo       : 41 45
arrayPush            : 23
asignacion           : 16
asignacionIndMatriz  : 17
attributeList        : 85 86
block                : 1 2 49 50 50 51 52 52 55 57 60 61 62 65
booleano             : 117
breakstmt            : 24
call                 : 32
caso                 : 58 59
casos                : 56 57 58
continuestmt         : 25
corchete             : 46 47 84
corchetes            : 43 44 45 46
declConstanteValor   : 19
declaracionConstante : 18
declaracionTipo      : 15
declaracionValor     : 14
declaration          : 13 62
elseif               : 53 54
elseifs              : 51 52 53
expression           : 34 35 37 38 39 40 42 49 50 51 52 55 56 57 60 61 62 74 90 91 92 93 94 95 95 96 96 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 105 106 106 107 107 108 109 126 134 137 138 139 140 142 149
expressionList       : 33 72 92 110 128 130
forRange             : 12
funcEspecialObject   : 121
funcionEmbebida      : 122
funcparams           : 65
functionstmt         : 27
functype             : 65
ifElse               : 6
ifElseIfs            : 7
ifElseIfsElse        : 8
ifinstruction        : 5
incremento           : 62
incrementoIns        : 31
instruccion          : 2 3
interdeclaration     : 28
interdeclarationConst : 30
interfaceContent     : 88 89 90
interfacecreation    : 29
listArray            : 118
listaArrays          : 129 131 132
matrizConstante      : 22
matrizPrimitiva      : 43 44
matrizVariable       : 21
paramsList           : 66 68
popjoin              : 123
print                : 4
returnstmt           : 26
s                    : 0
switchCase           : 9
switchCaseDefault    : 10
type                 : 34 36 39 41 43 44 45 68 69 70 84 86 87
whileInstruction     : 11

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . block
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    s                              shift and go to state 1
    block                          shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 1

    (0) S' -> s .



state 2

    (1) s -> block .
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    $end            reduce using rule 1 (s -> block .)
    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    instruccion                    shift and go to state 47
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 3

    (3) block -> instruccion .

    CONSOLE         reduce using rule 3 (block -> instruccion .)
    IF              reduce using rule 3 (block -> instruccion .)
    SWITCH          reduce using rule 3 (block -> instruccion .)
    WHILE           reduce using rule 3 (block -> instruccion .)
    FOR             reduce using rule 3 (block -> instruccion .)
    VAR             reduce using rule 3 (block -> instruccion .)
    ID              reduce using rule 3 (block -> instruccion .)
    CONST           reduce using rule 3 (block -> instruccion .)
    BREAK           reduce using rule 3 (block -> instruccion .)
    CONTINUE        reduce using rule 3 (block -> instruccion .)
    RETURN          reduce using rule 3 (block -> instruccion .)
    FUNC            reduce using rule 3 (block -> instruccion .)
    INTERFACE       reduce using rule 3 (block -> instruccion .)
    $end            reduce using rule 3 (block -> instruccion .)
    LLAVEDER        reduce using rule 3 (block -> instruccion .)
    DEFAULT         reduce using rule 3 (block -> instruccion .)
    CASE            reduce using rule 3 (block -> instruccion .)


state 4

    (4) instruccion -> print .

    CONSOLE         reduce using rule 4 (instruccion -> print .)
    IF              reduce using rule 4 (instruccion -> print .)
    SWITCH          reduce using rule 4 (instruccion -> print .)
    WHILE           reduce using rule 4 (instruccion -> print .)
    FOR             reduce using rule 4 (instruccion -> print .)
    VAR             reduce using rule 4 (instruccion -> print .)
    ID              reduce using rule 4 (instruccion -> print .)
    CONST           reduce using rule 4 (instruccion -> print .)
    BREAK           reduce using rule 4 (instruccion -> print .)
    CONTINUE        reduce using rule 4 (instruccion -> print .)
    RETURN          reduce using rule 4 (instruccion -> print .)
    FUNC            reduce using rule 4 (instruccion -> print .)
    INTERFACE       reduce using rule 4 (instruccion -> print .)
    $end            reduce using rule 4 (instruccion -> print .)
    LLAVEDER        reduce using rule 4 (instruccion -> print .)
    DEFAULT         reduce using rule 4 (instruccion -> print .)
    CASE            reduce using rule 4 (instruccion -> print .)


state 5

    (5) instruccion -> ifinstruction .

    CONSOLE         reduce using rule 5 (instruccion -> ifinstruction .)
    IF              reduce using rule 5 (instruccion -> ifinstruction .)
    SWITCH          reduce using rule 5 (instruccion -> ifinstruction .)
    WHILE           reduce using rule 5 (instruccion -> ifinstruction .)
    FOR             reduce using rule 5 (instruccion -> ifinstruction .)
    VAR             reduce using rule 5 (instruccion -> ifinstruction .)
    ID              reduce using rule 5 (instruccion -> ifinstruction .)
    CONST           reduce using rule 5 (instruccion -> ifinstruction .)
    BREAK           reduce using rule 5 (instruccion -> ifinstruction .)
    CONTINUE        reduce using rule 5 (instruccion -> ifinstruction .)
    RETURN          reduce using rule 5 (instruccion -> ifinstruction .)
    FUNC            reduce using rule 5 (instruccion -> ifinstruction .)
    INTERFACE       reduce using rule 5 (instruccion -> ifinstruction .)
    $end            reduce using rule 5 (instruccion -> ifinstruction .)
    LLAVEDER        reduce using rule 5 (instruccion -> ifinstruction .)
    DEFAULT         reduce using rule 5 (instruccion -> ifinstruction .)
    CASE            reduce using rule 5 (instruccion -> ifinstruction .)


state 6

    (6) instruccion -> ifElse .

    CONSOLE         reduce using rule 6 (instruccion -> ifElse .)
    IF              reduce using rule 6 (instruccion -> ifElse .)
    SWITCH          reduce using rule 6 (instruccion -> ifElse .)
    WHILE           reduce using rule 6 (instruccion -> ifElse .)
    FOR             reduce using rule 6 (instruccion -> ifElse .)
    VAR             reduce using rule 6 (instruccion -> ifElse .)
    ID              reduce using rule 6 (instruccion -> ifElse .)
    CONST           reduce using rule 6 (instruccion -> ifElse .)
    BREAK           reduce using rule 6 (instruccion -> ifElse .)
    CONTINUE        reduce using rule 6 (instruccion -> ifElse .)
    RETURN          reduce using rule 6 (instruccion -> ifElse .)
    FUNC            reduce using rule 6 (instruccion -> ifElse .)
    INTERFACE       reduce using rule 6 (instruccion -> ifElse .)
    $end            reduce using rule 6 (instruccion -> ifElse .)
    LLAVEDER        reduce using rule 6 (instruccion -> ifElse .)
    DEFAULT         reduce using rule 6 (instruccion -> ifElse .)
    CASE            reduce using rule 6 (instruccion -> ifElse .)


state 7

    (7) instruccion -> ifElseIfs .

    CONSOLE         reduce using rule 7 (instruccion -> ifElseIfs .)
    IF              reduce using rule 7 (instruccion -> ifElseIfs .)
    SWITCH          reduce using rule 7 (instruccion -> ifElseIfs .)
    WHILE           reduce using rule 7 (instruccion -> ifElseIfs .)
    FOR             reduce using rule 7 (instruccion -> ifElseIfs .)
    VAR             reduce using rule 7 (instruccion -> ifElseIfs .)
    ID              reduce using rule 7 (instruccion -> ifElseIfs .)
    CONST           reduce using rule 7 (instruccion -> ifElseIfs .)
    BREAK           reduce using rule 7 (instruccion -> ifElseIfs .)
    CONTINUE        reduce using rule 7 (instruccion -> ifElseIfs .)
    RETURN          reduce using rule 7 (instruccion -> ifElseIfs .)
    FUNC            reduce using rule 7 (instruccion -> ifElseIfs .)
    INTERFACE       reduce using rule 7 (instruccion -> ifElseIfs .)
    $end            reduce using rule 7 (instruccion -> ifElseIfs .)
    LLAVEDER        reduce using rule 7 (instruccion -> ifElseIfs .)
    DEFAULT         reduce using rule 7 (instruccion -> ifElseIfs .)
    CASE            reduce using rule 7 (instruccion -> ifElseIfs .)


state 8

    (8) instruccion -> ifElseIfsElse .

    CONSOLE         reduce using rule 8 (instruccion -> ifElseIfsElse .)
    IF              reduce using rule 8 (instruccion -> ifElseIfsElse .)
    SWITCH          reduce using rule 8 (instruccion -> ifElseIfsElse .)
    WHILE           reduce using rule 8 (instruccion -> ifElseIfsElse .)
    FOR             reduce using rule 8 (instruccion -> ifElseIfsElse .)
    VAR             reduce using rule 8 (instruccion -> ifElseIfsElse .)
    ID              reduce using rule 8 (instruccion -> ifElseIfsElse .)
    CONST           reduce using rule 8 (instruccion -> ifElseIfsElse .)
    BREAK           reduce using rule 8 (instruccion -> ifElseIfsElse .)
    CONTINUE        reduce using rule 8 (instruccion -> ifElseIfsElse .)
    RETURN          reduce using rule 8 (instruccion -> ifElseIfsElse .)
    FUNC            reduce using rule 8 (instruccion -> ifElseIfsElse .)
    INTERFACE       reduce using rule 8 (instruccion -> ifElseIfsElse .)
    $end            reduce using rule 8 (instruccion -> ifElseIfsElse .)
    LLAVEDER        reduce using rule 8 (instruccion -> ifElseIfsElse .)
    DEFAULT         reduce using rule 8 (instruccion -> ifElseIfsElse .)
    CASE            reduce using rule 8 (instruccion -> ifElseIfsElse .)


state 9

    (9) instruccion -> switchCase .

    CONSOLE         reduce using rule 9 (instruccion -> switchCase .)
    IF              reduce using rule 9 (instruccion -> switchCase .)
    SWITCH          reduce using rule 9 (instruccion -> switchCase .)
    WHILE           reduce using rule 9 (instruccion -> switchCase .)
    FOR             reduce using rule 9 (instruccion -> switchCase .)
    VAR             reduce using rule 9 (instruccion -> switchCase .)
    ID              reduce using rule 9 (instruccion -> switchCase .)
    CONST           reduce using rule 9 (instruccion -> switchCase .)
    BREAK           reduce using rule 9 (instruccion -> switchCase .)
    CONTINUE        reduce using rule 9 (instruccion -> switchCase .)
    RETURN          reduce using rule 9 (instruccion -> switchCase .)
    FUNC            reduce using rule 9 (instruccion -> switchCase .)
    INTERFACE       reduce using rule 9 (instruccion -> switchCase .)
    $end            reduce using rule 9 (instruccion -> switchCase .)
    LLAVEDER        reduce using rule 9 (instruccion -> switchCase .)
    DEFAULT         reduce using rule 9 (instruccion -> switchCase .)
    CASE            reduce using rule 9 (instruccion -> switchCase .)


state 10

    (10) instruccion -> switchCaseDefault .

    CONSOLE         reduce using rule 10 (instruccion -> switchCaseDefault .)
    IF              reduce using rule 10 (instruccion -> switchCaseDefault .)
    SWITCH          reduce using rule 10 (instruccion -> switchCaseDefault .)
    WHILE           reduce using rule 10 (instruccion -> switchCaseDefault .)
    FOR             reduce using rule 10 (instruccion -> switchCaseDefault .)
    VAR             reduce using rule 10 (instruccion -> switchCaseDefault .)
    ID              reduce using rule 10 (instruccion -> switchCaseDefault .)
    CONST           reduce using rule 10 (instruccion -> switchCaseDefault .)
    BREAK           reduce using rule 10 (instruccion -> switchCaseDefault .)
    CONTINUE        reduce using rule 10 (instruccion -> switchCaseDefault .)
    RETURN          reduce using rule 10 (instruccion -> switchCaseDefault .)
    FUNC            reduce using rule 10 (instruccion -> switchCaseDefault .)
    INTERFACE       reduce using rule 10 (instruccion -> switchCaseDefault .)
    $end            reduce using rule 10 (instruccion -> switchCaseDefault .)
    LLAVEDER        reduce using rule 10 (instruccion -> switchCaseDefault .)
    DEFAULT         reduce using rule 10 (instruccion -> switchCaseDefault .)
    CASE            reduce using rule 10 (instruccion -> switchCaseDefault .)


state 11

    (11) instruccion -> whileInstruction .

    CONSOLE         reduce using rule 11 (instruccion -> whileInstruction .)
    IF              reduce using rule 11 (instruccion -> whileInstruction .)
    SWITCH          reduce using rule 11 (instruccion -> whileInstruction .)
    WHILE           reduce using rule 11 (instruccion -> whileInstruction .)
    FOR             reduce using rule 11 (instruccion -> whileInstruction .)
    VAR             reduce using rule 11 (instruccion -> whileInstruction .)
    ID              reduce using rule 11 (instruccion -> whileInstruction .)
    CONST           reduce using rule 11 (instruccion -> whileInstruction .)
    BREAK           reduce using rule 11 (instruccion -> whileInstruction .)
    CONTINUE        reduce using rule 11 (instruccion -> whileInstruction .)
    RETURN          reduce using rule 11 (instruccion -> whileInstruction .)
    FUNC            reduce using rule 11 (instruccion -> whileInstruction .)
    INTERFACE       reduce using rule 11 (instruccion -> whileInstruction .)
    $end            reduce using rule 11 (instruccion -> whileInstruction .)
    LLAVEDER        reduce using rule 11 (instruccion -> whileInstruction .)
    DEFAULT         reduce using rule 11 (instruccion -> whileInstruction .)
    CASE            reduce using rule 11 (instruccion -> whileInstruction .)


state 12

    (12) instruccion -> forRange .

    CONSOLE         reduce using rule 12 (instruccion -> forRange .)
    IF              reduce using rule 12 (instruccion -> forRange .)
    SWITCH          reduce using rule 12 (instruccion -> forRange .)
    WHILE           reduce using rule 12 (instruccion -> forRange .)
    FOR             reduce using rule 12 (instruccion -> forRange .)
    VAR             reduce using rule 12 (instruccion -> forRange .)
    ID              reduce using rule 12 (instruccion -> forRange .)
    CONST           reduce using rule 12 (instruccion -> forRange .)
    BREAK           reduce using rule 12 (instruccion -> forRange .)
    CONTINUE        reduce using rule 12 (instruccion -> forRange .)
    RETURN          reduce using rule 12 (instruccion -> forRange .)
    FUNC            reduce using rule 12 (instruccion -> forRange .)
    INTERFACE       reduce using rule 12 (instruccion -> forRange .)
    $end            reduce using rule 12 (instruccion -> forRange .)
    LLAVEDER        reduce using rule 12 (instruccion -> forRange .)
    DEFAULT         reduce using rule 12 (instruccion -> forRange .)
    CASE            reduce using rule 12 (instruccion -> forRange .)


state 13

    (13) instruccion -> declaration .

    CONSOLE         reduce using rule 13 (instruccion -> declaration .)
    IF              reduce using rule 13 (instruccion -> declaration .)
    SWITCH          reduce using rule 13 (instruccion -> declaration .)
    WHILE           reduce using rule 13 (instruccion -> declaration .)
    FOR             reduce using rule 13 (instruccion -> declaration .)
    VAR             reduce using rule 13 (instruccion -> declaration .)
    ID              reduce using rule 13 (instruccion -> declaration .)
    CONST           reduce using rule 13 (instruccion -> declaration .)
    BREAK           reduce using rule 13 (instruccion -> declaration .)
    CONTINUE        reduce using rule 13 (instruccion -> declaration .)
    RETURN          reduce using rule 13 (instruccion -> declaration .)
    FUNC            reduce using rule 13 (instruccion -> declaration .)
    INTERFACE       reduce using rule 13 (instruccion -> declaration .)
    $end            reduce using rule 13 (instruccion -> declaration .)
    LLAVEDER        reduce using rule 13 (instruccion -> declaration .)
    DEFAULT         reduce using rule 13 (instruccion -> declaration .)
    CASE            reduce using rule 13 (instruccion -> declaration .)


state 14

    (14) instruccion -> declaracionValor .

    CONSOLE         reduce using rule 14 (instruccion -> declaracionValor .)
    IF              reduce using rule 14 (instruccion -> declaracionValor .)
    SWITCH          reduce using rule 14 (instruccion -> declaracionValor .)
    WHILE           reduce using rule 14 (instruccion -> declaracionValor .)
    FOR             reduce using rule 14 (instruccion -> declaracionValor .)
    VAR             reduce using rule 14 (instruccion -> declaracionValor .)
    ID              reduce using rule 14 (instruccion -> declaracionValor .)
    CONST           reduce using rule 14 (instruccion -> declaracionValor .)
    BREAK           reduce using rule 14 (instruccion -> declaracionValor .)
    CONTINUE        reduce using rule 14 (instruccion -> declaracionValor .)
    RETURN          reduce using rule 14 (instruccion -> declaracionValor .)
    FUNC            reduce using rule 14 (instruccion -> declaracionValor .)
    INTERFACE       reduce using rule 14 (instruccion -> declaracionValor .)
    $end            reduce using rule 14 (instruccion -> declaracionValor .)
    LLAVEDER        reduce using rule 14 (instruccion -> declaracionValor .)
    DEFAULT         reduce using rule 14 (instruccion -> declaracionValor .)
    CASE            reduce using rule 14 (instruccion -> declaracionValor .)


state 15

    (15) instruccion -> declaracionTipo .

    CONSOLE         reduce using rule 15 (instruccion -> declaracionTipo .)
    IF              reduce using rule 15 (instruccion -> declaracionTipo .)
    SWITCH          reduce using rule 15 (instruccion -> declaracionTipo .)
    WHILE           reduce using rule 15 (instruccion -> declaracionTipo .)
    FOR             reduce using rule 15 (instruccion -> declaracionTipo .)
    VAR             reduce using rule 15 (instruccion -> declaracionTipo .)
    ID              reduce using rule 15 (instruccion -> declaracionTipo .)
    CONST           reduce using rule 15 (instruccion -> declaracionTipo .)
    BREAK           reduce using rule 15 (instruccion -> declaracionTipo .)
    CONTINUE        reduce using rule 15 (instruccion -> declaracionTipo .)
    RETURN          reduce using rule 15 (instruccion -> declaracionTipo .)
    FUNC            reduce using rule 15 (instruccion -> declaracionTipo .)
    INTERFACE       reduce using rule 15 (instruccion -> declaracionTipo .)
    $end            reduce using rule 15 (instruccion -> declaracionTipo .)
    LLAVEDER        reduce using rule 15 (instruccion -> declaracionTipo .)
    DEFAULT         reduce using rule 15 (instruccion -> declaracionTipo .)
    CASE            reduce using rule 15 (instruccion -> declaracionTipo .)


state 16

    (16) instruccion -> asignacion .

    CONSOLE         reduce using rule 16 (instruccion -> asignacion .)
    IF              reduce using rule 16 (instruccion -> asignacion .)
    SWITCH          reduce using rule 16 (instruccion -> asignacion .)
    WHILE           reduce using rule 16 (instruccion -> asignacion .)
    FOR             reduce using rule 16 (instruccion -> asignacion .)
    VAR             reduce using rule 16 (instruccion -> asignacion .)
    ID              reduce using rule 16 (instruccion -> asignacion .)
    CONST           reduce using rule 16 (instruccion -> asignacion .)
    BREAK           reduce using rule 16 (instruccion -> asignacion .)
    CONTINUE        reduce using rule 16 (instruccion -> asignacion .)
    RETURN          reduce using rule 16 (instruccion -> asignacion .)
    FUNC            reduce using rule 16 (instruccion -> asignacion .)
    INTERFACE       reduce using rule 16 (instruccion -> asignacion .)
    $end            reduce using rule 16 (instruccion -> asignacion .)
    LLAVEDER        reduce using rule 16 (instruccion -> asignacion .)
    DEFAULT         reduce using rule 16 (instruccion -> asignacion .)
    CASE            reduce using rule 16 (instruccion -> asignacion .)


state 17

    (17) instruccion -> asignacionIndMatriz .

    CONSOLE         reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    IF              reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    SWITCH          reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    WHILE           reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    FOR             reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    VAR             reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    ID              reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    CONST           reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    BREAK           reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    CONTINUE        reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    RETURN          reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    FUNC            reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    INTERFACE       reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    $end            reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    LLAVEDER        reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    DEFAULT         reduce using rule 17 (instruccion -> asignacionIndMatriz .)
    CASE            reduce using rule 17 (instruccion -> asignacionIndMatriz .)


state 18

    (18) instruccion -> declaracionConstante .

    CONSOLE         reduce using rule 18 (instruccion -> declaracionConstante .)
    IF              reduce using rule 18 (instruccion -> declaracionConstante .)
    SWITCH          reduce using rule 18 (instruccion -> declaracionConstante .)
    WHILE           reduce using rule 18 (instruccion -> declaracionConstante .)
    FOR             reduce using rule 18 (instruccion -> declaracionConstante .)
    VAR             reduce using rule 18 (instruccion -> declaracionConstante .)
    ID              reduce using rule 18 (instruccion -> declaracionConstante .)
    CONST           reduce using rule 18 (instruccion -> declaracionConstante .)
    BREAK           reduce using rule 18 (instruccion -> declaracionConstante .)
    CONTINUE        reduce using rule 18 (instruccion -> declaracionConstante .)
    RETURN          reduce using rule 18 (instruccion -> declaracionConstante .)
    FUNC            reduce using rule 18 (instruccion -> declaracionConstante .)
    INTERFACE       reduce using rule 18 (instruccion -> declaracionConstante .)
    $end            reduce using rule 18 (instruccion -> declaracionConstante .)
    LLAVEDER        reduce using rule 18 (instruccion -> declaracionConstante .)
    DEFAULT         reduce using rule 18 (instruccion -> declaracionConstante .)
    CASE            reduce using rule 18 (instruccion -> declaracionConstante .)


state 19

    (19) instruccion -> declConstanteValor .

    CONSOLE         reduce using rule 19 (instruccion -> declConstanteValor .)
    IF              reduce using rule 19 (instruccion -> declConstanteValor .)
    SWITCH          reduce using rule 19 (instruccion -> declConstanteValor .)
    WHILE           reduce using rule 19 (instruccion -> declConstanteValor .)
    FOR             reduce using rule 19 (instruccion -> declConstanteValor .)
    VAR             reduce using rule 19 (instruccion -> declConstanteValor .)
    ID              reduce using rule 19 (instruccion -> declConstanteValor .)
    CONST           reduce using rule 19 (instruccion -> declConstanteValor .)
    BREAK           reduce using rule 19 (instruccion -> declConstanteValor .)
    CONTINUE        reduce using rule 19 (instruccion -> declConstanteValor .)
    RETURN          reduce using rule 19 (instruccion -> declConstanteValor .)
    FUNC            reduce using rule 19 (instruccion -> declConstanteValor .)
    INTERFACE       reduce using rule 19 (instruccion -> declConstanteValor .)
    $end            reduce using rule 19 (instruccion -> declConstanteValor .)
    LLAVEDER        reduce using rule 19 (instruccion -> declConstanteValor .)
    DEFAULT         reduce using rule 19 (instruccion -> declConstanteValor .)
    CASE            reduce using rule 19 (instruccion -> declConstanteValor .)


state 20

    (20) instruccion -> arrayDeclaration .

    CONSOLE         reduce using rule 20 (instruccion -> arrayDeclaration .)
    IF              reduce using rule 20 (instruccion -> arrayDeclaration .)
    SWITCH          reduce using rule 20 (instruccion -> arrayDeclaration .)
    WHILE           reduce using rule 20 (instruccion -> arrayDeclaration .)
    FOR             reduce using rule 20 (instruccion -> arrayDeclaration .)
    VAR             reduce using rule 20 (instruccion -> arrayDeclaration .)
    ID              reduce using rule 20 (instruccion -> arrayDeclaration .)
    CONST           reduce using rule 20 (instruccion -> arrayDeclaration .)
    BREAK           reduce using rule 20 (instruccion -> arrayDeclaration .)
    CONTINUE        reduce using rule 20 (instruccion -> arrayDeclaration .)
    RETURN          reduce using rule 20 (instruccion -> arrayDeclaration .)
    FUNC            reduce using rule 20 (instruccion -> arrayDeclaration .)
    INTERFACE       reduce using rule 20 (instruccion -> arrayDeclaration .)
    $end            reduce using rule 20 (instruccion -> arrayDeclaration .)
    LLAVEDER        reduce using rule 20 (instruccion -> arrayDeclaration .)
    DEFAULT         reduce using rule 20 (instruccion -> arrayDeclaration .)
    CASE            reduce using rule 20 (instruccion -> arrayDeclaration .)


state 21

    (21) instruccion -> matrizVariable .

    CONSOLE         reduce using rule 21 (instruccion -> matrizVariable .)
    IF              reduce using rule 21 (instruccion -> matrizVariable .)
    SWITCH          reduce using rule 21 (instruccion -> matrizVariable .)
    WHILE           reduce using rule 21 (instruccion -> matrizVariable .)
    FOR             reduce using rule 21 (instruccion -> matrizVariable .)
    VAR             reduce using rule 21 (instruccion -> matrizVariable .)
    ID              reduce using rule 21 (instruccion -> matrizVariable .)
    CONST           reduce using rule 21 (instruccion -> matrizVariable .)
    BREAK           reduce using rule 21 (instruccion -> matrizVariable .)
    CONTINUE        reduce using rule 21 (instruccion -> matrizVariable .)
    RETURN          reduce using rule 21 (instruccion -> matrizVariable .)
    FUNC            reduce using rule 21 (instruccion -> matrizVariable .)
    INTERFACE       reduce using rule 21 (instruccion -> matrizVariable .)
    $end            reduce using rule 21 (instruccion -> matrizVariable .)
    LLAVEDER        reduce using rule 21 (instruccion -> matrizVariable .)
    DEFAULT         reduce using rule 21 (instruccion -> matrizVariable .)
    CASE            reduce using rule 21 (instruccion -> matrizVariable .)


state 22

    (22) instruccion -> matrizConstante .

    CONSOLE         reduce using rule 22 (instruccion -> matrizConstante .)
    IF              reduce using rule 22 (instruccion -> matrizConstante .)
    SWITCH          reduce using rule 22 (instruccion -> matrizConstante .)
    WHILE           reduce using rule 22 (instruccion -> matrizConstante .)
    FOR             reduce using rule 22 (instruccion -> matrizConstante .)
    VAR             reduce using rule 22 (instruccion -> matrizConstante .)
    ID              reduce using rule 22 (instruccion -> matrizConstante .)
    CONST           reduce using rule 22 (instruccion -> matrizConstante .)
    BREAK           reduce using rule 22 (instruccion -> matrizConstante .)
    CONTINUE        reduce using rule 22 (instruccion -> matrizConstante .)
    RETURN          reduce using rule 22 (instruccion -> matrizConstante .)
    FUNC            reduce using rule 22 (instruccion -> matrizConstante .)
    INTERFACE       reduce using rule 22 (instruccion -> matrizConstante .)
    $end            reduce using rule 22 (instruccion -> matrizConstante .)
    LLAVEDER        reduce using rule 22 (instruccion -> matrizConstante .)
    DEFAULT         reduce using rule 22 (instruccion -> matrizConstante .)
    CASE            reduce using rule 22 (instruccion -> matrizConstante .)


state 23

    (23) instruccion -> arrayPush .

    CONSOLE         reduce using rule 23 (instruccion -> arrayPush .)
    IF              reduce using rule 23 (instruccion -> arrayPush .)
    SWITCH          reduce using rule 23 (instruccion -> arrayPush .)
    WHILE           reduce using rule 23 (instruccion -> arrayPush .)
    FOR             reduce using rule 23 (instruccion -> arrayPush .)
    VAR             reduce using rule 23 (instruccion -> arrayPush .)
    ID              reduce using rule 23 (instruccion -> arrayPush .)
    CONST           reduce using rule 23 (instruccion -> arrayPush .)
    BREAK           reduce using rule 23 (instruccion -> arrayPush .)
    CONTINUE        reduce using rule 23 (instruccion -> arrayPush .)
    RETURN          reduce using rule 23 (instruccion -> arrayPush .)
    FUNC            reduce using rule 23 (instruccion -> arrayPush .)
    INTERFACE       reduce using rule 23 (instruccion -> arrayPush .)
    $end            reduce using rule 23 (instruccion -> arrayPush .)
    LLAVEDER        reduce using rule 23 (instruccion -> arrayPush .)
    DEFAULT         reduce using rule 23 (instruccion -> arrayPush .)
    CASE            reduce using rule 23 (instruccion -> arrayPush .)


state 24

    (24) instruccion -> breakstmt .

    CONSOLE         reduce using rule 24 (instruccion -> breakstmt .)
    IF              reduce using rule 24 (instruccion -> breakstmt .)
    SWITCH          reduce using rule 24 (instruccion -> breakstmt .)
    WHILE           reduce using rule 24 (instruccion -> breakstmt .)
    FOR             reduce using rule 24 (instruccion -> breakstmt .)
    VAR             reduce using rule 24 (instruccion -> breakstmt .)
    ID              reduce using rule 24 (instruccion -> breakstmt .)
    CONST           reduce using rule 24 (instruccion -> breakstmt .)
    BREAK           reduce using rule 24 (instruccion -> breakstmt .)
    CONTINUE        reduce using rule 24 (instruccion -> breakstmt .)
    RETURN          reduce using rule 24 (instruccion -> breakstmt .)
    FUNC            reduce using rule 24 (instruccion -> breakstmt .)
    INTERFACE       reduce using rule 24 (instruccion -> breakstmt .)
    $end            reduce using rule 24 (instruccion -> breakstmt .)
    LLAVEDER        reduce using rule 24 (instruccion -> breakstmt .)
    DEFAULT         reduce using rule 24 (instruccion -> breakstmt .)
    CASE            reduce using rule 24 (instruccion -> breakstmt .)


state 25

    (25) instruccion -> continuestmt .

    CONSOLE         reduce using rule 25 (instruccion -> continuestmt .)
    IF              reduce using rule 25 (instruccion -> continuestmt .)
    SWITCH          reduce using rule 25 (instruccion -> continuestmt .)
    WHILE           reduce using rule 25 (instruccion -> continuestmt .)
    FOR             reduce using rule 25 (instruccion -> continuestmt .)
    VAR             reduce using rule 25 (instruccion -> continuestmt .)
    ID              reduce using rule 25 (instruccion -> continuestmt .)
    CONST           reduce using rule 25 (instruccion -> continuestmt .)
    BREAK           reduce using rule 25 (instruccion -> continuestmt .)
    CONTINUE        reduce using rule 25 (instruccion -> continuestmt .)
    RETURN          reduce using rule 25 (instruccion -> continuestmt .)
    FUNC            reduce using rule 25 (instruccion -> continuestmt .)
    INTERFACE       reduce using rule 25 (instruccion -> continuestmt .)
    $end            reduce using rule 25 (instruccion -> continuestmt .)
    LLAVEDER        reduce using rule 25 (instruccion -> continuestmt .)
    DEFAULT         reduce using rule 25 (instruccion -> continuestmt .)
    CASE            reduce using rule 25 (instruccion -> continuestmt .)


state 26

    (26) instruccion -> returnstmt .

    CONSOLE         reduce using rule 26 (instruccion -> returnstmt .)
    IF              reduce using rule 26 (instruccion -> returnstmt .)
    SWITCH          reduce using rule 26 (instruccion -> returnstmt .)
    WHILE           reduce using rule 26 (instruccion -> returnstmt .)
    FOR             reduce using rule 26 (instruccion -> returnstmt .)
    VAR             reduce using rule 26 (instruccion -> returnstmt .)
    ID              reduce using rule 26 (instruccion -> returnstmt .)
    CONST           reduce using rule 26 (instruccion -> returnstmt .)
    BREAK           reduce using rule 26 (instruccion -> returnstmt .)
    CONTINUE        reduce using rule 26 (instruccion -> returnstmt .)
    RETURN          reduce using rule 26 (instruccion -> returnstmt .)
    FUNC            reduce using rule 26 (instruccion -> returnstmt .)
    INTERFACE       reduce using rule 26 (instruccion -> returnstmt .)
    $end            reduce using rule 26 (instruccion -> returnstmt .)
    LLAVEDER        reduce using rule 26 (instruccion -> returnstmt .)
    DEFAULT         reduce using rule 26 (instruccion -> returnstmt .)
    CASE            reduce using rule 26 (instruccion -> returnstmt .)


state 27

    (27) instruccion -> functionstmt .

    CONSOLE         reduce using rule 27 (instruccion -> functionstmt .)
    IF              reduce using rule 27 (instruccion -> functionstmt .)
    SWITCH          reduce using rule 27 (instruccion -> functionstmt .)
    WHILE           reduce using rule 27 (instruccion -> functionstmt .)
    FOR             reduce using rule 27 (instruccion -> functionstmt .)
    VAR             reduce using rule 27 (instruccion -> functionstmt .)
    ID              reduce using rule 27 (instruccion -> functionstmt .)
    CONST           reduce using rule 27 (instruccion -> functionstmt .)
    BREAK           reduce using rule 27 (instruccion -> functionstmt .)
    CONTINUE        reduce using rule 27 (instruccion -> functionstmt .)
    RETURN          reduce using rule 27 (instruccion -> functionstmt .)
    FUNC            reduce using rule 27 (instruccion -> functionstmt .)
    INTERFACE       reduce using rule 27 (instruccion -> functionstmt .)
    $end            reduce using rule 27 (instruccion -> functionstmt .)
    LLAVEDER        reduce using rule 27 (instruccion -> functionstmt .)
    DEFAULT         reduce using rule 27 (instruccion -> functionstmt .)
    CASE            reduce using rule 27 (instruccion -> functionstmt .)


state 28

    (28) instruccion -> interdeclaration .

    CONSOLE         reduce using rule 28 (instruccion -> interdeclaration .)
    IF              reduce using rule 28 (instruccion -> interdeclaration .)
    SWITCH          reduce using rule 28 (instruccion -> interdeclaration .)
    WHILE           reduce using rule 28 (instruccion -> interdeclaration .)
    FOR             reduce using rule 28 (instruccion -> interdeclaration .)
    VAR             reduce using rule 28 (instruccion -> interdeclaration .)
    ID              reduce using rule 28 (instruccion -> interdeclaration .)
    CONST           reduce using rule 28 (instruccion -> interdeclaration .)
    BREAK           reduce using rule 28 (instruccion -> interdeclaration .)
    CONTINUE        reduce using rule 28 (instruccion -> interdeclaration .)
    RETURN          reduce using rule 28 (instruccion -> interdeclaration .)
    FUNC            reduce using rule 28 (instruccion -> interdeclaration .)
    INTERFACE       reduce using rule 28 (instruccion -> interdeclaration .)
    $end            reduce using rule 28 (instruccion -> interdeclaration .)
    LLAVEDER        reduce using rule 28 (instruccion -> interdeclaration .)
    DEFAULT         reduce using rule 28 (instruccion -> interdeclaration .)
    CASE            reduce using rule 28 (instruccion -> interdeclaration .)


state 29

    (29) instruccion -> interfacecreation .

    CONSOLE         reduce using rule 29 (instruccion -> interfacecreation .)
    IF              reduce using rule 29 (instruccion -> interfacecreation .)
    SWITCH          reduce using rule 29 (instruccion -> interfacecreation .)
    WHILE           reduce using rule 29 (instruccion -> interfacecreation .)
    FOR             reduce using rule 29 (instruccion -> interfacecreation .)
    VAR             reduce using rule 29 (instruccion -> interfacecreation .)
    ID              reduce using rule 29 (instruccion -> interfacecreation .)
    CONST           reduce using rule 29 (instruccion -> interfacecreation .)
    BREAK           reduce using rule 29 (instruccion -> interfacecreation .)
    CONTINUE        reduce using rule 29 (instruccion -> interfacecreation .)
    RETURN          reduce using rule 29 (instruccion -> interfacecreation .)
    FUNC            reduce using rule 29 (instruccion -> interfacecreation .)
    INTERFACE       reduce using rule 29 (instruccion -> interfacecreation .)
    $end            reduce using rule 29 (instruccion -> interfacecreation .)
    LLAVEDER        reduce using rule 29 (instruccion -> interfacecreation .)
    DEFAULT         reduce using rule 29 (instruccion -> interfacecreation .)
    CASE            reduce using rule 29 (instruccion -> interfacecreation .)


state 30

    (30) instruccion -> interdeclarationConst .

    CONSOLE         reduce using rule 30 (instruccion -> interdeclarationConst .)
    IF              reduce using rule 30 (instruccion -> interdeclarationConst .)
    SWITCH          reduce using rule 30 (instruccion -> interdeclarationConst .)
    WHILE           reduce using rule 30 (instruccion -> interdeclarationConst .)
    FOR             reduce using rule 30 (instruccion -> interdeclarationConst .)
    VAR             reduce using rule 30 (instruccion -> interdeclarationConst .)
    ID              reduce using rule 30 (instruccion -> interdeclarationConst .)
    CONST           reduce using rule 30 (instruccion -> interdeclarationConst .)
    BREAK           reduce using rule 30 (instruccion -> interdeclarationConst .)
    CONTINUE        reduce using rule 30 (instruccion -> interdeclarationConst .)
    RETURN          reduce using rule 30 (instruccion -> interdeclarationConst .)
    FUNC            reduce using rule 30 (instruccion -> interdeclarationConst .)
    INTERFACE       reduce using rule 30 (instruccion -> interdeclarationConst .)
    $end            reduce using rule 30 (instruccion -> interdeclarationConst .)
    LLAVEDER        reduce using rule 30 (instruccion -> interdeclarationConst .)
    DEFAULT         reduce using rule 30 (instruccion -> interdeclarationConst .)
    CASE            reduce using rule 30 (instruccion -> interdeclarationConst .)


state 31

    (31) instruccion -> incrementoIns .

    CONSOLE         reduce using rule 31 (instruccion -> incrementoIns .)
    IF              reduce using rule 31 (instruccion -> incrementoIns .)
    SWITCH          reduce using rule 31 (instruccion -> incrementoIns .)
    WHILE           reduce using rule 31 (instruccion -> incrementoIns .)
    FOR             reduce using rule 31 (instruccion -> incrementoIns .)
    VAR             reduce using rule 31 (instruccion -> incrementoIns .)
    ID              reduce using rule 31 (instruccion -> incrementoIns .)
    CONST           reduce using rule 31 (instruccion -> incrementoIns .)
    BREAK           reduce using rule 31 (instruccion -> incrementoIns .)
    CONTINUE        reduce using rule 31 (instruccion -> incrementoIns .)
    RETURN          reduce using rule 31 (instruccion -> incrementoIns .)
    FUNC            reduce using rule 31 (instruccion -> incrementoIns .)
    INTERFACE       reduce using rule 31 (instruccion -> incrementoIns .)
    $end            reduce using rule 31 (instruccion -> incrementoIns .)
    LLAVEDER        reduce using rule 31 (instruccion -> incrementoIns .)
    DEFAULT         reduce using rule 31 (instruccion -> incrementoIns .)
    CASE            reduce using rule 31 (instruccion -> incrementoIns .)


state 32

    (32) instruccion -> call .

    CONSOLE         reduce using rule 32 (instruccion -> call .)
    IF              reduce using rule 32 (instruccion -> call .)
    SWITCH          reduce using rule 32 (instruccion -> call .)
    WHILE           reduce using rule 32 (instruccion -> call .)
    FOR             reduce using rule 32 (instruccion -> call .)
    VAR             reduce using rule 32 (instruccion -> call .)
    ID              reduce using rule 32 (instruccion -> call .)
    CONST           reduce using rule 32 (instruccion -> call .)
    BREAK           reduce using rule 32 (instruccion -> call .)
    CONTINUE        reduce using rule 32 (instruccion -> call .)
    RETURN          reduce using rule 32 (instruccion -> call .)
    FUNC            reduce using rule 32 (instruccion -> call .)
    INTERFACE       reduce using rule 32 (instruccion -> call .)
    $end            reduce using rule 32 (instruccion -> call .)
    LLAVEDER        reduce using rule 32 (instruccion -> call .)
    DEFAULT         reduce using rule 32 (instruccion -> call .)
    CASE            reduce using rule 32 (instruccion -> call .)


state 33

    (33) print -> CONSOLE . PUNTO LOG PARIZQ expressionList PARDER PYC

    PUNTO           shift and go to state 48


state 34

    (49) ifinstruction -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 49


state 35

    (56) switchCase -> SWITCH . PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> SWITCH . PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER

    PARIZQ          shift and go to state 50


state 36

    (61) whileInstruction -> WHILE . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 51


state 37

    (62) forRange -> FOR . PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 52


state 38

    (34) declaration -> VAR . ID DOSPTS type IG expression PYC
    (35) declaracionValor -> VAR . ID IG expression PYC
    (36) declaracionTipo -> VAR . ID DOSPTS type PYC
    (41) arrayDeclaration -> VAR . ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> VAR . ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (88) interdeclaration -> VAR . ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    ID              shift and go to state 53


state 39

    (37) asignacion -> ID . IG expression PYC
    (42) arrayPush -> ID . PUNTO PUSH PARIZQ expression PARDER PYC
    (63) incrementoIns -> ID . MAS MAS PYC
    (72) call -> ID . PARIZQ expressionList PARDER PYC
    (73) call -> ID . PARIZQ PARDER PYC
    (146) accesoMatriz -> ID . accesosMatriz
    (147) accesosMatriz -> . accesosMatriz acceso
    (148) accesosMatriz -> . acceso
    (149) acceso -> . CORIZQ expression CORDER

    IG              shift and go to state 54
    PUNTO           shift and go to state 55
    MAS             shift and go to state 57
    PARIZQ          shift and go to state 56
    CORIZQ          shift and go to state 60

    accesosMatriz                  shift and go to state 58
    acceso                         shift and go to state 59

state 40

    (38) asignacionIndMatriz -> accesoMatriz . IG expression PYC

    IG              shift and go to state 61


state 41

    (39) declaracionConstante -> CONST . ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> CONST . ID IG expression PYC
    (44) matrizConstante -> CONST . ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> CONST . ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (89) interdeclarationConst -> CONST . ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    ID              shift and go to state 62


state 42

    (76) breakstmt -> BREAK . PYC

    PYC             shift and go to state 63


state 43

    (77) continuestmt -> CONTINUE . PYC

    PYC             shift and go to state 64


state 44

    (74) returnstmt -> RETURN . expression PYC
    (75) returnstmt -> RETURN . PYC
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    PYC             shift and go to state 66
    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 65
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 45

    (65) functionstmt -> FUNC . ID funcparams functype LLAVEIZQ block LLAVEDER

    ID              shift and go to state 86


state 46

    (85) interfacecreation -> INTERFACE . ID LLAVEIZQ attributeList LLAVEDER

    ID              shift and go to state 87


state 47

    (2) block -> block instruccion .

    CONSOLE         reduce using rule 2 (block -> block instruccion .)
    IF              reduce using rule 2 (block -> block instruccion .)
    SWITCH          reduce using rule 2 (block -> block instruccion .)
    WHILE           reduce using rule 2 (block -> block instruccion .)
    FOR             reduce using rule 2 (block -> block instruccion .)
    VAR             reduce using rule 2 (block -> block instruccion .)
    ID              reduce using rule 2 (block -> block instruccion .)
    CONST           reduce using rule 2 (block -> block instruccion .)
    BREAK           reduce using rule 2 (block -> block instruccion .)
    CONTINUE        reduce using rule 2 (block -> block instruccion .)
    RETURN          reduce using rule 2 (block -> block instruccion .)
    FUNC            reduce using rule 2 (block -> block instruccion .)
    INTERFACE       reduce using rule 2 (block -> block instruccion .)
    $end            reduce using rule 2 (block -> block instruccion .)
    LLAVEDER        reduce using rule 2 (block -> block instruccion .)
    DEFAULT         reduce using rule 2 (block -> block instruccion .)
    CASE            reduce using rule 2 (block -> block instruccion .)


state 48

    (33) print -> CONSOLE PUNTO . LOG PARIZQ expressionList PARDER PYC

    LOG             shift and go to state 88


state 49

    (49) ifinstruction -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 89
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 50

    (56) switchCase -> SWITCH PARIZQ . expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> SWITCH PARIZQ . expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 90
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 51

    (61) whileInstruction -> WHILE PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 91
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 52

    (62) forRange -> FOR PARIZQ . declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC

    VAR             shift and go to state 93

    declaration                    shift and go to state 92

state 53

    (34) declaration -> VAR ID . DOSPTS type IG expression PYC
    (35) declaracionValor -> VAR ID . IG expression PYC
    (36) declaracionTipo -> VAR ID . DOSPTS type PYC
    (41) arrayDeclaration -> VAR ID . DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> VAR ID . DOSPTS type corchetes IG matrizPrimitiva PYC
    (88) interdeclaration -> VAR ID . DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    DOSPTS          shift and go to state 94
    IG              shift and go to state 95


state 54

    (37) asignacion -> ID IG . expression PYC
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 96
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 55

    (42) arrayPush -> ID PUNTO . PUSH PARIZQ expression PARDER PYC

    PUSH            shift and go to state 97


state 56

    (72) call -> ID PARIZQ . expressionList PARDER PYC
    (73) call -> ID PARIZQ . PARDER PYC
    (92) expressionList -> . expressionList COMA expression
    (93) expressionList -> . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    PARDER          shift and go to state 99
    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expressionList                 shift and go to state 98
    expression                     shift and go to state 100
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 57

    (63) incrementoIns -> ID MAS . MAS PYC

    MAS             shift and go to state 101


state 58

    (146) accesoMatriz -> ID accesosMatriz .
    (147) accesosMatriz -> accesosMatriz . acceso
    (149) acceso -> . CORIZQ expression CORDER

    IG              reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    PYC             reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    MAS             reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    MENOS           reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    POR             reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    DIVIDIDO        reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    MODULO          reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    IGIG            reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    DIF             reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    MAYQUE          reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    MENQUE          reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    MAYIGUAL        reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    MENIGUAL        reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    OR              reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    AND             reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    PUNTO           reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    PARDER          reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    COMA            reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    CORDER          reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    DOSPTS          reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    LLAVEDER        reduce using rule 146 (accesoMatriz -> ID accesosMatriz .)
    CORIZQ          shift and go to state 60

    acceso                         shift and go to state 102

state 59

    (148) accesosMatriz -> acceso .

    CORIZQ          reduce using rule 148 (accesosMatriz -> acceso .)
    IG              reduce using rule 148 (accesosMatriz -> acceso .)
    PYC             reduce using rule 148 (accesosMatriz -> acceso .)
    MAS             reduce using rule 148 (accesosMatriz -> acceso .)
    MENOS           reduce using rule 148 (accesosMatriz -> acceso .)
    POR             reduce using rule 148 (accesosMatriz -> acceso .)
    DIVIDIDO        reduce using rule 148 (accesosMatriz -> acceso .)
    MODULO          reduce using rule 148 (accesosMatriz -> acceso .)
    IGIG            reduce using rule 148 (accesosMatriz -> acceso .)
    DIF             reduce using rule 148 (accesosMatriz -> acceso .)
    MAYQUE          reduce using rule 148 (accesosMatriz -> acceso .)
    MENQUE          reduce using rule 148 (accesosMatriz -> acceso .)
    MAYIGUAL        reduce using rule 148 (accesosMatriz -> acceso .)
    MENIGUAL        reduce using rule 148 (accesosMatriz -> acceso .)
    OR              reduce using rule 148 (accesosMatriz -> acceso .)
    AND             reduce using rule 148 (accesosMatriz -> acceso .)
    PUNTO           reduce using rule 148 (accesosMatriz -> acceso .)
    PARDER          reduce using rule 148 (accesosMatriz -> acceso .)
    COMA            reduce using rule 148 (accesosMatriz -> acceso .)
    CORDER          reduce using rule 148 (accesosMatriz -> acceso .)
    DOSPTS          reduce using rule 148 (accesosMatriz -> acceso .)
    LLAVEDER        reduce using rule 148 (accesosMatriz -> acceso .)


state 60

    (149) acceso -> CORIZQ . expression CORDER
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 103
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 61

    (38) asignacionIndMatriz -> accesoMatriz IG . expression PYC
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    accesoMatriz                   shift and go to state 77
    expression                     shift and go to state 104
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 62

    (39) declaracionConstante -> CONST ID . DOSPTS type IG expression PYC
    (40) declConstanteValor -> CONST ID . IG expression PYC
    (44) matrizConstante -> CONST ID . DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> CONST ID . DOSPTS type corchetes IG arrayPrimitivo PYC
    (89) interdeclarationConst -> CONST ID . DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    DOSPTS          shift and go to state 105
    IG              shift and go to state 106


state 63

    (76) breakstmt -> BREAK PYC .

    CONSOLE         reduce using rule 76 (breakstmt -> BREAK PYC .)
    IF              reduce using rule 76 (breakstmt -> BREAK PYC .)
    SWITCH          reduce using rule 76 (breakstmt -> BREAK PYC .)
    WHILE           reduce using rule 76 (breakstmt -> BREAK PYC .)
    FOR             reduce using rule 76 (breakstmt -> BREAK PYC .)
    VAR             reduce using rule 76 (breakstmt -> BREAK PYC .)
    ID              reduce using rule 76 (breakstmt -> BREAK PYC .)
    CONST           reduce using rule 76 (breakstmt -> BREAK PYC .)
    BREAK           reduce using rule 76 (breakstmt -> BREAK PYC .)
    CONTINUE        reduce using rule 76 (breakstmt -> BREAK PYC .)
    RETURN          reduce using rule 76 (breakstmt -> BREAK PYC .)
    FUNC            reduce using rule 76 (breakstmt -> BREAK PYC .)
    INTERFACE       reduce using rule 76 (breakstmt -> BREAK PYC .)
    $end            reduce using rule 76 (breakstmt -> BREAK PYC .)
    LLAVEDER        reduce using rule 76 (breakstmt -> BREAK PYC .)
    DEFAULT         reduce using rule 76 (breakstmt -> BREAK PYC .)
    CASE            reduce using rule 76 (breakstmt -> BREAK PYC .)


state 64

    (77) continuestmt -> CONTINUE PYC .

    CONSOLE         reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    IF              reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    SWITCH          reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    WHILE           reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    FOR             reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    VAR             reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    ID              reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    CONST           reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    BREAK           reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    CONTINUE        reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    RETURN          reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    FUNC            reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    INTERFACE       reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    $end            reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    LLAVEDER        reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    DEFAULT         reduce using rule 77 (continuestmt -> CONTINUE PYC .)
    CASE            reduce using rule 77 (continuestmt -> CONTINUE PYC .)


state 65

    (74) returnstmt -> RETURN expression . PYC
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             shift and go to state 107
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 66

    (75) returnstmt -> RETURN PYC .

    CONSOLE         reduce using rule 75 (returnstmt -> RETURN PYC .)
    IF              reduce using rule 75 (returnstmt -> RETURN PYC .)
    SWITCH          reduce using rule 75 (returnstmt -> RETURN PYC .)
    WHILE           reduce using rule 75 (returnstmt -> RETURN PYC .)
    FOR             reduce using rule 75 (returnstmt -> RETURN PYC .)
    VAR             reduce using rule 75 (returnstmt -> RETURN PYC .)
    ID              reduce using rule 75 (returnstmt -> RETURN PYC .)
    CONST           reduce using rule 75 (returnstmt -> RETURN PYC .)
    BREAK           reduce using rule 75 (returnstmt -> RETURN PYC .)
    CONTINUE        reduce using rule 75 (returnstmt -> RETURN PYC .)
    RETURN          reduce using rule 75 (returnstmt -> RETURN PYC .)
    FUNC            reduce using rule 75 (returnstmt -> RETURN PYC .)
    INTERFACE       reduce using rule 75 (returnstmt -> RETURN PYC .)
    $end            reduce using rule 75 (returnstmt -> RETURN PYC .)
    LLAVEDER        reduce using rule 75 (returnstmt -> RETURN PYC .)
    DEFAULT         reduce using rule 75 (returnstmt -> RETURN PYC .)
    CASE            reduce using rule 75 (returnstmt -> RETURN PYC .)


state 67

    (94) expression -> MENOS . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 122
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 68

    (108) expression -> NOT . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 123
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 69

    (109) expression -> PARIZQ . expression PARDER
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 124
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 70

    (110) expression -> ID . PARIZQ expressionList PARDER
    (111) expression -> ID . PARIZQ PARDER
    (123) expression -> ID . PUNTO popjoin PARIZQ PARDER
    (126) expression -> ID . PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> ID . PUNTO LENGTH
    (134) listArray -> ID . CORIZQ expression CORDER
    (135) listArray -> ID .
    (136) accesoInterface -> ID . PUNTO ID
    (146) accesoMatriz -> ID . accesosMatriz
    (141) funcionEmbebida -> ID . PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> ID . PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> ID . PUNTO TOUPPERCASE PARIZQ PARDER
    (147) accesosMatriz -> . accesosMatriz acceso
    (148) accesosMatriz -> . acceso
    (149) acceso -> . CORIZQ expression CORDER

  ! shift/reduce conflict for PUNTO resolved as shift
    PARIZQ          shift and go to state 125
    PUNTO           shift and go to state 126
    CORIZQ          shift and go to state 127
    PYC             reduce using rule 135 (listArray -> ID .)
    MAS             reduce using rule 135 (listArray -> ID .)
    MENOS           reduce using rule 135 (listArray -> ID .)
    POR             reduce using rule 135 (listArray -> ID .)
    DIVIDIDO        reduce using rule 135 (listArray -> ID .)
    MODULO          reduce using rule 135 (listArray -> ID .)
    IGIG            reduce using rule 135 (listArray -> ID .)
    DIF             reduce using rule 135 (listArray -> ID .)
    MAYQUE          reduce using rule 135 (listArray -> ID .)
    MENQUE          reduce using rule 135 (listArray -> ID .)
    MAYIGUAL        reduce using rule 135 (listArray -> ID .)
    MENIGUAL        reduce using rule 135 (listArray -> ID .)
    OR              reduce using rule 135 (listArray -> ID .)
    AND             reduce using rule 135 (listArray -> ID .)
    PARDER          reduce using rule 135 (listArray -> ID .)
    COMA            reduce using rule 135 (listArray -> ID .)
    CORDER          reduce using rule 135 (listArray -> ID .)
    DOSPTS          reduce using rule 135 (listArray -> ID .)
    LLAVEDER        reduce using rule 135 (listArray -> ID .)

  ! PUNTO           [ reduce using rule 135 (listArray -> ID .) ]

    accesosMatriz                  shift and go to state 58
    acceso                         shift and go to state 59

state 71

    (114) expression -> ENTERO .

    PYC             reduce using rule 114 (expression -> ENTERO .)
    MAS             reduce using rule 114 (expression -> ENTERO .)
    MENOS           reduce using rule 114 (expression -> ENTERO .)
    POR             reduce using rule 114 (expression -> ENTERO .)
    DIVIDIDO        reduce using rule 114 (expression -> ENTERO .)
    MODULO          reduce using rule 114 (expression -> ENTERO .)
    IGIG            reduce using rule 114 (expression -> ENTERO .)
    DIF             reduce using rule 114 (expression -> ENTERO .)
    MAYQUE          reduce using rule 114 (expression -> ENTERO .)
    MENQUE          reduce using rule 114 (expression -> ENTERO .)
    MAYIGUAL        reduce using rule 114 (expression -> ENTERO .)
    MENIGUAL        reduce using rule 114 (expression -> ENTERO .)
    OR              reduce using rule 114 (expression -> ENTERO .)
    AND             reduce using rule 114 (expression -> ENTERO .)
    PUNTO           reduce using rule 114 (expression -> ENTERO .)
    PARDER          reduce using rule 114 (expression -> ENTERO .)
    COMA            reduce using rule 114 (expression -> ENTERO .)
    CORDER          reduce using rule 114 (expression -> ENTERO .)
    DOSPTS          reduce using rule 114 (expression -> ENTERO .)
    LLAVEDER        reduce using rule 114 (expression -> ENTERO .)


state 72

    (115) expression -> DECIMAL .

    PYC             reduce using rule 115 (expression -> DECIMAL .)
    MAS             reduce using rule 115 (expression -> DECIMAL .)
    MENOS           reduce using rule 115 (expression -> DECIMAL .)
    POR             reduce using rule 115 (expression -> DECIMAL .)
    DIVIDIDO        reduce using rule 115 (expression -> DECIMAL .)
    MODULO          reduce using rule 115 (expression -> DECIMAL .)
    IGIG            reduce using rule 115 (expression -> DECIMAL .)
    DIF             reduce using rule 115 (expression -> DECIMAL .)
    MAYQUE          reduce using rule 115 (expression -> DECIMAL .)
    MENQUE          reduce using rule 115 (expression -> DECIMAL .)
    MAYIGUAL        reduce using rule 115 (expression -> DECIMAL .)
    MENIGUAL        reduce using rule 115 (expression -> DECIMAL .)
    OR              reduce using rule 115 (expression -> DECIMAL .)
    AND             reduce using rule 115 (expression -> DECIMAL .)
    PUNTO           reduce using rule 115 (expression -> DECIMAL .)
    PARDER          reduce using rule 115 (expression -> DECIMAL .)
    COMA            reduce using rule 115 (expression -> DECIMAL .)
    CORDER          reduce using rule 115 (expression -> DECIMAL .)
    DOSPTS          reduce using rule 115 (expression -> DECIMAL .)
    LLAVEDER        reduce using rule 115 (expression -> DECIMAL .)


state 73

    (116) expression -> CADENA .

    PYC             reduce using rule 116 (expression -> CADENA .)
    MAS             reduce using rule 116 (expression -> CADENA .)
    MENOS           reduce using rule 116 (expression -> CADENA .)
    POR             reduce using rule 116 (expression -> CADENA .)
    DIVIDIDO        reduce using rule 116 (expression -> CADENA .)
    MODULO          reduce using rule 116 (expression -> CADENA .)
    IGIG            reduce using rule 116 (expression -> CADENA .)
    DIF             reduce using rule 116 (expression -> CADENA .)
    MAYQUE          reduce using rule 116 (expression -> CADENA .)
    MENQUE          reduce using rule 116 (expression -> CADENA .)
    MAYIGUAL        reduce using rule 116 (expression -> CADENA .)
    MENIGUAL        reduce using rule 116 (expression -> CADENA .)
    OR              reduce using rule 116 (expression -> CADENA .)
    AND             reduce using rule 116 (expression -> CADENA .)
    PUNTO           reduce using rule 116 (expression -> CADENA .)
    PARDER          reduce using rule 116 (expression -> CADENA .)
    COMA            reduce using rule 116 (expression -> CADENA .)
    CORDER          reduce using rule 116 (expression -> CADENA .)
    DOSPTS          reduce using rule 116 (expression -> CADENA .)
    LLAVEDER        reduce using rule 116 (expression -> CADENA .)


state 74

    (117) expression -> booleano .

    PYC             reduce using rule 117 (expression -> booleano .)
    MAS             reduce using rule 117 (expression -> booleano .)
    MENOS           reduce using rule 117 (expression -> booleano .)
    POR             reduce using rule 117 (expression -> booleano .)
    DIVIDIDO        reduce using rule 117 (expression -> booleano .)
    MODULO          reduce using rule 117 (expression -> booleano .)
    IGIG            reduce using rule 117 (expression -> booleano .)
    DIF             reduce using rule 117 (expression -> booleano .)
    MAYQUE          reduce using rule 117 (expression -> booleano .)
    MENQUE          reduce using rule 117 (expression -> booleano .)
    MAYIGUAL        reduce using rule 117 (expression -> booleano .)
    MENIGUAL        reduce using rule 117 (expression -> booleano .)
    OR              reduce using rule 117 (expression -> booleano .)
    AND             reduce using rule 117 (expression -> booleano .)
    PUNTO           reduce using rule 117 (expression -> booleano .)
    PARDER          reduce using rule 117 (expression -> booleano .)
    COMA            reduce using rule 117 (expression -> booleano .)
    CORDER          reduce using rule 117 (expression -> booleano .)
    DOSPTS          reduce using rule 117 (expression -> booleano .)
    LLAVEDER        reduce using rule 117 (expression -> booleano .)


state 75

    (118) expression -> listArray .

    PYC             reduce using rule 118 (expression -> listArray .)
    MAS             reduce using rule 118 (expression -> listArray .)
    MENOS           reduce using rule 118 (expression -> listArray .)
    POR             reduce using rule 118 (expression -> listArray .)
    DIVIDIDO        reduce using rule 118 (expression -> listArray .)
    MODULO          reduce using rule 118 (expression -> listArray .)
    IGIG            reduce using rule 118 (expression -> listArray .)
    DIF             reduce using rule 118 (expression -> listArray .)
    MAYQUE          reduce using rule 118 (expression -> listArray .)
    MENQUE          reduce using rule 118 (expression -> listArray .)
    MAYIGUAL        reduce using rule 118 (expression -> listArray .)
    MENIGUAL        reduce using rule 118 (expression -> listArray .)
    OR              reduce using rule 118 (expression -> listArray .)
    AND             reduce using rule 118 (expression -> listArray .)
    PUNTO           reduce using rule 118 (expression -> listArray .)
    PARDER          reduce using rule 118 (expression -> listArray .)
    COMA            reduce using rule 118 (expression -> listArray .)
    CORDER          reduce using rule 118 (expression -> listArray .)
    DOSPTS          reduce using rule 118 (expression -> listArray .)
    LLAVEDER        reduce using rule 118 (expression -> listArray .)


state 76

    (119) expression -> accesoInterface .

    PYC             reduce using rule 119 (expression -> accesoInterface .)
    MAS             reduce using rule 119 (expression -> accesoInterface .)
    MENOS           reduce using rule 119 (expression -> accesoInterface .)
    POR             reduce using rule 119 (expression -> accesoInterface .)
    DIVIDIDO        reduce using rule 119 (expression -> accesoInterface .)
    MODULO          reduce using rule 119 (expression -> accesoInterface .)
    IGIG            reduce using rule 119 (expression -> accesoInterface .)
    DIF             reduce using rule 119 (expression -> accesoInterface .)
    MAYQUE          reduce using rule 119 (expression -> accesoInterface .)
    MENQUE          reduce using rule 119 (expression -> accesoInterface .)
    MAYIGUAL        reduce using rule 119 (expression -> accesoInterface .)
    MENIGUAL        reduce using rule 119 (expression -> accesoInterface .)
    OR              reduce using rule 119 (expression -> accesoInterface .)
    AND             reduce using rule 119 (expression -> accesoInterface .)
    PUNTO           reduce using rule 119 (expression -> accesoInterface .)
    PARDER          reduce using rule 119 (expression -> accesoInterface .)
    COMA            reduce using rule 119 (expression -> accesoInterface .)
    CORDER          reduce using rule 119 (expression -> accesoInterface .)
    DOSPTS          reduce using rule 119 (expression -> accesoInterface .)
    LLAVEDER        reduce using rule 119 (expression -> accesoInterface .)


state 77

    (120) expression -> accesoMatriz .

    PYC             reduce using rule 120 (expression -> accesoMatriz .)
    MAS             reduce using rule 120 (expression -> accesoMatriz .)
    MENOS           reduce using rule 120 (expression -> accesoMatriz .)
    POR             reduce using rule 120 (expression -> accesoMatriz .)
    DIVIDIDO        reduce using rule 120 (expression -> accesoMatriz .)
    MODULO          reduce using rule 120 (expression -> accesoMatriz .)
    IGIG            reduce using rule 120 (expression -> accesoMatriz .)
    DIF             reduce using rule 120 (expression -> accesoMatriz .)
    MAYQUE          reduce using rule 120 (expression -> accesoMatriz .)
    MENQUE          reduce using rule 120 (expression -> accesoMatriz .)
    MAYIGUAL        reduce using rule 120 (expression -> accesoMatriz .)
    MENIGUAL        reduce using rule 120 (expression -> accesoMatriz .)
    OR              reduce using rule 120 (expression -> accesoMatriz .)
    AND             reduce using rule 120 (expression -> accesoMatriz .)
    PUNTO           reduce using rule 120 (expression -> accesoMatriz .)
    PARDER          reduce using rule 120 (expression -> accesoMatriz .)
    COMA            reduce using rule 120 (expression -> accesoMatriz .)
    CORDER          reduce using rule 120 (expression -> accesoMatriz .)
    DOSPTS          reduce using rule 120 (expression -> accesoMatriz .)
    LLAVEDER        reduce using rule 120 (expression -> accesoMatriz .)


state 78

    (121) expression -> funcEspecialObject .

    PYC             reduce using rule 121 (expression -> funcEspecialObject .)
    MAS             reduce using rule 121 (expression -> funcEspecialObject .)
    MENOS           reduce using rule 121 (expression -> funcEspecialObject .)
    POR             reduce using rule 121 (expression -> funcEspecialObject .)
    DIVIDIDO        reduce using rule 121 (expression -> funcEspecialObject .)
    MODULO          reduce using rule 121 (expression -> funcEspecialObject .)
    IGIG            reduce using rule 121 (expression -> funcEspecialObject .)
    DIF             reduce using rule 121 (expression -> funcEspecialObject .)
    MAYQUE          reduce using rule 121 (expression -> funcEspecialObject .)
    MENQUE          reduce using rule 121 (expression -> funcEspecialObject .)
    MAYIGUAL        reduce using rule 121 (expression -> funcEspecialObject .)
    MENIGUAL        reduce using rule 121 (expression -> funcEspecialObject .)
    OR              reduce using rule 121 (expression -> funcEspecialObject .)
    AND             reduce using rule 121 (expression -> funcEspecialObject .)
    PUNTO           reduce using rule 121 (expression -> funcEspecialObject .)
    PARDER          reduce using rule 121 (expression -> funcEspecialObject .)
    COMA            reduce using rule 121 (expression -> funcEspecialObject .)
    CORDER          reduce using rule 121 (expression -> funcEspecialObject .)
    DOSPTS          reduce using rule 121 (expression -> funcEspecialObject .)
    LLAVEDER        reduce using rule 121 (expression -> funcEspecialObject .)


state 79

    (122) expression -> funcionEmbebida .

    PYC             reduce using rule 122 (expression -> funcionEmbebida .)
    MAS             reduce using rule 122 (expression -> funcionEmbebida .)
    MENOS           reduce using rule 122 (expression -> funcionEmbebida .)
    POR             reduce using rule 122 (expression -> funcionEmbebida .)
    DIVIDIDO        reduce using rule 122 (expression -> funcionEmbebida .)
    MODULO          reduce using rule 122 (expression -> funcionEmbebida .)
    IGIG            reduce using rule 122 (expression -> funcionEmbebida .)
    DIF             reduce using rule 122 (expression -> funcionEmbebida .)
    MAYQUE          reduce using rule 122 (expression -> funcionEmbebida .)
    MENQUE          reduce using rule 122 (expression -> funcionEmbebida .)
    MAYIGUAL        reduce using rule 122 (expression -> funcionEmbebida .)
    MENIGUAL        reduce using rule 122 (expression -> funcionEmbebida .)
    OR              reduce using rule 122 (expression -> funcionEmbebida .)
    AND             reduce using rule 122 (expression -> funcionEmbebida .)
    PUNTO           reduce using rule 122 (expression -> funcionEmbebida .)
    PARDER          reduce using rule 122 (expression -> funcionEmbebida .)
    COMA            reduce using rule 122 (expression -> funcionEmbebida .)
    CORDER          reduce using rule 122 (expression -> funcionEmbebida .)
    DOSPTS          reduce using rule 122 (expression -> funcionEmbebida .)
    LLAVEDER        reduce using rule 122 (expression -> funcionEmbebida .)


state 80

    (112) booleano -> TRUE .

    PYC             reduce using rule 112 (booleano -> TRUE .)
    MAS             reduce using rule 112 (booleano -> TRUE .)
    MENOS           reduce using rule 112 (booleano -> TRUE .)
    POR             reduce using rule 112 (booleano -> TRUE .)
    DIVIDIDO        reduce using rule 112 (booleano -> TRUE .)
    MODULO          reduce using rule 112 (booleano -> TRUE .)
    IGIG            reduce using rule 112 (booleano -> TRUE .)
    DIF             reduce using rule 112 (booleano -> TRUE .)
    MAYQUE          reduce using rule 112 (booleano -> TRUE .)
    MENQUE          reduce using rule 112 (booleano -> TRUE .)
    MAYIGUAL        reduce using rule 112 (booleano -> TRUE .)
    MENIGUAL        reduce using rule 112 (booleano -> TRUE .)
    OR              reduce using rule 112 (booleano -> TRUE .)
    AND             reduce using rule 112 (booleano -> TRUE .)
    PUNTO           reduce using rule 112 (booleano -> TRUE .)
    PARDER          reduce using rule 112 (booleano -> TRUE .)
    COMA            reduce using rule 112 (booleano -> TRUE .)
    CORDER          reduce using rule 112 (booleano -> TRUE .)
    DOSPTS          reduce using rule 112 (booleano -> TRUE .)
    LLAVEDER        reduce using rule 112 (booleano -> TRUE .)


state 81

    (113) booleano -> FALSE .

    PYC             reduce using rule 113 (booleano -> FALSE .)
    MAS             reduce using rule 113 (booleano -> FALSE .)
    MENOS           reduce using rule 113 (booleano -> FALSE .)
    POR             reduce using rule 113 (booleano -> FALSE .)
    DIVIDIDO        reduce using rule 113 (booleano -> FALSE .)
    MODULO          reduce using rule 113 (booleano -> FALSE .)
    IGIG            reduce using rule 113 (booleano -> FALSE .)
    DIF             reduce using rule 113 (booleano -> FALSE .)
    MAYQUE          reduce using rule 113 (booleano -> FALSE .)
    MENQUE          reduce using rule 113 (booleano -> FALSE .)
    MAYIGUAL        reduce using rule 113 (booleano -> FALSE .)
    MENIGUAL        reduce using rule 113 (booleano -> FALSE .)
    OR              reduce using rule 113 (booleano -> FALSE .)
    AND             reduce using rule 113 (booleano -> FALSE .)
    PUNTO           reduce using rule 113 (booleano -> FALSE .)
    PARDER          reduce using rule 113 (booleano -> FALSE .)
    COMA            reduce using rule 113 (booleano -> FALSE .)
    CORDER          reduce using rule 113 (booleano -> FALSE .)
    DOSPTS          reduce using rule 113 (booleano -> FALSE .)
    LLAVEDER        reduce using rule 113 (booleano -> FALSE .)


state 82

    (137) funcEspecialObject -> OBJECT . PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> OBJECT . PUNTO KEYS PARIZQ expression PARDER

    PUNTO           shift and go to state 128


state 83

    (139) funcionEmbebida -> PARSEFLOAT . PARIZQ expression PARDER

    PARIZQ          shift and go to state 129


state 84

    (140) funcionEmbebida -> PARSEINT . PARIZQ expression PARDER

    PARIZQ          shift and go to state 130


state 85

    (145) funcionEmbebida -> TYPEOF . ID

    ID              shift and go to state 131


state 86

    (65) functionstmt -> FUNC ID . funcparams functype LLAVEIZQ block LLAVEDER
    (66) funcparams -> . PARIZQ paramsList PARDER
    (67) funcparams -> . PARIZQ PARDER

    PARIZQ          shift and go to state 133

    funcparams                     shift and go to state 132

state 87

    (85) interfacecreation -> INTERFACE ID . LLAVEIZQ attributeList LLAVEDER

    LLAVEIZQ        shift and go to state 134


state 88

    (33) print -> CONSOLE PUNTO LOG . PARIZQ expressionList PARDER PYC

    PARIZQ          shift and go to state 135


state 89

    (49) ifinstruction -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PARDER          shift and go to state 136
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 90

    (56) switchCase -> SWITCH PARIZQ expression . PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> SWITCH PARIZQ expression . PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PARDER          shift and go to state 137
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 91

    (61) whileInstruction -> WHILE PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PARDER          shift and go to state 138
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 92

    (62) forRange -> FOR PARIZQ declaration . expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 139
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 93

    (34) declaration -> VAR . ID DOSPTS type IG expression PYC

    ID              shift and go to state 140


state 94

    (34) declaration -> VAR ID DOSPTS . type IG expression PYC
    (36) declaracionTipo -> VAR ID DOSPTS . type PYC
    (41) arrayDeclaration -> VAR ID DOSPTS . type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> VAR ID DOSPTS . type corchetes IG matrizPrimitiva PYC
    (88) interdeclaration -> VAR ID DOSPTS . ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (78) type -> . NUMBER
    (79) type -> . FLOAT
    (80) type -> . STRING
    (81) type -> . BOOL
    (82) type -> . CHAR
    (83) type -> . ID
    (84) type -> . type corchete

    ID              shift and go to state 141
    NUMBER          shift and go to state 143
    FLOAT           shift and go to state 144
    STRING          shift and go to state 145
    BOOL            shift and go to state 146
    CHAR            shift and go to state 147

    type                           shift and go to state 142

state 95

    (35) declaracionValor -> VAR ID IG . expression PYC
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 148
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 96

    (37) asignacion -> ID IG expression . PYC
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             shift and go to state 149
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 97

    (42) arrayPush -> ID PUNTO PUSH . PARIZQ expression PARDER PYC

    PARIZQ          shift and go to state 150


state 98

    (72) call -> ID PARIZQ expressionList . PARDER PYC
    (92) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 151
    COMA            shift and go to state 152


state 99

    (73) call -> ID PARIZQ PARDER . PYC

    PYC             shift and go to state 153


state 100

    (93) expressionList -> expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PARDER          reduce using rule 93 (expressionList -> expression .)
    COMA            reduce using rule 93 (expressionList -> expression .)
    CORDER          reduce using rule 93 (expressionList -> expression .)
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 101

    (63) incrementoIns -> ID MAS MAS . PYC

    PYC             shift and go to state 154


state 102

    (147) accesosMatriz -> accesosMatriz acceso .

    CORIZQ          reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    IG              reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    PYC             reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    MAS             reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    MENOS           reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    POR             reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    DIVIDIDO        reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    MODULO          reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    IGIG            reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    DIF             reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    MAYQUE          reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    MENQUE          reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    MAYIGUAL        reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    MENIGUAL        reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    OR              reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    AND             reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    PUNTO           reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    PARDER          reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    COMA            reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    CORDER          reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    DOSPTS          reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)
    LLAVEDER        reduce using rule 147 (accesosMatriz -> accesosMatriz acceso .)


state 103

    (149) acceso -> CORIZQ expression . CORDER
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    CORDER          shift and go to state 155
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 104

    (38) asignacionIndMatriz -> accesoMatriz IG expression . PYC
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             shift and go to state 156
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 105

    (39) declaracionConstante -> CONST ID DOSPTS . type IG expression PYC
    (44) matrizConstante -> CONST ID DOSPTS . type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> CONST ID DOSPTS . type corchetes IG arrayPrimitivo PYC
    (89) interdeclarationConst -> CONST ID DOSPTS . ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (78) type -> . NUMBER
    (79) type -> . FLOAT
    (80) type -> . STRING
    (81) type -> . BOOL
    (82) type -> . CHAR
    (83) type -> . ID
    (84) type -> . type corchete

    ID              shift and go to state 157
    NUMBER          shift and go to state 143
    FLOAT           shift and go to state 144
    STRING          shift and go to state 145
    BOOL            shift and go to state 146
    CHAR            shift and go to state 147

    type                           shift and go to state 158

state 106

    (40) declConstanteValor -> CONST ID IG . expression PYC
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 159
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 107

    (74) returnstmt -> RETURN expression PYC .

    CONSOLE         reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    IF              reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    SWITCH          reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    WHILE           reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    FOR             reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    VAR             reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    ID              reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    CONST           reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    BREAK           reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    CONTINUE        reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    RETURN          reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    FUNC            reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    INTERFACE       reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    $end            reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    LLAVEDER        reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    DEFAULT         reduce using rule 74 (returnstmt -> RETURN expression PYC .)
    CASE            reduce using rule 74 (returnstmt -> RETURN expression PYC .)


state 108

    (95) expression -> expression MAS . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 160
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 109

    (96) expression -> expression MENOS . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 161
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 110

    (97) expression -> expression POR . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 162
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 111

    (98) expression -> expression DIVIDIDO . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 163
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 112

    (99) expression -> expression MODULO . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 164
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 113

    (100) expression -> expression IGIG . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 165
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 114

    (101) expression -> expression DIF . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 166
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 115

    (102) expression -> expression MAYQUE . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 167
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 116

    (103) expression -> expression MENQUE . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 168
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 117

    (104) expression -> expression MAYIGUAL . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 169
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 118

    (105) expression -> expression MENIGUAL . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 170
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 119

    (106) expression -> expression OR . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 171
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 120

    (107) expression -> expression AND . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 172
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 121

    (142) funcionEmbebida -> expression PUNTO . TOSTRING PARIZQ PARDER

    TOSTRING        shift and go to state 173


state 122

    (94) expression -> MENOS expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 94 (expression -> MENOS expression .)
    MAS             reduce using rule 94 (expression -> MENOS expression .)
    MENOS           reduce using rule 94 (expression -> MENOS expression .)
    POR             reduce using rule 94 (expression -> MENOS expression .)
    DIVIDIDO        reduce using rule 94 (expression -> MENOS expression .)
    MODULO          reduce using rule 94 (expression -> MENOS expression .)
    IGIG            reduce using rule 94 (expression -> MENOS expression .)
    DIF             reduce using rule 94 (expression -> MENOS expression .)
    MAYQUE          reduce using rule 94 (expression -> MENOS expression .)
    MENQUE          reduce using rule 94 (expression -> MENOS expression .)
    MAYIGUAL        reduce using rule 94 (expression -> MENOS expression .)
    MENIGUAL        reduce using rule 94 (expression -> MENOS expression .)
    OR              reduce using rule 94 (expression -> MENOS expression .)
    AND             reduce using rule 94 (expression -> MENOS expression .)
    PUNTO           reduce using rule 94 (expression -> MENOS expression .)
    PARDER          reduce using rule 94 (expression -> MENOS expression .)
    COMA            reduce using rule 94 (expression -> MENOS expression .)
    CORDER          reduce using rule 94 (expression -> MENOS expression .)
    DOSPTS          reduce using rule 94 (expression -> MENOS expression .)
    LLAVEDER        reduce using rule 94 (expression -> MENOS expression .)

  ! MAS             [ shift and go to state 108 ]
  ! MENOS           [ shift and go to state 109 ]
  ! POR             [ shift and go to state 110 ]
  ! DIVIDIDO        [ shift and go to state 111 ]
  ! MODULO          [ shift and go to state 112 ]
  ! IGIG            [ shift and go to state 113 ]
  ! DIF             [ shift and go to state 114 ]
  ! MAYQUE          [ shift and go to state 115 ]
  ! MENQUE          [ shift and go to state 116 ]
  ! MAYIGUAL        [ shift and go to state 117 ]
  ! MENIGUAL        [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]
  ! PUNTO           [ shift and go to state 121 ]


state 123

    (108) expression -> NOT expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 108 (expression -> NOT expression .)
    MAS             reduce using rule 108 (expression -> NOT expression .)
    MENOS           reduce using rule 108 (expression -> NOT expression .)
    POR             reduce using rule 108 (expression -> NOT expression .)
    DIVIDIDO        reduce using rule 108 (expression -> NOT expression .)
    MODULO          reduce using rule 108 (expression -> NOT expression .)
    IGIG            reduce using rule 108 (expression -> NOT expression .)
    DIF             reduce using rule 108 (expression -> NOT expression .)
    MAYQUE          reduce using rule 108 (expression -> NOT expression .)
    MENQUE          reduce using rule 108 (expression -> NOT expression .)
    MAYIGUAL        reduce using rule 108 (expression -> NOT expression .)
    MENIGUAL        reduce using rule 108 (expression -> NOT expression .)
    OR              reduce using rule 108 (expression -> NOT expression .)
    AND             reduce using rule 108 (expression -> NOT expression .)
    PUNTO           reduce using rule 108 (expression -> NOT expression .)
    PARDER          reduce using rule 108 (expression -> NOT expression .)
    COMA            reduce using rule 108 (expression -> NOT expression .)
    CORDER          reduce using rule 108 (expression -> NOT expression .)
    DOSPTS          reduce using rule 108 (expression -> NOT expression .)
    LLAVEDER        reduce using rule 108 (expression -> NOT expression .)

  ! MAS             [ shift and go to state 108 ]
  ! MENOS           [ shift and go to state 109 ]
  ! POR             [ shift and go to state 110 ]
  ! DIVIDIDO        [ shift and go to state 111 ]
  ! MODULO          [ shift and go to state 112 ]
  ! IGIG            [ shift and go to state 113 ]
  ! DIF             [ shift and go to state 114 ]
  ! MAYQUE          [ shift and go to state 115 ]
  ! MENQUE          [ shift and go to state 116 ]
  ! MAYIGUAL        [ shift and go to state 117 ]
  ! MENIGUAL        [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]
  ! PUNTO           [ shift and go to state 121 ]


state 124

    (109) expression -> PARIZQ expression . PARDER
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PARDER          shift and go to state 174
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 125

    (110) expression -> ID PARIZQ . expressionList PARDER
    (111) expression -> ID PARIZQ . PARDER
    (92) expressionList -> . expressionList COMA expression
    (93) expressionList -> . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    PARDER          shift and go to state 176
    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expressionList                 shift and go to state 175
    expression                     shift and go to state 100
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 126

    (123) expression -> ID PUNTO . popjoin PARIZQ PARDER
    (126) expression -> ID PUNTO . INDEXOF PARIZQ expression PARDER
    (127) expression -> ID PUNTO . LENGTH
    (136) accesoInterface -> ID PUNTO . ID
    (141) funcionEmbebida -> ID PUNTO . TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> ID PUNTO . TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> ID PUNTO . TOUPPERCASE PARIZQ PARDER
    (124) popjoin -> . POP
    (125) popjoin -> . JOIN

    INDEXOF         shift and go to state 179
    LENGTH          shift and go to state 180
    ID              shift and go to state 177
    TOSTRING        shift and go to state 181
    TOLOWERCASE     shift and go to state 182
    TOUPPERCASE     shift and go to state 183
    POP             shift and go to state 184
    JOIN            shift and go to state 185

    popjoin                        shift and go to state 178

state 127

    (134) listArray -> ID CORIZQ . expression CORDER
    (149) acceso -> CORIZQ . expression CORDER
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 186
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 128

    (137) funcEspecialObject -> OBJECT PUNTO . VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> OBJECT PUNTO . KEYS PARIZQ expression PARDER

    VALUES          shift and go to state 187
    KEYS            shift and go to state 188


state 129

    (139) funcionEmbebida -> PARSEFLOAT PARIZQ . expression PARDER
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 189
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 130

    (140) funcionEmbebida -> PARSEINT PARIZQ . expression PARDER
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 190
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 131

    (145) funcionEmbebida -> TYPEOF ID .

    PYC             reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    MAS             reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    MENOS           reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    POR             reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    DIVIDIDO        reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    MODULO          reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    IGIG            reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    DIF             reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    MAYQUE          reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    MENQUE          reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    MAYIGUAL        reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    MENIGUAL        reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    OR              reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    AND             reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    PUNTO           reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    PARDER          reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    COMA            reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    CORDER          reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    DOSPTS          reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)
    LLAVEDER        reduce using rule 145 (funcionEmbebida -> TYPEOF ID .)


state 132

    (65) functionstmt -> FUNC ID funcparams . functype LLAVEIZQ block LLAVEDER
    (70) functype -> . DOSPTS type
    (71) functype -> .

    DOSPTS          shift and go to state 192
    LLAVEIZQ        reduce using rule 71 (functype -> .)

    functype                       shift and go to state 191

state 133

    (66) funcparams -> PARIZQ . paramsList PARDER
    (67) funcparams -> PARIZQ . PARDER
    (68) paramsList -> . paramsList COMA ID DOSPTS type
    (69) paramsList -> . ID DOSPTS type

    PARDER          shift and go to state 194
    ID              shift and go to state 195

    paramsList                     shift and go to state 193

state 134

    (85) interfacecreation -> INTERFACE ID LLAVEIZQ . attributeList LLAVEDER
    (86) attributeList -> . attributeList ID DOSPTS type PYC
    (87) attributeList -> . ID DOSPTS type PYC

    ID              shift and go to state 196

    attributeList                  shift and go to state 197

state 135

    (33) print -> CONSOLE PUNTO LOG PARIZQ . expressionList PARDER PYC
    (92) expressionList -> . expressionList COMA expression
    (93) expressionList -> . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expressionList                 shift and go to state 198
    expression                     shift and go to state 100
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 136

    (49) ifinstruction -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER
    (50) ifElse -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 199


state 137

    (56) switchCase -> SWITCH PARIZQ expression PARDER . LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> SWITCH PARIZQ expression PARDER . LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER

    LLAVEIZQ        shift and go to state 200


state 138

    (61) whileInstruction -> WHILE PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 201


state 139

    (62) forRange -> FOR PARIZQ declaration expression . PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             shift and go to state 202
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 140

    (34) declaration -> VAR ID . DOSPTS type IG expression PYC

    DOSPTS          shift and go to state 203


state 141

    (88) interdeclaration -> VAR ID DOSPTS ID . IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (83) type -> ID .

  ! shift/reduce conflict for IG resolved as shift
    IG              shift and go to state 204
    PYC             reduce using rule 83 (type -> ID .)
    CORIZQ          reduce using rule 83 (type -> ID .)

  ! IG              [ reduce using rule 83 (type -> ID .) ]


state 142

    (34) declaration -> VAR ID DOSPTS type . IG expression PYC
    (36) declaracionTipo -> VAR ID DOSPTS type . PYC
    (41) arrayDeclaration -> VAR ID DOSPTS type . CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> VAR ID DOSPTS type . corchetes IG matrizPrimitiva PYC
    (84) type -> type . corchete
    (46) corchetes -> . corchetes corchete
    (47) corchetes -> . corchete
    (48) corchete -> . CORIZQ CORDER

    IG              shift and go to state 205
    PYC             shift and go to state 206
    CORIZQ          shift and go to state 207

    corchetes                      shift and go to state 208
    corchete                       shift and go to state 209

state 143

    (78) type -> NUMBER .

    IG              reduce using rule 78 (type -> NUMBER .)
    PYC             reduce using rule 78 (type -> NUMBER .)
    CORIZQ          reduce using rule 78 (type -> NUMBER .)
    LLAVEIZQ        reduce using rule 78 (type -> NUMBER .)
    PARDER          reduce using rule 78 (type -> NUMBER .)
    COMA            reduce using rule 78 (type -> NUMBER .)


state 144

    (79) type -> FLOAT .

    IG              reduce using rule 79 (type -> FLOAT .)
    PYC             reduce using rule 79 (type -> FLOAT .)
    CORIZQ          reduce using rule 79 (type -> FLOAT .)
    LLAVEIZQ        reduce using rule 79 (type -> FLOAT .)
    PARDER          reduce using rule 79 (type -> FLOAT .)
    COMA            reduce using rule 79 (type -> FLOAT .)


state 145

    (80) type -> STRING .

    IG              reduce using rule 80 (type -> STRING .)
    PYC             reduce using rule 80 (type -> STRING .)
    CORIZQ          reduce using rule 80 (type -> STRING .)
    LLAVEIZQ        reduce using rule 80 (type -> STRING .)
    PARDER          reduce using rule 80 (type -> STRING .)
    COMA            reduce using rule 80 (type -> STRING .)


state 146

    (81) type -> BOOL .

    IG              reduce using rule 81 (type -> BOOL .)
    PYC             reduce using rule 81 (type -> BOOL .)
    CORIZQ          reduce using rule 81 (type -> BOOL .)
    LLAVEIZQ        reduce using rule 81 (type -> BOOL .)
    PARDER          reduce using rule 81 (type -> BOOL .)
    COMA            reduce using rule 81 (type -> BOOL .)


state 147

    (82) type -> CHAR .

    IG              reduce using rule 82 (type -> CHAR .)
    PYC             reduce using rule 82 (type -> CHAR .)
    CORIZQ          reduce using rule 82 (type -> CHAR .)
    LLAVEIZQ        reduce using rule 82 (type -> CHAR .)
    PARDER          reduce using rule 82 (type -> CHAR .)
    COMA            reduce using rule 82 (type -> CHAR .)


state 148

    (35) declaracionValor -> VAR ID IG expression . PYC
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             shift and go to state 210
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 149

    (37) asignacion -> ID IG expression PYC .

    CONSOLE         reduce using rule 37 (asignacion -> ID IG expression PYC .)
    IF              reduce using rule 37 (asignacion -> ID IG expression PYC .)
    SWITCH          reduce using rule 37 (asignacion -> ID IG expression PYC .)
    WHILE           reduce using rule 37 (asignacion -> ID IG expression PYC .)
    FOR             reduce using rule 37 (asignacion -> ID IG expression PYC .)
    VAR             reduce using rule 37 (asignacion -> ID IG expression PYC .)
    ID              reduce using rule 37 (asignacion -> ID IG expression PYC .)
    CONST           reduce using rule 37 (asignacion -> ID IG expression PYC .)
    BREAK           reduce using rule 37 (asignacion -> ID IG expression PYC .)
    CONTINUE        reduce using rule 37 (asignacion -> ID IG expression PYC .)
    RETURN          reduce using rule 37 (asignacion -> ID IG expression PYC .)
    FUNC            reduce using rule 37 (asignacion -> ID IG expression PYC .)
    INTERFACE       reduce using rule 37 (asignacion -> ID IG expression PYC .)
    $end            reduce using rule 37 (asignacion -> ID IG expression PYC .)
    LLAVEDER        reduce using rule 37 (asignacion -> ID IG expression PYC .)
    DEFAULT         reduce using rule 37 (asignacion -> ID IG expression PYC .)
    CASE            reduce using rule 37 (asignacion -> ID IG expression PYC .)


state 150

    (42) arrayPush -> ID PUNTO PUSH PARIZQ . expression PARDER PYC
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 211
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 151

    (72) call -> ID PARIZQ expressionList PARDER . PYC

    PYC             shift and go to state 212


state 152

    (92) expressionList -> expressionList COMA . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 213
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 153

    (73) call -> ID PARIZQ PARDER PYC .

    CONSOLE         reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    IF              reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    SWITCH          reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    WHILE           reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    FOR             reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    VAR             reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    ID              reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    CONST           reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    BREAK           reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    CONTINUE        reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    RETURN          reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    FUNC            reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    INTERFACE       reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    $end            reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    LLAVEDER        reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    DEFAULT         reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)
    CASE            reduce using rule 73 (call -> ID PARIZQ PARDER PYC .)


state 154

    (63) incrementoIns -> ID MAS MAS PYC .

    CONSOLE         reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    IF              reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    SWITCH          reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    WHILE           reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    FOR             reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    VAR             reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    ID              reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    CONST           reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    BREAK           reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    CONTINUE        reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    RETURN          reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    FUNC            reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    INTERFACE       reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    $end            reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    LLAVEDER        reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    DEFAULT         reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)
    CASE            reduce using rule 63 (incrementoIns -> ID MAS MAS PYC .)


state 155

    (149) acceso -> CORIZQ expression CORDER .

    CORIZQ          reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    IG              reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    PYC             reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    MAS             reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    MENOS           reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    POR             reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    DIVIDIDO        reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    MODULO          reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    IGIG            reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    DIF             reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    MAYQUE          reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    MENQUE          reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    MAYIGUAL        reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    MENIGUAL        reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    OR              reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    AND             reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    PUNTO           reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    PARDER          reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    COMA            reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    CORDER          reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    DOSPTS          reduce using rule 149 (acceso -> CORIZQ expression CORDER .)
    LLAVEDER        reduce using rule 149 (acceso -> CORIZQ expression CORDER .)


state 156

    (38) asignacionIndMatriz -> accesoMatriz IG expression PYC .

    CONSOLE         reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    IF              reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    SWITCH          reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    WHILE           reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    FOR             reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    VAR             reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    ID              reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    CONST           reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    BREAK           reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    CONTINUE        reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    RETURN          reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    FUNC            reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    INTERFACE       reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    $end            reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    LLAVEDER        reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    DEFAULT         reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)
    CASE            reduce using rule 38 (asignacionIndMatriz -> accesoMatriz IG expression PYC .)


state 157

    (89) interdeclarationConst -> CONST ID DOSPTS ID . IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (83) type -> ID .

  ! shift/reduce conflict for IG resolved as shift
    IG              shift and go to state 214
    CORIZQ          reduce using rule 83 (type -> ID .)

  ! IG              [ reduce using rule 83 (type -> ID .) ]


state 158

    (39) declaracionConstante -> CONST ID DOSPTS type . IG expression PYC
    (44) matrizConstante -> CONST ID DOSPTS type . corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> CONST ID DOSPTS type . corchetes IG arrayPrimitivo PYC
    (84) type -> type . corchete
    (46) corchetes -> . corchetes corchete
    (47) corchetes -> . corchete
    (48) corchete -> . CORIZQ CORDER

    IG              shift and go to state 215
    CORIZQ          shift and go to state 217

    corchetes                      shift and go to state 216
    corchete                       shift and go to state 209

state 159

    (40) declConstanteValor -> CONST ID IG expression . PYC
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             shift and go to state 218
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 160

    (95) expression -> expression MAS expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 95 (expression -> expression MAS expression .)
    MAS             reduce using rule 95 (expression -> expression MAS expression .)
    MENOS           reduce using rule 95 (expression -> expression MAS expression .)
    IGIG            reduce using rule 95 (expression -> expression MAS expression .)
    DIF             reduce using rule 95 (expression -> expression MAS expression .)
    MAYQUE          reduce using rule 95 (expression -> expression MAS expression .)
    MENQUE          reduce using rule 95 (expression -> expression MAS expression .)
    MAYIGUAL        reduce using rule 95 (expression -> expression MAS expression .)
    MENIGUAL        reduce using rule 95 (expression -> expression MAS expression .)
    OR              reduce using rule 95 (expression -> expression MAS expression .)
    AND             reduce using rule 95 (expression -> expression MAS expression .)
    PUNTO           reduce using rule 95 (expression -> expression MAS expression .)
    PARDER          reduce using rule 95 (expression -> expression MAS expression .)
    COMA            reduce using rule 95 (expression -> expression MAS expression .)
    CORDER          reduce using rule 95 (expression -> expression MAS expression .)
    DOSPTS          reduce using rule 95 (expression -> expression MAS expression .)
    LLAVEDER        reduce using rule 95 (expression -> expression MAS expression .)
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112

  ! POR             [ reduce using rule 95 (expression -> expression MAS expression .) ]
  ! DIVIDIDO        [ reduce using rule 95 (expression -> expression MAS expression .) ]
  ! MODULO          [ reduce using rule 95 (expression -> expression MAS expression .) ]
  ! MAS             [ shift and go to state 108 ]
  ! MENOS           [ shift and go to state 109 ]
  ! IGIG            [ shift and go to state 113 ]
  ! DIF             [ shift and go to state 114 ]
  ! MAYQUE          [ shift and go to state 115 ]
  ! MENQUE          [ shift and go to state 116 ]
  ! MAYIGUAL        [ shift and go to state 117 ]
  ! MENIGUAL        [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]
  ! PUNTO           [ shift and go to state 121 ]


state 161

    (96) expression -> expression MENOS expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 96 (expression -> expression MENOS expression .)
    MAS             reduce using rule 96 (expression -> expression MENOS expression .)
    MENOS           reduce using rule 96 (expression -> expression MENOS expression .)
    IGIG            reduce using rule 96 (expression -> expression MENOS expression .)
    DIF             reduce using rule 96 (expression -> expression MENOS expression .)
    MAYQUE          reduce using rule 96 (expression -> expression MENOS expression .)
    MENQUE          reduce using rule 96 (expression -> expression MENOS expression .)
    MAYIGUAL        reduce using rule 96 (expression -> expression MENOS expression .)
    MENIGUAL        reduce using rule 96 (expression -> expression MENOS expression .)
    OR              reduce using rule 96 (expression -> expression MENOS expression .)
    AND             reduce using rule 96 (expression -> expression MENOS expression .)
    PUNTO           reduce using rule 96 (expression -> expression MENOS expression .)
    PARDER          reduce using rule 96 (expression -> expression MENOS expression .)
    COMA            reduce using rule 96 (expression -> expression MENOS expression .)
    CORDER          reduce using rule 96 (expression -> expression MENOS expression .)
    DOSPTS          reduce using rule 96 (expression -> expression MENOS expression .)
    LLAVEDER        reduce using rule 96 (expression -> expression MENOS expression .)
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112

  ! POR             [ reduce using rule 96 (expression -> expression MENOS expression .) ]
  ! DIVIDIDO        [ reduce using rule 96 (expression -> expression MENOS expression .) ]
  ! MODULO          [ reduce using rule 96 (expression -> expression MENOS expression .) ]
  ! MAS             [ shift and go to state 108 ]
  ! MENOS           [ shift and go to state 109 ]
  ! IGIG            [ shift and go to state 113 ]
  ! DIF             [ shift and go to state 114 ]
  ! MAYQUE          [ shift and go to state 115 ]
  ! MENQUE          [ shift and go to state 116 ]
  ! MAYIGUAL        [ shift and go to state 117 ]
  ! MENIGUAL        [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]
  ! PUNTO           [ shift and go to state 121 ]


state 162

    (97) expression -> expression POR expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 97 (expression -> expression POR expression .)
    MAS             reduce using rule 97 (expression -> expression POR expression .)
    MENOS           reduce using rule 97 (expression -> expression POR expression .)
    POR             reduce using rule 97 (expression -> expression POR expression .)
    DIVIDIDO        reduce using rule 97 (expression -> expression POR expression .)
    MODULO          reduce using rule 97 (expression -> expression POR expression .)
    IGIG            reduce using rule 97 (expression -> expression POR expression .)
    DIF             reduce using rule 97 (expression -> expression POR expression .)
    MAYQUE          reduce using rule 97 (expression -> expression POR expression .)
    MENQUE          reduce using rule 97 (expression -> expression POR expression .)
    MAYIGUAL        reduce using rule 97 (expression -> expression POR expression .)
    MENIGUAL        reduce using rule 97 (expression -> expression POR expression .)
    OR              reduce using rule 97 (expression -> expression POR expression .)
    AND             reduce using rule 97 (expression -> expression POR expression .)
    PUNTO           reduce using rule 97 (expression -> expression POR expression .)
    PARDER          reduce using rule 97 (expression -> expression POR expression .)
    COMA            reduce using rule 97 (expression -> expression POR expression .)
    CORDER          reduce using rule 97 (expression -> expression POR expression .)
    DOSPTS          reduce using rule 97 (expression -> expression POR expression .)
    LLAVEDER        reduce using rule 97 (expression -> expression POR expression .)

  ! MAS             [ shift and go to state 108 ]
  ! MENOS           [ shift and go to state 109 ]
  ! POR             [ shift and go to state 110 ]
  ! DIVIDIDO        [ shift and go to state 111 ]
  ! MODULO          [ shift and go to state 112 ]
  ! IGIG            [ shift and go to state 113 ]
  ! DIF             [ shift and go to state 114 ]
  ! MAYQUE          [ shift and go to state 115 ]
  ! MENQUE          [ shift and go to state 116 ]
  ! MAYIGUAL        [ shift and go to state 117 ]
  ! MENIGUAL        [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]
  ! PUNTO           [ shift and go to state 121 ]


state 163

    (98) expression -> expression DIVIDIDO expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    MAS             reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    MENOS           reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    POR             reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    DIVIDIDO        reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    MODULO          reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    IGIG            reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    DIF             reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    MAYQUE          reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    MENQUE          reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    MAYIGUAL        reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    MENIGUAL        reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    OR              reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    AND             reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    PUNTO           reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    PARDER          reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    COMA            reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    CORDER          reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    DOSPTS          reduce using rule 98 (expression -> expression DIVIDIDO expression .)
    LLAVEDER        reduce using rule 98 (expression -> expression DIVIDIDO expression .)

  ! MAS             [ shift and go to state 108 ]
  ! MENOS           [ shift and go to state 109 ]
  ! POR             [ shift and go to state 110 ]
  ! DIVIDIDO        [ shift and go to state 111 ]
  ! MODULO          [ shift and go to state 112 ]
  ! IGIG            [ shift and go to state 113 ]
  ! DIF             [ shift and go to state 114 ]
  ! MAYQUE          [ shift and go to state 115 ]
  ! MENQUE          [ shift and go to state 116 ]
  ! MAYIGUAL        [ shift and go to state 117 ]
  ! MENIGUAL        [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]
  ! PUNTO           [ shift and go to state 121 ]


state 164

    (99) expression -> expression MODULO expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 99 (expression -> expression MODULO expression .)
    MAS             reduce using rule 99 (expression -> expression MODULO expression .)
    MENOS           reduce using rule 99 (expression -> expression MODULO expression .)
    POR             reduce using rule 99 (expression -> expression MODULO expression .)
    DIVIDIDO        reduce using rule 99 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 99 (expression -> expression MODULO expression .)
    IGIG            reduce using rule 99 (expression -> expression MODULO expression .)
    DIF             reduce using rule 99 (expression -> expression MODULO expression .)
    MAYQUE          reduce using rule 99 (expression -> expression MODULO expression .)
    MENQUE          reduce using rule 99 (expression -> expression MODULO expression .)
    MAYIGUAL        reduce using rule 99 (expression -> expression MODULO expression .)
    MENIGUAL        reduce using rule 99 (expression -> expression MODULO expression .)
    OR              reduce using rule 99 (expression -> expression MODULO expression .)
    AND             reduce using rule 99 (expression -> expression MODULO expression .)
    PUNTO           reduce using rule 99 (expression -> expression MODULO expression .)
    PARDER          reduce using rule 99 (expression -> expression MODULO expression .)
    COMA            reduce using rule 99 (expression -> expression MODULO expression .)
    CORDER          reduce using rule 99 (expression -> expression MODULO expression .)
    DOSPTS          reduce using rule 99 (expression -> expression MODULO expression .)
    LLAVEDER        reduce using rule 99 (expression -> expression MODULO expression .)

  ! MAS             [ shift and go to state 108 ]
  ! MENOS           [ shift and go to state 109 ]
  ! POR             [ shift and go to state 110 ]
  ! DIVIDIDO        [ shift and go to state 111 ]
  ! MODULO          [ shift and go to state 112 ]
  ! IGIG            [ shift and go to state 113 ]
  ! DIF             [ shift and go to state 114 ]
  ! MAYQUE          [ shift and go to state 115 ]
  ! MENQUE          [ shift and go to state 116 ]
  ! MAYIGUAL        [ shift and go to state 117 ]
  ! MENIGUAL        [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]
  ! PUNTO           [ shift and go to state 121 ]


state 165

    (100) expression -> expression IGIG expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 100 (expression -> expression IGIG expression .)
    IGIG            reduce using rule 100 (expression -> expression IGIG expression .)
    DIF             reduce using rule 100 (expression -> expression IGIG expression .)
    OR              reduce using rule 100 (expression -> expression IGIG expression .)
    AND             reduce using rule 100 (expression -> expression IGIG expression .)
    PUNTO           reduce using rule 100 (expression -> expression IGIG expression .)
    PARDER          reduce using rule 100 (expression -> expression IGIG expression .)
    COMA            reduce using rule 100 (expression -> expression IGIG expression .)
    CORDER          reduce using rule 100 (expression -> expression IGIG expression .)
    DOSPTS          reduce using rule 100 (expression -> expression IGIG expression .)
    LLAVEDER        reduce using rule 100 (expression -> expression IGIG expression .)
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118

  ! MAS             [ reduce using rule 100 (expression -> expression IGIG expression .) ]
  ! MENOS           [ reduce using rule 100 (expression -> expression IGIG expression .) ]
  ! POR             [ reduce using rule 100 (expression -> expression IGIG expression .) ]
  ! DIVIDIDO        [ reduce using rule 100 (expression -> expression IGIG expression .) ]
  ! MODULO          [ reduce using rule 100 (expression -> expression IGIG expression .) ]
  ! MAYQUE          [ reduce using rule 100 (expression -> expression IGIG expression .) ]
  ! MENQUE          [ reduce using rule 100 (expression -> expression IGIG expression .) ]
  ! MAYIGUAL        [ reduce using rule 100 (expression -> expression IGIG expression .) ]
  ! MENIGUAL        [ reduce using rule 100 (expression -> expression IGIG expression .) ]
  ! IGIG            [ shift and go to state 113 ]
  ! DIF             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]
  ! PUNTO           [ shift and go to state 121 ]


state 166

    (101) expression -> expression DIF expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 101 (expression -> expression DIF expression .)
    IGIG            reduce using rule 101 (expression -> expression DIF expression .)
    DIF             reduce using rule 101 (expression -> expression DIF expression .)
    OR              reduce using rule 101 (expression -> expression DIF expression .)
    AND             reduce using rule 101 (expression -> expression DIF expression .)
    PUNTO           reduce using rule 101 (expression -> expression DIF expression .)
    PARDER          reduce using rule 101 (expression -> expression DIF expression .)
    COMA            reduce using rule 101 (expression -> expression DIF expression .)
    CORDER          reduce using rule 101 (expression -> expression DIF expression .)
    DOSPTS          reduce using rule 101 (expression -> expression DIF expression .)
    LLAVEDER        reduce using rule 101 (expression -> expression DIF expression .)
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118

  ! MAS             [ reduce using rule 101 (expression -> expression DIF expression .) ]
  ! MENOS           [ reduce using rule 101 (expression -> expression DIF expression .) ]
  ! POR             [ reduce using rule 101 (expression -> expression DIF expression .) ]
  ! DIVIDIDO        [ reduce using rule 101 (expression -> expression DIF expression .) ]
  ! MODULO          [ reduce using rule 101 (expression -> expression DIF expression .) ]
  ! MAYQUE          [ reduce using rule 101 (expression -> expression DIF expression .) ]
  ! MENQUE          [ reduce using rule 101 (expression -> expression DIF expression .) ]
  ! MAYIGUAL        [ reduce using rule 101 (expression -> expression DIF expression .) ]
  ! MENIGUAL        [ reduce using rule 101 (expression -> expression DIF expression .) ]
  ! IGIG            [ shift and go to state 113 ]
  ! DIF             [ shift and go to state 114 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]
  ! PUNTO           [ shift and go to state 121 ]


state 167

    (102) expression -> expression MAYQUE expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 102 (expression -> expression MAYQUE expression .)
    IGIG            reduce using rule 102 (expression -> expression MAYQUE expression .)
    DIF             reduce using rule 102 (expression -> expression MAYQUE expression .)
    MAYQUE          reduce using rule 102 (expression -> expression MAYQUE expression .)
    MENQUE          reduce using rule 102 (expression -> expression MAYQUE expression .)
    MAYIGUAL        reduce using rule 102 (expression -> expression MAYQUE expression .)
    MENIGUAL        reduce using rule 102 (expression -> expression MAYQUE expression .)
    OR              reduce using rule 102 (expression -> expression MAYQUE expression .)
    AND             reduce using rule 102 (expression -> expression MAYQUE expression .)
    PUNTO           reduce using rule 102 (expression -> expression MAYQUE expression .)
    PARDER          reduce using rule 102 (expression -> expression MAYQUE expression .)
    COMA            reduce using rule 102 (expression -> expression MAYQUE expression .)
    CORDER          reduce using rule 102 (expression -> expression MAYQUE expression .)
    DOSPTS          reduce using rule 102 (expression -> expression MAYQUE expression .)
    LLAVEDER        reduce using rule 102 (expression -> expression MAYQUE expression .)
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112

  ! MAS             [ reduce using rule 102 (expression -> expression MAYQUE expression .) ]
  ! MENOS           [ reduce using rule 102 (expression -> expression MAYQUE expression .) ]
  ! POR             [ reduce using rule 102 (expression -> expression MAYQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 102 (expression -> expression MAYQUE expression .) ]
  ! MODULO          [ reduce using rule 102 (expression -> expression MAYQUE expression .) ]
  ! IGIG            [ shift and go to state 113 ]
  ! DIF             [ shift and go to state 114 ]
  ! MAYQUE          [ shift and go to state 115 ]
  ! MENQUE          [ shift and go to state 116 ]
  ! MAYIGUAL        [ shift and go to state 117 ]
  ! MENIGUAL        [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]
  ! PUNTO           [ shift and go to state 121 ]


state 168

    (103) expression -> expression MENQUE expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 103 (expression -> expression MENQUE expression .)
    IGIG            reduce using rule 103 (expression -> expression MENQUE expression .)
    DIF             reduce using rule 103 (expression -> expression MENQUE expression .)
    MAYQUE          reduce using rule 103 (expression -> expression MENQUE expression .)
    MENQUE          reduce using rule 103 (expression -> expression MENQUE expression .)
    MAYIGUAL        reduce using rule 103 (expression -> expression MENQUE expression .)
    MENIGUAL        reduce using rule 103 (expression -> expression MENQUE expression .)
    OR              reduce using rule 103 (expression -> expression MENQUE expression .)
    AND             reduce using rule 103 (expression -> expression MENQUE expression .)
    PUNTO           reduce using rule 103 (expression -> expression MENQUE expression .)
    PARDER          reduce using rule 103 (expression -> expression MENQUE expression .)
    COMA            reduce using rule 103 (expression -> expression MENQUE expression .)
    CORDER          reduce using rule 103 (expression -> expression MENQUE expression .)
    DOSPTS          reduce using rule 103 (expression -> expression MENQUE expression .)
    LLAVEDER        reduce using rule 103 (expression -> expression MENQUE expression .)
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112

  ! MAS             [ reduce using rule 103 (expression -> expression MENQUE expression .) ]
  ! MENOS           [ reduce using rule 103 (expression -> expression MENQUE expression .) ]
  ! POR             [ reduce using rule 103 (expression -> expression MENQUE expression .) ]
  ! DIVIDIDO        [ reduce using rule 103 (expression -> expression MENQUE expression .) ]
  ! MODULO          [ reduce using rule 103 (expression -> expression MENQUE expression .) ]
  ! IGIG            [ shift and go to state 113 ]
  ! DIF             [ shift and go to state 114 ]
  ! MAYQUE          [ shift and go to state 115 ]
  ! MENQUE          [ shift and go to state 116 ]
  ! MAYIGUAL        [ shift and go to state 117 ]
  ! MENIGUAL        [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]
  ! PUNTO           [ shift and go to state 121 ]


state 169

    (104) expression -> expression MAYIGUAL expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    IGIG            reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    DIF             reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    MAYQUE          reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    MENQUE          reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    MAYIGUAL        reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    MENIGUAL        reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    OR              reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    AND             reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    PUNTO           reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    PARDER          reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    COMA            reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    CORDER          reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    DOSPTS          reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    LLAVEDER        reduce using rule 104 (expression -> expression MAYIGUAL expression .)
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112

  ! MAS             [ reduce using rule 104 (expression -> expression MAYIGUAL expression .) ]
  ! MENOS           [ reduce using rule 104 (expression -> expression MAYIGUAL expression .) ]
  ! POR             [ reduce using rule 104 (expression -> expression MAYIGUAL expression .) ]
  ! DIVIDIDO        [ reduce using rule 104 (expression -> expression MAYIGUAL expression .) ]
  ! MODULO          [ reduce using rule 104 (expression -> expression MAYIGUAL expression .) ]
  ! IGIG            [ shift and go to state 113 ]
  ! DIF             [ shift and go to state 114 ]
  ! MAYQUE          [ shift and go to state 115 ]
  ! MENQUE          [ shift and go to state 116 ]
  ! MAYIGUAL        [ shift and go to state 117 ]
  ! MENIGUAL        [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]
  ! PUNTO           [ shift and go to state 121 ]


state 170

    (105) expression -> expression MENIGUAL expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 105 (expression -> expression MENIGUAL expression .)
    IGIG            reduce using rule 105 (expression -> expression MENIGUAL expression .)
    DIF             reduce using rule 105 (expression -> expression MENIGUAL expression .)
    MAYQUE          reduce using rule 105 (expression -> expression MENIGUAL expression .)
    MENQUE          reduce using rule 105 (expression -> expression MENIGUAL expression .)
    MAYIGUAL        reduce using rule 105 (expression -> expression MENIGUAL expression .)
    MENIGUAL        reduce using rule 105 (expression -> expression MENIGUAL expression .)
    OR              reduce using rule 105 (expression -> expression MENIGUAL expression .)
    AND             reduce using rule 105 (expression -> expression MENIGUAL expression .)
    PUNTO           reduce using rule 105 (expression -> expression MENIGUAL expression .)
    PARDER          reduce using rule 105 (expression -> expression MENIGUAL expression .)
    COMA            reduce using rule 105 (expression -> expression MENIGUAL expression .)
    CORDER          reduce using rule 105 (expression -> expression MENIGUAL expression .)
    DOSPTS          reduce using rule 105 (expression -> expression MENIGUAL expression .)
    LLAVEDER        reduce using rule 105 (expression -> expression MENIGUAL expression .)
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112

  ! MAS             [ reduce using rule 105 (expression -> expression MENIGUAL expression .) ]
  ! MENOS           [ reduce using rule 105 (expression -> expression MENIGUAL expression .) ]
  ! POR             [ reduce using rule 105 (expression -> expression MENIGUAL expression .) ]
  ! DIVIDIDO        [ reduce using rule 105 (expression -> expression MENIGUAL expression .) ]
  ! MODULO          [ reduce using rule 105 (expression -> expression MENIGUAL expression .) ]
  ! IGIG            [ shift and go to state 113 ]
  ! DIF             [ shift and go to state 114 ]
  ! MAYQUE          [ shift and go to state 115 ]
  ! MENQUE          [ shift and go to state 116 ]
  ! MAYIGUAL        [ shift and go to state 117 ]
  ! MENIGUAL        [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]
  ! PUNTO           [ shift and go to state 121 ]


state 171

    (106) expression -> expression OR expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 106 (expression -> expression OR expression .)
    OR              reduce using rule 106 (expression -> expression OR expression .)
    PUNTO           reduce using rule 106 (expression -> expression OR expression .)
    PARDER          reduce using rule 106 (expression -> expression OR expression .)
    COMA            reduce using rule 106 (expression -> expression OR expression .)
    CORDER          reduce using rule 106 (expression -> expression OR expression .)
    DOSPTS          reduce using rule 106 (expression -> expression OR expression .)
    LLAVEDER        reduce using rule 106 (expression -> expression OR expression .)
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    AND             shift and go to state 120

  ! MAS             [ reduce using rule 106 (expression -> expression OR expression .) ]
  ! MENOS           [ reduce using rule 106 (expression -> expression OR expression .) ]
  ! POR             [ reduce using rule 106 (expression -> expression OR expression .) ]
  ! DIVIDIDO        [ reduce using rule 106 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 106 (expression -> expression OR expression .) ]
  ! IGIG            [ reduce using rule 106 (expression -> expression OR expression .) ]
  ! DIF             [ reduce using rule 106 (expression -> expression OR expression .) ]
  ! MAYQUE          [ reduce using rule 106 (expression -> expression OR expression .) ]
  ! MENQUE          [ reduce using rule 106 (expression -> expression OR expression .) ]
  ! MAYIGUAL        [ reduce using rule 106 (expression -> expression OR expression .) ]
  ! MENIGUAL        [ reduce using rule 106 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 106 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 119 ]
  ! PUNTO           [ shift and go to state 121 ]


state 172

    (107) expression -> expression AND expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             reduce using rule 107 (expression -> expression AND expression .)
    OR              reduce using rule 107 (expression -> expression AND expression .)
    AND             reduce using rule 107 (expression -> expression AND expression .)
    PUNTO           reduce using rule 107 (expression -> expression AND expression .)
    PARDER          reduce using rule 107 (expression -> expression AND expression .)
    COMA            reduce using rule 107 (expression -> expression AND expression .)
    CORDER          reduce using rule 107 (expression -> expression AND expression .)
    DOSPTS          reduce using rule 107 (expression -> expression AND expression .)
    LLAVEDER        reduce using rule 107 (expression -> expression AND expression .)
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118

  ! MAS             [ reduce using rule 107 (expression -> expression AND expression .) ]
  ! MENOS           [ reduce using rule 107 (expression -> expression AND expression .) ]
  ! POR             [ reduce using rule 107 (expression -> expression AND expression .) ]
  ! DIVIDIDO        [ reduce using rule 107 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 107 (expression -> expression AND expression .) ]
  ! IGIG            [ reduce using rule 107 (expression -> expression AND expression .) ]
  ! DIF             [ reduce using rule 107 (expression -> expression AND expression .) ]
  ! MAYQUE          [ reduce using rule 107 (expression -> expression AND expression .) ]
  ! MENQUE          [ reduce using rule 107 (expression -> expression AND expression .) ]
  ! MAYIGUAL        [ reduce using rule 107 (expression -> expression AND expression .) ]
  ! MENIGUAL        [ reduce using rule 107 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]
  ! PUNTO           [ shift and go to state 121 ]


state 173

    (142) funcionEmbebida -> expression PUNTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 219


state 174

    (109) expression -> PARIZQ expression PARDER .

    PYC             reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    MAS             reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    MENOS           reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    POR             reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    MODULO          reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    IGIG            reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    DIF             reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    MENQUE          reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    MAYIGUAL        reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    MENIGUAL        reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    OR              reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    AND             reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    PUNTO           reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    PARDER          reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    COMA            reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    CORDER          reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 109 (expression -> PARIZQ expression PARDER .)
    LLAVEDER        reduce using rule 109 (expression -> PARIZQ expression PARDER .)


state 175

    (110) expression -> ID PARIZQ expressionList . PARDER
    (92) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 220
    COMA            shift and go to state 152


state 176

    (111) expression -> ID PARIZQ PARDER .

    PYC             reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    MAS             reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    POR             reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    IGIG            reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    DIF             reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    MAYQUE          reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    MENQUE          reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    MENIGUAL        reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    OR              reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    AND             reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    PUNTO           reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    COMA            reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    DOSPTS          reduce using rule 111 (expression -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 111 (expression -> ID PARIZQ PARDER .)


state 177

    (136) accesoInterface -> ID PUNTO ID .

    PYC             reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    MAS             reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    MENOS           reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    POR             reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    DIVIDIDO        reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    MODULO          reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    IGIG            reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    DIF             reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    MAYQUE          reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    MENQUE          reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    MAYIGUAL        reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    MENIGUAL        reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    OR              reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    AND             reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    PUNTO           reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    PARDER          reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    COMA            reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    CORDER          reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    DOSPTS          reduce using rule 136 (accesoInterface -> ID PUNTO ID .)
    LLAVEDER        reduce using rule 136 (accesoInterface -> ID PUNTO ID .)


state 178

    (123) expression -> ID PUNTO popjoin . PARIZQ PARDER

    PARIZQ          shift and go to state 221


state 179

    (126) expression -> ID PUNTO INDEXOF . PARIZQ expression PARDER

    PARIZQ          shift and go to state 222


state 180

    (127) expression -> ID PUNTO LENGTH .

    PYC             reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    MAS             reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    MENOS           reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    POR             reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    DIVIDIDO        reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    MODULO          reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    IGIG            reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    DIF             reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    MAYQUE          reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    MENQUE          reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    MAYIGUAL        reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    MENIGUAL        reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    OR              reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    AND             reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    PUNTO           reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    PARDER          reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    COMA            reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    CORDER          reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    DOSPTS          reduce using rule 127 (expression -> ID PUNTO LENGTH .)
    LLAVEDER        reduce using rule 127 (expression -> ID PUNTO LENGTH .)


state 181

    (141) funcionEmbebida -> ID PUNTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 223


state 182

    (143) funcionEmbebida -> ID PUNTO TOLOWERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 224


state 183

    (144) funcionEmbebida -> ID PUNTO TOUPPERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 225


state 184

    (124) popjoin -> POP .

    PARIZQ          reduce using rule 124 (popjoin -> POP .)


state 185

    (125) popjoin -> JOIN .

    PARIZQ          reduce using rule 125 (popjoin -> JOIN .)


state 186

    (134) listArray -> ID CORIZQ expression . CORDER
    (149) acceso -> CORIZQ expression . CORDER
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    CORDER          shift and go to state 226
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 187

    (137) funcEspecialObject -> OBJECT PUNTO VALUES . PARIZQ expression PARDER

    PARIZQ          shift and go to state 227


state 188

    (138) funcEspecialObject -> OBJECT PUNTO KEYS . PARIZQ expression PARDER

    PARIZQ          shift and go to state 228


state 189

    (139) funcionEmbebida -> PARSEFLOAT PARIZQ expression . PARDER
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PARDER          shift and go to state 229
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 190

    (140) funcionEmbebida -> PARSEINT PARIZQ expression . PARDER
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PARDER          shift and go to state 230
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 191

    (65) functionstmt -> FUNC ID funcparams functype . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 231


state 192

    (70) functype -> DOSPTS . type
    (78) type -> . NUMBER
    (79) type -> . FLOAT
    (80) type -> . STRING
    (81) type -> . BOOL
    (82) type -> . CHAR
    (83) type -> . ID
    (84) type -> . type corchete

    NUMBER          shift and go to state 143
    FLOAT           shift and go to state 144
    STRING          shift and go to state 145
    BOOL            shift and go to state 146
    CHAR            shift and go to state 147
    ID              shift and go to state 233

    type                           shift and go to state 232

state 193

    (66) funcparams -> PARIZQ paramsList . PARDER
    (68) paramsList -> paramsList . COMA ID DOSPTS type

    PARDER          shift and go to state 234
    COMA            shift and go to state 235


state 194

    (67) funcparams -> PARIZQ PARDER .

    DOSPTS          reduce using rule 67 (funcparams -> PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 67 (funcparams -> PARIZQ PARDER .)


state 195

    (69) paramsList -> ID . DOSPTS type

    DOSPTS          shift and go to state 236


state 196

    (87) attributeList -> ID . DOSPTS type PYC

    DOSPTS          shift and go to state 237


state 197

    (85) interfacecreation -> INTERFACE ID LLAVEIZQ attributeList . LLAVEDER
    (86) attributeList -> attributeList . ID DOSPTS type PYC

    LLAVEDER        shift and go to state 239
    ID              shift and go to state 238


state 198

    (33) print -> CONSOLE PUNTO LOG PARIZQ expressionList . PARDER PYC
    (92) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 240
    COMA            shift and go to state 152


state 199

    (49) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (50) ifElse -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER elseifs
    (52) ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    block                          shift and go to state 241
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 200

    (56) switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ . casos LLAVEDER
    (57) switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ . casos DEFAULT DOSPTS block LLAVEDER
    (58) casos -> . casos caso
    (59) casos -> . caso
    (60) caso -> . CASE expression DOSPTS block

    CASE            shift and go to state 244

    casos                          shift and go to state 242
    caso                           shift and go to state 243

state 201

    (61) whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    block                          shift and go to state 245
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 202

    (62) forRange -> FOR PARIZQ declaration expression PYC . incremento PARDER LLAVEIZQ block LLAVEDER
    (64) incremento -> . ID MAS MAS

    ID              shift and go to state 247

    incremento                     shift and go to state 246

state 203

    (34) declaration -> VAR ID DOSPTS . type IG expression PYC
    (78) type -> . NUMBER
    (79) type -> . FLOAT
    (80) type -> . STRING
    (81) type -> . BOOL
    (82) type -> . CHAR
    (83) type -> . ID
    (84) type -> . type corchete

    NUMBER          shift and go to state 143
    FLOAT           shift and go to state 144
    STRING          shift and go to state 145
    BOOL            shift and go to state 146
    CHAR            shift and go to state 147
    ID              shift and go to state 233

    type                           shift and go to state 248

state 204

    (88) interdeclaration -> VAR ID DOSPTS ID IG . LLAVEIZQ interfaceContent LLAVEDER PYC

    LLAVEIZQ        shift and go to state 249


state 205

    (34) declaration -> VAR ID DOSPTS type IG . expression PYC
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 250
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 206

    (36) declaracionTipo -> VAR ID DOSPTS type PYC .

    CONSOLE         reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    IF              reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    SWITCH          reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    WHILE           reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    FOR             reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    VAR             reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    ID              reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    CONST           reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    BREAK           reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    CONTINUE        reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    RETURN          reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    FUNC            reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    INTERFACE       reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    $end            reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    LLAVEDER        reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    DEFAULT         reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)
    CASE            reduce using rule 36 (declaracionTipo -> VAR ID DOSPTS type PYC .)


state 207

    (41) arrayDeclaration -> VAR ID DOSPTS type CORIZQ . CORDER IG arrayPrimitivo PYC
    (48) corchete -> CORIZQ . CORDER

    CORDER          shift and go to state 251


state 208

    (43) matrizVariable -> VAR ID DOSPTS type corchetes . IG matrizPrimitiva PYC
    (46) corchetes -> corchetes . corchete
    (48) corchete -> . CORIZQ CORDER

    IG              shift and go to state 252
    CORIZQ          shift and go to state 217

    corchete                       shift and go to state 253

state 209

    (84) type -> type corchete .
    (47) corchetes -> corchete .

  ! reduce/reduce conflict for IG resolved using rule 47 (corchetes -> corchete .)
  ! reduce/reduce conflict for CORIZQ resolved using rule 47 (corchetes -> corchete .)
    PYC             reduce using rule 84 (type -> type corchete .)
    IG              reduce using rule 47 (corchetes -> corchete .)
    CORIZQ          reduce using rule 47 (corchetes -> corchete .)

  ! IG              [ reduce using rule 84 (type -> type corchete .) ]
  ! CORIZQ          [ reduce using rule 84 (type -> type corchete .) ]


state 210

    (35) declaracionValor -> VAR ID IG expression PYC .

    CONSOLE         reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    IF              reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    SWITCH          reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    WHILE           reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    FOR             reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    VAR             reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    ID              reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    CONST           reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    BREAK           reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    CONTINUE        reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    RETURN          reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    FUNC            reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    INTERFACE       reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    $end            reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    LLAVEDER        reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    DEFAULT         reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)
    CASE            reduce using rule 35 (declaracionValor -> VAR ID IG expression PYC .)


state 211

    (42) arrayPush -> ID PUNTO PUSH PARIZQ expression . PARDER PYC
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PARDER          shift and go to state 254
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 212

    (72) call -> ID PARIZQ expressionList PARDER PYC .

    CONSOLE         reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    IF              reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    SWITCH          reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    WHILE           reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    FOR             reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    VAR             reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    ID              reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    CONST           reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    BREAK           reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    CONTINUE        reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    RETURN          reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    FUNC            reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    INTERFACE       reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    $end            reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    LLAVEDER        reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    DEFAULT         reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)
    CASE            reduce using rule 72 (call -> ID PARIZQ expressionList PARDER PYC .)


state 213

    (92) expressionList -> expressionList COMA expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PARDER          reduce using rule 92 (expressionList -> expressionList COMA expression .)
    COMA            reduce using rule 92 (expressionList -> expressionList COMA expression .)
    CORDER          reduce using rule 92 (expressionList -> expressionList COMA expression .)
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 214

    (89) interdeclarationConst -> CONST ID DOSPTS ID IG . LLAVEIZQ interfaceContent LLAVEDER PYC

    LLAVEIZQ        shift and go to state 255


state 215

    (39) declaracionConstante -> CONST ID DOSPTS type IG . expression PYC
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 256
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 216

    (44) matrizConstante -> CONST ID DOSPTS type corchetes . IG matrizPrimitiva PYC
    (45) matrizConstante -> CONST ID DOSPTS type corchetes . IG arrayPrimitivo PYC
    (46) corchetes -> corchetes . corchete
    (48) corchete -> . CORIZQ CORDER

    IG              shift and go to state 257
    CORIZQ          shift and go to state 217

    corchete                       shift and go to state 253

state 217

    (48) corchete -> CORIZQ . CORDER

    CORDER          shift and go to state 258


state 218

    (40) declConstanteValor -> CONST ID IG expression PYC .

    CONSOLE         reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    IF              reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    SWITCH          reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    WHILE           reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    FOR             reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    VAR             reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    ID              reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    CONST           reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    BREAK           reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    CONTINUE        reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    RETURN          reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    FUNC            reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    INTERFACE       reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    $end            reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    LLAVEDER        reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    DEFAULT         reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)
    CASE            reduce using rule 40 (declConstanteValor -> CONST ID IG expression PYC .)


state 219

    (142) funcionEmbebida -> expression PUNTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 259


state 220

    (110) expression -> ID PARIZQ expressionList PARDER .

    PYC             reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    MAS             reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    MENOS           reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    POR             reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    DIVIDIDO        reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    MODULO          reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    IGIG            reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    DIF             reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    MAYQUE          reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    MENQUE          reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    MAYIGUAL        reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    MENIGUAL        reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    OR              reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    AND             reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    PUNTO           reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    PARDER          reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    COMA            reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    CORDER          reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    DOSPTS          reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)
    LLAVEDER        reduce using rule 110 (expression -> ID PARIZQ expressionList PARDER .)


state 221

    (123) expression -> ID PUNTO popjoin PARIZQ . PARDER

    PARDER          shift and go to state 260


state 222

    (126) expression -> ID PUNTO INDEXOF PARIZQ . expression PARDER
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 261
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 223

    (141) funcionEmbebida -> ID PUNTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 262


state 224

    (143) funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ . PARDER

    PARDER          shift and go to state 263


state 225

    (144) funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ . PARDER

    PARDER          shift and go to state 264


state 226

    (134) listArray -> ID CORIZQ expression CORDER .
    (149) acceso -> CORIZQ expression CORDER .

  ! reduce/reduce conflict for PYC resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for MAS resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for MENOS resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for POR resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for DIVIDIDO resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for MODULO resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for IGIG resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for DIF resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for MAYQUE resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for MENQUE resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for MAYIGUAL resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for MENIGUAL resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for OR resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for AND resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for PUNTO resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for PARDER resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for COMA resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for CORDER resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for DOSPTS resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
  ! reduce/reduce conflict for LLAVEDER resolved using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    PYC             reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    MAS             reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    MENOS           reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    POR             reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    DIVIDIDO        reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    MODULO          reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    IGIG            reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    DIF             reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    MAYQUE          reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    MENQUE          reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    MAYIGUAL        reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    MENIGUAL        reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    OR              reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    AND             reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    PUNTO           reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    PARDER          reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    COMA            reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    CORDER          reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    DOSPTS          reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    LLAVEDER        reduce using rule 134 (listArray -> ID CORIZQ expression CORDER .)
    CORIZQ          reduce using rule 149 (acceso -> CORIZQ expression CORDER .)

  ! PYC             [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! MAS             [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! MENOS           [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! POR             [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! DIVIDIDO        [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! MODULO          [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! IGIG            [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! DIF             [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! MAYQUE          [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! MENQUE          [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! MAYIGUAL        [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! MENIGUAL        [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! OR              [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! AND             [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! PUNTO           [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! PARDER          [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! COMA            [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! CORDER          [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! DOSPTS          [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]
  ! LLAVEDER        [ reduce using rule 149 (acceso -> CORIZQ expression CORDER .) ]


state 227

    (137) funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ . expression PARDER
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 265
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 228

    (138) funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ . expression PARDER
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 266
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 229

    (139) funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .

    PYC             reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    MAS             reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    MENOS           reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    POR             reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    MODULO          reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    IGIG            reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    DIF             reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    MENQUE          reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    MAYIGUAL        reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    MENIGUAL        reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    OR              reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    AND             reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    PUNTO           reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    PARDER          reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    COMA            reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    CORDER          reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)
    LLAVEDER        reduce using rule 139 (funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER .)


state 230

    (140) funcionEmbebida -> PARSEINT PARIZQ expression PARDER .

    PYC             reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    MAS             reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    MENOS           reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    POR             reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    MODULO          reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    IGIG            reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    DIF             reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    MENQUE          reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    MAYIGUAL        reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    MENIGUAL        reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    OR              reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    AND             reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    PUNTO           reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    PARDER          reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    COMA            reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    CORDER          reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)
    LLAVEDER        reduce using rule 140 (funcionEmbebida -> PARSEINT PARIZQ expression PARDER .)


state 231

    (65) functionstmt -> FUNC ID funcparams functype LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    block                          shift and go to state 267
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 232

    (70) functype -> DOSPTS type .
    (84) type -> type . corchete
    (48) corchete -> . CORIZQ CORDER

    LLAVEIZQ        reduce using rule 70 (functype -> DOSPTS type .)
    CORIZQ          shift and go to state 217

    corchete                       shift and go to state 268

state 233

    (83) type -> ID .

    CORIZQ          reduce using rule 83 (type -> ID .)
    LLAVEIZQ        reduce using rule 83 (type -> ID .)
    IG              reduce using rule 83 (type -> ID .)
    PARDER          reduce using rule 83 (type -> ID .)
    COMA            reduce using rule 83 (type -> ID .)
    PYC             reduce using rule 83 (type -> ID .)


state 234

    (66) funcparams -> PARIZQ paramsList PARDER .

    DOSPTS          reduce using rule 66 (funcparams -> PARIZQ paramsList PARDER .)
    LLAVEIZQ        reduce using rule 66 (funcparams -> PARIZQ paramsList PARDER .)


state 235

    (68) paramsList -> paramsList COMA . ID DOSPTS type

    ID              shift and go to state 269


state 236

    (69) paramsList -> ID DOSPTS . type
    (78) type -> . NUMBER
    (79) type -> . FLOAT
    (80) type -> . STRING
    (81) type -> . BOOL
    (82) type -> . CHAR
    (83) type -> . ID
    (84) type -> . type corchete

    NUMBER          shift and go to state 143
    FLOAT           shift and go to state 144
    STRING          shift and go to state 145
    BOOL            shift and go to state 146
    CHAR            shift and go to state 147
    ID              shift and go to state 233

    type                           shift and go to state 270

state 237

    (87) attributeList -> ID DOSPTS . type PYC
    (78) type -> . NUMBER
    (79) type -> . FLOAT
    (80) type -> . STRING
    (81) type -> . BOOL
    (82) type -> . CHAR
    (83) type -> . ID
    (84) type -> . type corchete

    NUMBER          shift and go to state 143
    FLOAT           shift and go to state 144
    STRING          shift and go to state 145
    BOOL            shift and go to state 146
    CHAR            shift and go to state 147
    ID              shift and go to state 233

    type                           shift and go to state 271

state 238

    (86) attributeList -> attributeList ID . DOSPTS type PYC

    DOSPTS          shift and go to state 272


state 239

    (85) interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .

    CONSOLE         reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    IF              reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    SWITCH          reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    WHILE           reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    FOR             reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    VAR             reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    ID              reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    CONST           reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    BREAK           reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    CONTINUE        reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    RETURN          reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    FUNC            reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    INTERFACE       reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    $end            reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    LLAVEDER        reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    DEFAULT         reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    CASE            reduce using rule 85 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)


state 240

    (33) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER . PYC

    PYC             shift and go to state 273


state 241

    (49) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (50) ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER elseifs
    (52) ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    LLAVEDER        shift and go to state 274
    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    instruccion                    shift and go to state 47
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 242

    (56) switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos . LLAVEDER
    (57) switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos . DEFAULT DOSPTS block LLAVEDER
    (58) casos -> casos . caso
    (60) caso -> . CASE expression DOSPTS block

    LLAVEDER        shift and go to state 275
    DEFAULT         shift and go to state 276
    CASE            shift and go to state 244

    caso                           shift and go to state 277

state 243

    (59) casos -> caso .

    LLAVEDER        reduce using rule 59 (casos -> caso .)
    DEFAULT         reduce using rule 59 (casos -> caso .)
    CASE            reduce using rule 59 (casos -> caso .)


state 244

    (60) caso -> CASE . expression DOSPTS block
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 278
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 245

    (61) whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    LLAVEDER        shift and go to state 279
    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    instruccion                    shift and go to state 47
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 246

    (62) forRange -> FOR PARIZQ declaration expression PYC incremento . PARDER LLAVEIZQ block LLAVEDER

    PARDER          shift and go to state 280


state 247

    (64) incremento -> ID . MAS MAS

    MAS             shift and go to state 281


state 248

    (34) declaration -> VAR ID DOSPTS type . IG expression PYC
    (84) type -> type . corchete
    (48) corchete -> . CORIZQ CORDER

    IG              shift and go to state 205
    CORIZQ          shift and go to state 217

    corchete                       shift and go to state 268

state 249

    (88) interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ . interfaceContent LLAVEDER PYC
    (90) interfaceContent -> . interfaceContent COMA ID DOSPTS expression
    (91) interfaceContent -> . ID DOSPTS expression

    ID              shift and go to state 282

    interfaceContent               shift and go to state 283

state 250

    (34) declaration -> VAR ID DOSPTS type IG expression . PYC
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             shift and go to state 284
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 251

    (41) arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER . IG arrayPrimitivo PYC
    (48) corchete -> CORIZQ CORDER .

  ! shift/reduce conflict for IG resolved as shift
    IG              shift and go to state 285
    PYC             reduce using rule 48 (corchete -> CORIZQ CORDER .)
    CORIZQ          reduce using rule 48 (corchete -> CORIZQ CORDER .)

  ! IG              [ reduce using rule 48 (corchete -> CORIZQ CORDER .) ]


state 252

    (43) matrizVariable -> VAR ID DOSPTS type corchetes IG . matrizPrimitiva PYC
    (129) matrizPrimitiva -> . CORIZQ listaArrays CORDER

    CORIZQ          shift and go to state 287

    matrizPrimitiva                shift and go to state 286

state 253

    (46) corchetes -> corchetes corchete .

    IG              reduce using rule 46 (corchetes -> corchetes corchete .)
    CORIZQ          reduce using rule 46 (corchetes -> corchetes corchete .)


state 254

    (42) arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER . PYC

    PYC             shift and go to state 288


state 255

    (89) interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ . interfaceContent LLAVEDER PYC
    (90) interfaceContent -> . interfaceContent COMA ID DOSPTS expression
    (91) interfaceContent -> . ID DOSPTS expression

    ID              shift and go to state 282

    interfaceContent               shift and go to state 289

state 256

    (39) declaracionConstante -> CONST ID DOSPTS type IG expression . PYC
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PYC             shift and go to state 290
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 257

    (44) matrizConstante -> CONST ID DOSPTS type corchetes IG . matrizPrimitiva PYC
    (45) matrizConstante -> CONST ID DOSPTS type corchetes IG . arrayPrimitivo PYC
    (129) matrizPrimitiva -> . CORIZQ listaArrays CORDER
    (128) arrayPrimitivo -> . CORIZQ expressionList CORDER

    CORIZQ          shift and go to state 293

    matrizPrimitiva                shift and go to state 291
    arrayPrimitivo                 shift and go to state 292

state 258

    (48) corchete -> CORIZQ CORDER .

    IG              reduce using rule 48 (corchete -> CORIZQ CORDER .)
    CORIZQ          reduce using rule 48 (corchete -> CORIZQ CORDER .)
    LLAVEIZQ        reduce using rule 48 (corchete -> CORIZQ CORDER .)
    PARDER          reduce using rule 48 (corchete -> CORIZQ CORDER .)
    COMA            reduce using rule 48 (corchete -> CORIZQ CORDER .)
    PYC             reduce using rule 48 (corchete -> CORIZQ CORDER .)


state 259

    (142) funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .

    PYC             reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    IGIG            reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    DIF             reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    MAYQUE          reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    MENQUE          reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    MENIGUAL        reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    PUNTO           reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    DOSPTS          reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 142 (funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER .)


state 260

    (123) expression -> ID PUNTO popjoin PARIZQ PARDER .

    PYC             reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    MAS             reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    MENOS           reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    POR             reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    MODULO          reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    IGIG            reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    DIF             reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    MAYQUE          reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    MENQUE          reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    MENIGUAL        reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    OR              reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    AND             reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    PUNTO           reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    PARDER          reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    COMA            reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    CORDER          reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    DOSPTS          reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)
    LLAVEDER        reduce using rule 123 (expression -> ID PUNTO popjoin PARIZQ PARDER .)


state 261

    (126) expression -> ID PUNTO INDEXOF PARIZQ expression . PARDER
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PARDER          shift and go to state 294
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 262

    (141) funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .

    PYC             reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    IGIG            reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DIF             reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MAYQUE          reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENQUE          reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    MENIGUAL        reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    PUNTO           reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    DOSPTS          reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 141 (funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER .)


state 263

    (143) funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .

    PYC             reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAS             reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    POR             reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    MODULO          reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    IGIG            reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    DIF             reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAYQUE          reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENQUE          reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENIGUAL        reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    OR              reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    AND             reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    COMA            reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    CORDER          reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    DOSPTS          reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)
    LLAVEDER        reduce using rule 143 (funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER .)


state 264

    (144) funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .

    PYC             reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAS             reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    POR             reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    MODULO          reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    IGIG            reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    DIF             reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAYQUE          reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENQUE          reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENIGUAL        reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    OR              reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    AND             reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    COMA            reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    CORDER          reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    DOSPTS          reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)
    LLAVEDER        reduce using rule 144 (funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER .)


state 265

    (137) funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression . PARDER
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PARDER          shift and go to state 295
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 266

    (138) funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression . PARDER
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PARDER          shift and go to state 296
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 267

    (65) functionstmt -> FUNC ID funcparams functype LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    LLAVEDER        shift and go to state 297
    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    instruccion                    shift and go to state 47
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 268

    (84) type -> type corchete .

    CORIZQ          reduce using rule 84 (type -> type corchete .)
    LLAVEIZQ        reduce using rule 84 (type -> type corchete .)
    IG              reduce using rule 84 (type -> type corchete .)
    PARDER          reduce using rule 84 (type -> type corchete .)
    COMA            reduce using rule 84 (type -> type corchete .)
    PYC             reduce using rule 84 (type -> type corchete .)


state 269

    (68) paramsList -> paramsList COMA ID . DOSPTS type

    DOSPTS          shift and go to state 298


state 270

    (69) paramsList -> ID DOSPTS type .
    (84) type -> type . corchete
    (48) corchete -> . CORIZQ CORDER

    PARDER          reduce using rule 69 (paramsList -> ID DOSPTS type .)
    COMA            reduce using rule 69 (paramsList -> ID DOSPTS type .)
    CORIZQ          shift and go to state 217

    corchete                       shift and go to state 268

state 271

    (87) attributeList -> ID DOSPTS type . PYC
    (84) type -> type . corchete
    (48) corchete -> . CORIZQ CORDER

    PYC             shift and go to state 299
    CORIZQ          shift and go to state 217

    corchete                       shift and go to state 268

state 272

    (86) attributeList -> attributeList ID DOSPTS . type PYC
    (78) type -> . NUMBER
    (79) type -> . FLOAT
    (80) type -> . STRING
    (81) type -> . BOOL
    (82) type -> . CHAR
    (83) type -> . ID
    (84) type -> . type corchete

    NUMBER          shift and go to state 143
    FLOAT           shift and go to state 144
    STRING          shift and go to state 145
    BOOL            shift and go to state 146
    CHAR            shift and go to state 147
    ID              shift and go to state 233

    type                           shift and go to state 300

state 273

    (33) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .

    CONSOLE         reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    IF              reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    SWITCH          reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    WHILE           reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    FOR             reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    VAR             reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    ID              reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    CONST           reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    BREAK           reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    CONTINUE        reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    RETURN          reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    FUNC            reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    INTERFACE       reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    $end            reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    LLAVEDER        reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    DEFAULT         reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    CASE            reduce using rule 33 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)


state 274

    (49) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .
    (50) ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER . ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER . elseifs
    (52) ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER . elseifs ELSE LLAVEIZQ block LLAVEDER
    (53) elseifs -> . elseifs elseif
    (54) elseifs -> . elseif
    (55) elseif -> . ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    CONSOLE         reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    SWITCH          reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FOR             reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONST           reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    DEFAULT         reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CASE            reduce using rule 49 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ELSE            shift and go to state 301

    elseifs                        shift and go to state 302
    elseif                         shift and go to state 303

state 275

    (56) switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .

    CONSOLE         reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    IF              reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    SWITCH          reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    WHILE           reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    FOR             reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    VAR             reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    ID              reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    CONST           reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    BREAK           reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    CONTINUE        reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    RETURN          reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    FUNC            reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    INTERFACE       reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    $end            reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    LLAVEDER        reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    DEFAULT         reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)
    CASE            reduce using rule 56 (switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER .)


state 276

    (57) switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT . DOSPTS block LLAVEDER

    DOSPTS          shift and go to state 304


state 277

    (58) casos -> casos caso .

    LLAVEDER        reduce using rule 58 (casos -> casos caso .)
    DEFAULT         reduce using rule 58 (casos -> casos caso .)
    CASE            reduce using rule 58 (casos -> casos caso .)


state 278

    (60) caso -> CASE expression . DOSPTS block
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    DOSPTS          shift and go to state 305
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 279

    (61) whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    SWITCH          reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FOR             reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONST           reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    DEFAULT         reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CASE            reduce using rule 61 (whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)


state 280

    (62) forRange -> FOR PARIZQ declaration expression PYC incremento PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 306


state 281

    (64) incremento -> ID MAS . MAS

    MAS             shift and go to state 307


state 282

    (91) interfaceContent -> ID . DOSPTS expression

    DOSPTS          shift and go to state 308


state 283

    (88) interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent . LLAVEDER PYC
    (90) interfaceContent -> interfaceContent . COMA ID DOSPTS expression

    LLAVEDER        shift and go to state 309
    COMA            shift and go to state 310


state 284

    (34) declaration -> VAR ID DOSPTS type IG expression PYC .

    CONSOLE         reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    IF              reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    SWITCH          reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    WHILE           reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    FOR             reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    VAR             reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    ID              reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    CONST           reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    BREAK           reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    CONTINUE        reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    RETURN          reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    FUNC            reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    INTERFACE       reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    $end            reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    MENOS           reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    NOT             reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    PARIZQ          reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    ENTERO          reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    DECIMAL         reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    CADENA          reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    TRUE            reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    FALSE           reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    OBJECT          reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    PARSEFLOAT      reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    PARSEINT        reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    TYPEOF          reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    LLAVEDER        reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    DEFAULT         reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)
    CASE            reduce using rule 34 (declaration -> VAR ID DOSPTS type IG expression PYC .)


state 285

    (41) arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG . arrayPrimitivo PYC
    (128) arrayPrimitivo -> . CORIZQ expressionList CORDER

    CORIZQ          shift and go to state 311

    arrayPrimitivo                 shift and go to state 312

state 286

    (43) matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva . PYC

    PYC             shift and go to state 313


state 287

    (129) matrizPrimitiva -> CORIZQ . listaArrays CORDER
    (132) listaArrays -> . listaArrays COMA arrayMatricial
    (133) listaArrays -> . arrayMatricial
    (130) arrayMatricial -> . CORIZQ expressionList CORDER
    (131) arrayMatricial -> . CORIZQ listaArrays CORDER

    CORIZQ          shift and go to state 314

    listaArrays                    shift and go to state 315
    arrayMatricial                 shift and go to state 316

state 288

    (42) arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .

    CONSOLE         reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    IF              reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    SWITCH          reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    WHILE           reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    FOR             reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    VAR             reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    ID              reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    CONST           reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    BREAK           reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    CONTINUE        reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    RETURN          reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    FUNC            reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    INTERFACE       reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    $end            reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    LLAVEDER        reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    DEFAULT         reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)
    CASE            reduce using rule 42 (arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC .)


state 289

    (89) interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent . LLAVEDER PYC
    (90) interfaceContent -> interfaceContent . COMA ID DOSPTS expression

    LLAVEDER        shift and go to state 317
    COMA            shift and go to state 310


state 290

    (39) declaracionConstante -> CONST ID DOSPTS type IG expression PYC .

    CONSOLE         reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    IF              reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    SWITCH          reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    WHILE           reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    FOR             reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    VAR             reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    ID              reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    CONST           reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    BREAK           reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    CONTINUE        reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    RETURN          reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    FUNC            reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    INTERFACE       reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    $end            reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    LLAVEDER        reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    DEFAULT         reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)
    CASE            reduce using rule 39 (declaracionConstante -> CONST ID DOSPTS type IG expression PYC .)


state 291

    (44) matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva . PYC

    PYC             shift and go to state 318


state 292

    (45) matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo . PYC

    PYC             shift and go to state 319


state 293

    (129) matrizPrimitiva -> CORIZQ . listaArrays CORDER
    (128) arrayPrimitivo -> CORIZQ . expressionList CORDER
    (132) listaArrays -> . listaArrays COMA arrayMatricial
    (133) listaArrays -> . arrayMatricial
    (92) expressionList -> . expressionList COMA expression
    (93) expressionList -> . expression
    (130) arrayMatricial -> . CORIZQ expressionList CORDER
    (131) arrayMatricial -> . CORIZQ listaArrays CORDER
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    CORIZQ          shift and go to state 314
    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    listaArrays                    shift and go to state 315
    expressionList                 shift and go to state 320
    arrayMatricial                 shift and go to state 316
    expression                     shift and go to state 100
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 294

    (126) expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .

    PYC             reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    MAS             reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    MENOS           reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    POR             reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    MODULO          reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    IGIG            reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    DIF             reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    MENQUE          reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    MAYIGUAL        reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    MENIGUAL        reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    OR              reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    AND             reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    PUNTO           reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    PARDER          reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    COMA            reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    CORDER          reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)
    LLAVEDER        reduce using rule 126 (expression -> ID PUNTO INDEXOF PARIZQ expression PARDER .)


state 295

    (137) funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .

    PYC             reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    MAS             reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    MENOS           reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    POR             reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    MODULO          reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    IGIG            reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    DIF             reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    MENQUE          reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    MAYIGUAL        reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    MENIGUAL        reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    OR              reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    AND             reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    PUNTO           reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    PARDER          reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    COMA            reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    CORDER          reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    LLAVEDER        reduce using rule 137 (funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)


state 296

    (138) funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .

    PYC             reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    MAS             reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    MENOS           reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    POR             reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    MODULO          reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    IGIG            reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    DIF             reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    MAYQUE          reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    MENQUE          reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    MAYIGUAL        reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    MENIGUAL        reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    OR              reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    AND             reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    PUNTO           reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    PARDER          reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    COMA            reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    CORDER          reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    LLAVEDER        reduce using rule 138 (funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)


state 297

    (65) functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    SWITCH          reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    FOR             reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    CONST           reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    DEFAULT         reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)
    CASE            reduce using rule 65 (functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER .)


state 298

    (68) paramsList -> paramsList COMA ID DOSPTS . type
    (78) type -> . NUMBER
    (79) type -> . FLOAT
    (80) type -> . STRING
    (81) type -> . BOOL
    (82) type -> . CHAR
    (83) type -> . ID
    (84) type -> . type corchete

    NUMBER          shift and go to state 143
    FLOAT           shift and go to state 144
    STRING          shift and go to state 145
    BOOL            shift and go to state 146
    CHAR            shift and go to state 147
    ID              shift and go to state 233

    type                           shift and go to state 321

state 299

    (87) attributeList -> ID DOSPTS type PYC .

    LLAVEDER        reduce using rule 87 (attributeList -> ID DOSPTS type PYC .)
    ID              reduce using rule 87 (attributeList -> ID DOSPTS type PYC .)


state 300

    (86) attributeList -> attributeList ID DOSPTS type . PYC
    (84) type -> type . corchete
    (48) corchete -> . CORIZQ CORDER

    PYC             shift and go to state 322
    CORIZQ          shift and go to state 217

    corchete                       shift and go to state 268

state 301

    (50) ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE . LLAVEIZQ block LLAVEDER
    (55) elseif -> ELSE . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 324
    IF              shift and go to state 323


state 302

    (51) ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .
    (52) ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs . ELSE LLAVEIZQ block LLAVEDER
    (53) elseifs -> elseifs . elseif
    (55) elseif -> . ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    CONSOLE         reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    IF              reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    SWITCH          reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    WHILE           reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    FOR             reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    VAR             reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    ID              reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    CONST           reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    BREAK           reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    CONTINUE        reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    RETURN          reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    FUNC            reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    INTERFACE       reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    $end            reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    LLAVEDER        reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    DEFAULT         reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    CASE            reduce using rule 51 (ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs .)
    ELSE            shift and go to state 325

    elseif                         shift and go to state 326

state 303

    (54) elseifs -> elseif .

    ELSE            reduce using rule 54 (elseifs -> elseif .)
    CONSOLE         reduce using rule 54 (elseifs -> elseif .)
    IF              reduce using rule 54 (elseifs -> elseif .)
    SWITCH          reduce using rule 54 (elseifs -> elseif .)
    WHILE           reduce using rule 54 (elseifs -> elseif .)
    FOR             reduce using rule 54 (elseifs -> elseif .)
    VAR             reduce using rule 54 (elseifs -> elseif .)
    ID              reduce using rule 54 (elseifs -> elseif .)
    CONST           reduce using rule 54 (elseifs -> elseif .)
    BREAK           reduce using rule 54 (elseifs -> elseif .)
    CONTINUE        reduce using rule 54 (elseifs -> elseif .)
    RETURN          reduce using rule 54 (elseifs -> elseif .)
    FUNC            reduce using rule 54 (elseifs -> elseif .)
    INTERFACE       reduce using rule 54 (elseifs -> elseif .)
    $end            reduce using rule 54 (elseifs -> elseif .)
    LLAVEDER        reduce using rule 54 (elseifs -> elseif .)
    DEFAULT         reduce using rule 54 (elseifs -> elseif .)
    CASE            reduce using rule 54 (elseifs -> elseif .)


state 304

    (57) switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    block                          shift and go to state 327
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 305

    (60) caso -> CASE expression DOSPTS . block
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    block                          shift and go to state 328
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 306

    (62) forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    declaration                    shift and go to state 13
    block                          shift and go to state 329
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 307

    (64) incremento -> ID MAS MAS .

    PARDER          reduce using rule 64 (incremento -> ID MAS MAS .)


state 308

    (91) interfaceContent -> ID DOSPTS . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 330
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 309

    (88) interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER . PYC

    PYC             shift and go to state 331


state 310

    (90) interfaceContent -> interfaceContent COMA . ID DOSPTS expression

    ID              shift and go to state 332


state 311

    (128) arrayPrimitivo -> CORIZQ . expressionList CORDER
    (92) expressionList -> . expressionList COMA expression
    (93) expressionList -> . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expressionList                 shift and go to state 320
    expression                     shift and go to state 100
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 312

    (41) arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo . PYC

    PYC             shift and go to state 333


state 313

    (43) matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .

    CONSOLE         reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    IF              reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    SWITCH          reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    WHILE           reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    FOR             reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    VAR             reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    ID              reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    CONST           reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    BREAK           reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    CONTINUE        reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    RETURN          reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    FUNC            reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    INTERFACE       reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    $end            reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    LLAVEDER        reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    DEFAULT         reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    CASE            reduce using rule 43 (matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC .)


state 314

    (130) arrayMatricial -> CORIZQ . expressionList CORDER
    (131) arrayMatricial -> CORIZQ . listaArrays CORDER
    (92) expressionList -> . expressionList COMA expression
    (93) expressionList -> . expression
    (132) listaArrays -> . listaArrays COMA arrayMatricial
    (133) listaArrays -> . arrayMatricial
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (130) arrayMatricial -> . CORIZQ expressionList CORDER
    (131) arrayMatricial -> . CORIZQ listaArrays CORDER
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    CORIZQ          shift and go to state 314
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expressionList                 shift and go to state 334
    listaArrays                    shift and go to state 335
    expression                     shift and go to state 100
    arrayMatricial                 shift and go to state 316
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 315

    (129) matrizPrimitiva -> CORIZQ listaArrays . CORDER
    (132) listaArrays -> listaArrays . COMA arrayMatricial

    CORDER          shift and go to state 336
    COMA            shift and go to state 337


state 316

    (133) listaArrays -> arrayMatricial .

    CORDER          reduce using rule 133 (listaArrays -> arrayMatricial .)
    COMA            reduce using rule 133 (listaArrays -> arrayMatricial .)


state 317

    (89) interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER . PYC

    PYC             shift and go to state 338


state 318

    (44) matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .

    CONSOLE         reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    IF              reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    SWITCH          reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    WHILE           reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    FOR             reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    VAR             reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    ID              reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    CONST           reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    BREAK           reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    CONTINUE        reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    RETURN          reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    FUNC            reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    INTERFACE       reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    $end            reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    LLAVEDER        reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    DEFAULT         reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)
    CASE            reduce using rule 44 (matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC .)


state 319

    (45) matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .

    CONSOLE         reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    IF              reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    SWITCH          reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    WHILE           reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    FOR             reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    VAR             reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    ID              reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    CONST           reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    BREAK           reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    CONTINUE        reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    RETURN          reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    FUNC            reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    INTERFACE       reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    $end            reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    LLAVEDER        reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    DEFAULT         reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)
    CASE            reduce using rule 45 (matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC .)


state 320

    (128) arrayPrimitivo -> CORIZQ expressionList . CORDER
    (92) expressionList -> expressionList . COMA expression

    CORDER          shift and go to state 339
    COMA            shift and go to state 152


state 321

    (68) paramsList -> paramsList COMA ID DOSPTS type .
    (84) type -> type . corchete
    (48) corchete -> . CORIZQ CORDER

    PARDER          reduce using rule 68 (paramsList -> paramsList COMA ID DOSPTS type .)
    COMA            reduce using rule 68 (paramsList -> paramsList COMA ID DOSPTS type .)
    CORIZQ          shift and go to state 217

    corchete                       shift and go to state 268

state 322

    (86) attributeList -> attributeList ID DOSPTS type PYC .

    LLAVEDER        reduce using rule 86 (attributeList -> attributeList ID DOSPTS type PYC .)
    ID              reduce using rule 86 (attributeList -> attributeList ID DOSPTS type PYC .)


state 323

    (55) elseif -> ELSE IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 340


state 324

    (50) ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    block                          shift and go to state 341
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 325

    (52) ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE . LLAVEIZQ block LLAVEDER
    (55) elseif -> ELSE . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 342
    IF              shift and go to state 323


state 326

    (53) elseifs -> elseifs elseif .

    ELSE            reduce using rule 53 (elseifs -> elseifs elseif .)
    CONSOLE         reduce using rule 53 (elseifs -> elseifs elseif .)
    IF              reduce using rule 53 (elseifs -> elseifs elseif .)
    SWITCH          reduce using rule 53 (elseifs -> elseifs elseif .)
    WHILE           reduce using rule 53 (elseifs -> elseifs elseif .)
    FOR             reduce using rule 53 (elseifs -> elseifs elseif .)
    VAR             reduce using rule 53 (elseifs -> elseifs elseif .)
    ID              reduce using rule 53 (elseifs -> elseifs elseif .)
    CONST           reduce using rule 53 (elseifs -> elseifs elseif .)
    BREAK           reduce using rule 53 (elseifs -> elseifs elseif .)
    CONTINUE        reduce using rule 53 (elseifs -> elseifs elseif .)
    RETURN          reduce using rule 53 (elseifs -> elseifs elseif .)
    FUNC            reduce using rule 53 (elseifs -> elseifs elseif .)
    INTERFACE       reduce using rule 53 (elseifs -> elseifs elseif .)
    $end            reduce using rule 53 (elseifs -> elseifs elseif .)
    LLAVEDER        reduce using rule 53 (elseifs -> elseifs elseif .)
    DEFAULT         reduce using rule 53 (elseifs -> elseifs elseif .)
    CASE            reduce using rule 53 (elseifs -> elseifs elseif .)


state 327

    (57) switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    LLAVEDER        shift and go to state 343
    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    instruccion                    shift and go to state 47
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 328

    (60) caso -> CASE expression DOSPTS block .
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    LLAVEDER        reduce using rule 60 (caso -> CASE expression DOSPTS block .)
    DEFAULT         reduce using rule 60 (caso -> CASE expression DOSPTS block .)
    CASE            reduce using rule 60 (caso -> CASE expression DOSPTS block .)
    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    instruccion                    shift and go to state 47
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 329

    (62) forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    LLAVEDER        shift and go to state 344
    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    declaration                    shift and go to state 13
    instruccion                    shift and go to state 47
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 330

    (91) interfaceContent -> ID DOSPTS expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    LLAVEDER        reduce using rule 91 (interfaceContent -> ID DOSPTS expression .)
    COMA            reduce using rule 91 (interfaceContent -> ID DOSPTS expression .)
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 331

    (88) interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .

    CONSOLE         reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    IF              reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    SWITCH          reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    WHILE           reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    FOR             reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    VAR             reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    ID              reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    CONST           reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    BREAK           reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    CONTINUE        reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    RETURN          reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    FUNC            reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    INTERFACE       reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    $end            reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    LLAVEDER        reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    DEFAULT         reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    CASE            reduce using rule 88 (interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)


state 332

    (90) interfaceContent -> interfaceContent COMA ID . DOSPTS expression

    DOSPTS          shift and go to state 345


state 333

    (41) arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .

    CONSOLE         reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    IF              reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    SWITCH          reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    WHILE           reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    FOR             reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    VAR             reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    ID              reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    CONST           reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    BREAK           reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    CONTINUE        reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    RETURN          reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    FUNC            reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    INTERFACE       reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    $end            reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    LLAVEDER        reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    DEFAULT         reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)
    CASE            reduce using rule 41 (arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC .)


state 334

    (130) arrayMatricial -> CORIZQ expressionList . CORDER
    (92) expressionList -> expressionList . COMA expression

    CORDER          shift and go to state 346
    COMA            shift and go to state 152


state 335

    (131) arrayMatricial -> CORIZQ listaArrays . CORDER
    (132) listaArrays -> listaArrays . COMA arrayMatricial

    CORDER          shift and go to state 347
    COMA            shift and go to state 337


state 336

    (129) matrizPrimitiva -> CORIZQ listaArrays CORDER .

    PYC             reduce using rule 129 (matrizPrimitiva -> CORIZQ listaArrays CORDER .)


state 337

    (132) listaArrays -> listaArrays COMA . arrayMatricial
    (130) arrayMatricial -> . CORIZQ expressionList CORDER
    (131) arrayMatricial -> . CORIZQ listaArrays CORDER

    CORIZQ          shift and go to state 314

    arrayMatricial                 shift and go to state 348

state 338

    (89) interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .

    CONSOLE         reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    IF              reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    SWITCH          reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    WHILE           reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    FOR             reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    VAR             reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    ID              reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    CONST           reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    BREAK           reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    CONTINUE        reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    RETURN          reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    FUNC            reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    INTERFACE       reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    $end            reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    LLAVEDER        reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    DEFAULT         reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    CASE            reduce using rule 89 (interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)


state 339

    (128) arrayPrimitivo -> CORIZQ expressionList CORDER .

    PYC             reduce using rule 128 (arrayPrimitivo -> CORIZQ expressionList CORDER .)


state 340

    (55) elseif -> ELSE IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 349
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 341

    (50) ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    LLAVEDER        shift and go to state 350
    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    instruccion                    shift and go to state 47
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 342

    (52) ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    block                          shift and go to state 351
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 343

    (57) switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .

    CONSOLE         reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    IF              reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    SWITCH          reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    WHILE           reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    FOR             reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    VAR             reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    ID              reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    CONST           reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    BREAK           reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    CONTINUE        reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    RETURN          reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    FUNC            reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    INTERFACE       reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    $end            reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    LLAVEDER        reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    DEFAULT         reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)
    CASE            reduce using rule 57 (switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER .)


state 344

    (62) forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    SWITCH          reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    FOR             reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    CONST           reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    DEFAULT         reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)
    CASE            reduce using rule 62 (forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER .)


state 345

    (90) interfaceContent -> interfaceContent COMA ID DOSPTS . expression
    (94) expression -> . MENOS expression
    (95) expression -> . expression MAS expression
    (96) expression -> . expression MENOS expression
    (97) expression -> . expression POR expression
    (98) expression -> . expression DIVIDIDO expression
    (99) expression -> . expression MODULO expression
    (100) expression -> . expression IGIG expression
    (101) expression -> . expression DIF expression
    (102) expression -> . expression MAYQUE expression
    (103) expression -> . expression MENQUE expression
    (104) expression -> . expression MAYIGUAL expression
    (105) expression -> . expression MENIGUAL expression
    (106) expression -> . expression OR expression
    (107) expression -> . expression AND expression
    (108) expression -> . NOT expression
    (109) expression -> . PARIZQ expression PARDER
    (110) expression -> . ID PARIZQ expressionList PARDER
    (111) expression -> . ID PARIZQ PARDER
    (114) expression -> . ENTERO
    (115) expression -> . DECIMAL
    (116) expression -> . CADENA
    (117) expression -> . booleano
    (118) expression -> . listArray
    (119) expression -> . accesoInterface
    (120) expression -> . accesoMatriz
    (121) expression -> . funcEspecialObject
    (122) expression -> . funcionEmbebida
    (123) expression -> . ID PUNTO popjoin PARIZQ PARDER
    (126) expression -> . ID PUNTO INDEXOF PARIZQ expression PARDER
    (127) expression -> . ID PUNTO LENGTH
    (112) booleano -> . TRUE
    (113) booleano -> . FALSE
    (134) listArray -> . ID CORIZQ expression CORDER
    (135) listArray -> . ID
    (136) accesoInterface -> . ID PUNTO ID
    (146) accesoMatriz -> . ID accesosMatriz
    (137) funcEspecialObject -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (138) funcEspecialObject -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (139) funcionEmbebida -> . PARSEFLOAT PARIZQ expression PARDER
    (140) funcionEmbebida -> . PARSEINT PARIZQ expression PARDER
    (141) funcionEmbebida -> . ID PUNTO TOSTRING PARIZQ PARDER
    (142) funcionEmbebida -> . expression PUNTO TOSTRING PARIZQ PARDER
    (143) funcionEmbebida -> . ID PUNTO TOLOWERCASE PARIZQ PARDER
    (144) funcionEmbebida -> . ID PUNTO TOUPPERCASE PARIZQ PARDER
    (145) funcionEmbebida -> . TYPEOF ID

    MENOS           shift and go to state 67
    NOT             shift and go to state 68
    PARIZQ          shift and go to state 69
    ID              shift and go to state 70
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 72
    CADENA          shift and go to state 73
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    OBJECT          shift and go to state 82
    PARSEFLOAT      shift and go to state 83
    PARSEINT        shift and go to state 84
    TYPEOF          shift and go to state 85

    expression                     shift and go to state 352
    booleano                       shift and go to state 74
    listArray                      shift and go to state 75
    accesoInterface                shift and go to state 76
    accesoMatriz                   shift and go to state 77
    funcEspecialObject             shift and go to state 78
    funcionEmbebida                shift and go to state 79

state 346

    (130) arrayMatricial -> CORIZQ expressionList CORDER .

    CORDER          reduce using rule 130 (arrayMatricial -> CORIZQ expressionList CORDER .)
    COMA            reduce using rule 130 (arrayMatricial -> CORIZQ expressionList CORDER .)


state 347

    (131) arrayMatricial -> CORIZQ listaArrays CORDER .

    CORDER          reduce using rule 131 (arrayMatricial -> CORIZQ listaArrays CORDER .)
    COMA            reduce using rule 131 (arrayMatricial -> CORIZQ listaArrays CORDER .)


state 348

    (132) listaArrays -> listaArrays COMA arrayMatricial .

    CORDER          reduce using rule 132 (listaArrays -> listaArrays COMA arrayMatricial .)
    COMA            reduce using rule 132 (listaArrays -> listaArrays COMA arrayMatricial .)


state 349

    (55) elseif -> ELSE IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    PARDER          shift and go to state 353
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 350

    (50) ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    SWITCH          reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    FOR             reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    CONST           reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    DEFAULT         reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)
    CASE            reduce using rule 50 (ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER .)


state 351

    (52) ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    LLAVEDER        shift and go to state 354
    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    instruccion                    shift and go to state 47
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 352

    (90) interfaceContent -> interfaceContent COMA ID DOSPTS expression .
    (95) expression -> expression . MAS expression
    (96) expression -> expression . MENOS expression
    (97) expression -> expression . POR expression
    (98) expression -> expression . DIVIDIDO expression
    (99) expression -> expression . MODULO expression
    (100) expression -> expression . IGIG expression
    (101) expression -> expression . DIF expression
    (102) expression -> expression . MAYQUE expression
    (103) expression -> expression . MENQUE expression
    (104) expression -> expression . MAYIGUAL expression
    (105) expression -> expression . MENIGUAL expression
    (106) expression -> expression . OR expression
    (107) expression -> expression . AND expression
    (142) funcionEmbebida -> expression . PUNTO TOSTRING PARIZQ PARDER

    LLAVEDER        reduce using rule 90 (interfaceContent -> interfaceContent COMA ID DOSPTS expression .)
    COMA            reduce using rule 90 (interfaceContent -> interfaceContent COMA ID DOSPTS expression .)
    MAS             shift and go to state 108
    MENOS           shift and go to state 109
    POR             shift and go to state 110
    DIVIDIDO        shift and go to state 111
    MODULO          shift and go to state 112
    IGIG            shift and go to state 113
    DIF             shift and go to state 114
    MAYQUE          shift and go to state 115
    MENQUE          shift and go to state 116
    MAYIGUAL        shift and go to state 117
    MENIGUAL        shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PUNTO           shift and go to state 121


state 353

    (55) elseif -> ELSE IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 355


state 354

    (52) ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    SWITCH          reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    FOR             reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    CONST           reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    DEFAULT         reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)
    CASE            reduce using rule 52 (ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER .)


state 355

    (55) elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    block                          shift and go to state 356
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 356

    (55) elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . ifElse
    (7) instruccion -> . ifElseIfs
    (8) instruccion -> . ifElseIfsElse
    (9) instruccion -> . switchCase
    (10) instruccion -> . switchCaseDefault
    (11) instruccion -> . whileInstruction
    (12) instruccion -> . forRange
    (13) instruccion -> . declaration
    (14) instruccion -> . declaracionValor
    (15) instruccion -> . declaracionTipo
    (16) instruccion -> . asignacion
    (17) instruccion -> . asignacionIndMatriz
    (18) instruccion -> . declaracionConstante
    (19) instruccion -> . declConstanteValor
    (20) instruccion -> . arrayDeclaration
    (21) instruccion -> . matrizVariable
    (22) instruccion -> . matrizConstante
    (23) instruccion -> . arrayPush
    (24) instruccion -> . breakstmt
    (25) instruccion -> . continuestmt
    (26) instruccion -> . returnstmt
    (27) instruccion -> . functionstmt
    (28) instruccion -> . interdeclaration
    (29) instruccion -> . interfacecreation
    (30) instruccion -> . interdeclarationConst
    (31) instruccion -> . incrementoIns
    (32) instruccion -> . call
    (33) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (49) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (50) ifElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER
    (51) ifElseIfs -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs
    (52) ifElseIfsElse -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER
    (56) switchCase -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER
    (57) switchCaseDefault -> . SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER
    (61) whileInstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (62) forRange -> . FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER
    (34) declaration -> . VAR ID DOSPTS type IG expression PYC
    (35) declaracionValor -> . VAR ID IG expression PYC
    (36) declaracionTipo -> . VAR ID DOSPTS type PYC
    (37) asignacion -> . ID IG expression PYC
    (38) asignacionIndMatriz -> . accesoMatriz IG expression PYC
    (39) declaracionConstante -> . CONST ID DOSPTS type IG expression PYC
    (40) declConstanteValor -> . CONST ID IG expression PYC
    (41) arrayDeclaration -> . VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC
    (43) matrizVariable -> . VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (44) matrizConstante -> . CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC
    (45) matrizConstante -> . CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC
    (42) arrayPush -> . ID PUNTO PUSH PARIZQ expression PARDER PYC
    (76) breakstmt -> . BREAK PYC
    (77) continuestmt -> . CONTINUE PYC
    (74) returnstmt -> . RETURN expression PYC
    (75) returnstmt -> . RETURN PYC
    (65) functionstmt -> . FUNC ID funcparams functype LLAVEIZQ block LLAVEDER
    (88) interdeclaration -> . VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (85) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (89) interdeclarationConst -> . CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (63) incrementoIns -> . ID MAS MAS PYC
    (72) call -> . ID PARIZQ expressionList PARDER PYC
    (73) call -> . ID PARIZQ PARDER PYC
    (146) accesoMatriz -> . ID accesosMatriz

    LLAVEDER        shift and go to state 357
    CONSOLE         shift and go to state 33
    IF              shift and go to state 34
    SWITCH          shift and go to state 35
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    VAR             shift and go to state 38
    ID              shift and go to state 39
    CONST           shift and go to state 41
    BREAK           shift and go to state 42
    CONTINUE        shift and go to state 43
    RETURN          shift and go to state 44
    FUNC            shift and go to state 45
    INTERFACE       shift and go to state 46

    instruccion                    shift and go to state 47
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    ifElse                         shift and go to state 6
    ifElseIfs                      shift and go to state 7
    ifElseIfsElse                  shift and go to state 8
    switchCase                     shift and go to state 9
    switchCaseDefault              shift and go to state 10
    whileInstruction               shift and go to state 11
    forRange                       shift and go to state 12
    declaration                    shift and go to state 13
    declaracionValor               shift and go to state 14
    declaracionTipo                shift and go to state 15
    asignacion                     shift and go to state 16
    asignacionIndMatriz            shift and go to state 17
    declaracionConstante           shift and go to state 18
    declConstanteValor             shift and go to state 19
    arrayDeclaration               shift and go to state 20
    matrizVariable                 shift and go to state 21
    matrizConstante                shift and go to state 22
    arrayPush                      shift and go to state 23
    breakstmt                      shift and go to state 24
    continuestmt                   shift and go to state 25
    returnstmt                     shift and go to state 26
    functionstmt                   shift and go to state 27
    interdeclaration               shift and go to state 28
    interfacecreation              shift and go to state 29
    interdeclarationConst          shift and go to state 30
    incrementoIns                  shift and go to state 31
    call                           shift and go to state 32
    accesoMatriz                   shift and go to state 40

state 357

    (55) elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .

    ELSE            reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONSOLE         reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    SWITCH          reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FOR             reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONST           reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNC            reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    DEFAULT         reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CASE            reduce using rule 55 (elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTO in state 70 resolved as shift
WARNING: shift/reduce conflict for IG in state 141 resolved as shift
WARNING: shift/reduce conflict for IG in state 157 resolved as shift
WARNING: shift/reduce conflict for IG in state 251 resolved as shift
WARNING: reduce/reduce conflict in state 209 resolved using rule (corchetes -> corchete)
WARNING: rejected rule (type -> type corchete) in state 209
WARNING: reduce/reduce conflict in state 226 resolved using rule (listArray -> ID CORIZQ expression CORDER)
WARNING: rejected rule (acceso -> CORIZQ expression CORDER) in state 226
