
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftIGIGDIFleftMENIGUALMAYIGUALMENQUEMAYQUEleftMASMENOSleftPORDIVIDIDOMODULOleftNOTleftUMENOSAND BOOL BREAK CADENA CASE CHAR COMA CONSOLE CONST CONTINUE CORDER CORIZQ DECIMAL DEFAULT DIF DIVIDIDO DOSPTS ELSE ENTERO FALSE FLOAT FOR FUNC ID IF IG IGIG INDEXOF INTERFACE JOIN KEYS LENGTH LLAVEDER LLAVEIZQ LOG MAS MAYIGUAL MAYQUE MENIGUAL MENOS MENQUE MODULO NOT NUMBER OBJECT OR PARDER PARIZQ PARSEFLOAT PARSEINT POP POR PUNTO PUSH PYC RETURN STRING SWITCH TERN TOLOWERCASE TOSTRING TOUPPERCASE TRUE TYPEOF VALUES VAR WHILEs : blockblock : block instruccion\n            | instruccion instruccion : print\n                | ifinstruction \n                | ifElse\n                | ifElseIfs\n                | ifElseIfsElse\n                | switchCase\n                | switchCaseDefault\n                | whileInstruction\n                | forRange\n                | declaration\n                | declaracionValor\n                | declaracionTipo\n                | asignacion\n                | asignacionIndMatriz\n                | declaracionConstante\n                | declConstanteValor\n                | arrayDeclaration\n                | matrizVariable\n                | matrizConstante\n                | arrayPush\n                | breakstmt\n                | continuestmt\n                | returnstmt\n                | functionstmt\n                | interdeclaration\n                | interfacecreation\n                | interdeclarationConst\n                | incrementoIns\n                | callprint : CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYCdeclaration : VAR ID DOSPTS type IG expression PYCdeclaracionValor : VAR ID IG expression PYCdeclaracionTipo : VAR ID DOSPTS type PYCasignacion : ID IG expression PYCasignacionIndMatriz : accesoMatriz IG expression PYCdeclaracionConstante : CONST ID DOSPTS type IG expression PYCdeclConstanteValor : CONST ID IG expression PYCarrayDeclaration : VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYCarrayPush : ID PUNTO PUSH PARIZQ expression PARDER PYCmatrizVariable : VAR ID DOSPTS type corchetes IG matrizPrimitiva PYCmatrizConstante : CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC\n                        | CONST ID DOSPTS type corchetes IG arrayPrimitivo PYCcorchetes : corchetes corchete\n            | corchete corchete : CORIZQ CORDERifinstruction : IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDERifElse : IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDERifElseIfs : IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifsifElseIfsElse : IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDERelseifs : elseifs elseif\n            | elseif elseif : ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDERswitchCase : SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDERswitchCaseDefault : SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDERcasos : casos caso\n            | caso caso : CASE expression DOSPTS blockwhileInstruction : WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDERforRange : FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDERincrementoIns : ID MAS MAS PYCincremento : ID MAS MASfunctionstmt : FUNC ID funcparams functype LLAVEIZQ block LLAVEDERfuncparams : PARIZQ paramsList PARDER\n                |  PARIZQ PARDERparamsList : paramsList COMA ID DOSPTS type\n                | ID DOSPTS typefunctype : DOSPTS type\n                | call : ID PARIZQ expressionList PARDER PYC\n            | ID PARIZQ PARDER PYCreturnstmt : RETURN expression PYC\n                | RETURN PYCbreakstmt : BREAK PYCcontinuestmt : CONTINUE PYCtype : NUMBER\n            | FLOAT\n            | STRING\n            | BOOL\n            | CHAR\n            | ID\n            | type corcheteinterfacecreation : INTERFACE ID LLAVEIZQ attributeList LLAVEDERattributeList : attributeList ID DOSPTS type PYC\n                | ID DOSPTS type PYCinterdeclaration : VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYCinterdeclarationConst : CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYCinterfaceContent : interfaceContent COMA ID DOSPTS expression\n                | ID DOSPTS expressionexpressionList : expressionList COMA expression\n                    | expression expression : MENOS expression %prec UMENOSexpression : expression MAS expressionexpression : expression MENOS expressionexpression : expression POR expressionexpression : expression DIVIDIDO expressionexpression : expression MODULO expressionexpression : expression IGIG expressionexpression : expression DIF expressionexpression : expression MAYQUE expressionexpression : expression MENQUE expressionexpression : expression MAYIGUAL expressionexpression : expression MENIGUAL expressionexpression : expression OR expressionexpression : expression AND expressionexpression : NOT expressionexpression : PARIZQ expression PARDERexpression : ID PARIZQ expressionList PARDER\n            | ID PARIZQ PARDERbooleano : TRUE \n                | FALSEexpression    : ENTERO\n                    | DECIMAL\n                    | CADENA\n                    | booleano\n                    | listArray\n                    | accesoInterface\n                    | accesoMatriz\n                    | funcEspecialObject\n                    | funcionEmbebidaexpression : ID PUNTO popjoin PARIZQ PARDERpopjoin : POP \n            | JOINexpression : ID PUNTO INDEXOF PARIZQ expression PARDERexpression : ID PUNTO LENGTHarrayPrimitivo : CORIZQ expressionList CORDERmatrizPrimitiva : CORIZQ listaArrays CORDERarrayMatricial : CORIZQ expressionList CORDER\n                    | CORIZQ listaArrays CORDERlistaArrays : listaArrays COMA arrayMatricial\n                    | arrayMatricial listArray : ID CORIZQ expression CORDER\n                | IDaccesoInterface : ID PUNTO IDfuncEspecialObject : OBJECT PUNTO VALUES PARIZQ expression PARDER\n                        | OBJECT PUNTO KEYS PARIZQ expression PARDERfuncionEmbebida : PARSEFLOAT PARIZQ expression PARDER\n                        | PARSEINT PARIZQ expression PARDER\n                        | ID PUNTO TOSTRING PARIZQ PARDER\n                        | expression PUNTO TOSTRING PARIZQ PARDER\n                        | ID PUNTO TOLOWERCASE PARIZQ PARDER\n                        | ID PUNTO TOUPPERCASE PARIZQ PARDER\n                        | TYPEOF IDaccesoMatriz : ID accesosMatrizaccesosMatriz : accesosMatriz acceso \n            | acceso acceso : CORIZQ expression CORDER'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,63,64,66,107,149,153,154,156,199,201,206,210,212,218,231,239,241,245,267,273,274,275,279,284,288,290,297,302,303,304,305,306,313,318,319,324,326,327,328,329,331,333,338,341,342,343,344,350,351,354,355,356,357,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-76,-77,-75,-74,-37,-73,-63,-38,33,33,-36,-35,-72,-40,33,-85,33,33,33,-33,-49,-56,-61,-34,-42,-39,-65,-51,-54,33,33,33,-43,-44,-45,33,-53,33,33,33,-88,-41,-89,33,33,-57,-62,-50,33,-52,33,33,-55,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,63,64,66,107,149,153,154,156,199,201,206,210,212,218,231,239,241,245,267,273,274,275,279,284,288,290,297,301,302,303,304,305,306,313,318,319,324,325,326,327,328,329,331,333,338,341,342,343,344,350,351,354,355,356,357,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-76,-77,-75,-74,-37,-73,-63,-38,34,34,-36,-35,-72,-40,34,-85,34,34,34,-33,-49,-56,-61,-34,-42,-39,-65,323,-51,-54,34,34,34,-43,-44,-45,34,323,-53,34,34,34,-88,-41,-89,34,34,-57,-62,-50,34,-52,34,34,-55,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,63,64,66,107,149,153,154,156,199,201,206,210,212,218,231,239,241,245,267,273,274,275,279,284,288,290,297,302,303,304,305,306,313,318,319,324,326,327,328,329,331,333,338,341,342,343,344,350,351,354,355,356,357,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-76,-77,-75,-74,-37,-73,-63,-38,35,35,-36,-35,-72,-40,35,-85,35,35,35,-33,-49,-56,-61,-34,-42,-39,-65,-51,-54,35,35,35,-43,-44,-45,35,-53,35,35,35,-88,-41,-89,35,35,-57,-62,-50,35,-52,35,35,-55,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,63,64,66,107,149,153,154,156,199,201,206,210,212,218,231,239,241,245,267,273,274,275,279,284,288,290,297,302,303,304,305,306,313,318,319,324,326,327,328,329,331,333,338,341,342,343,344,350,351,354,355,356,357,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-76,-77,-75,-74,-37,-73,-63,-38,36,36,-36,-35,-72,-40,36,-85,36,36,36,-33,-49,-56,-61,-34,-42,-39,-65,-51,-54,36,36,36,-43,-44,-45,36,-53,36,36,36,-88,-41,-89,36,36,-57,-62,-50,36,-52,36,36,-55,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,63,64,66,107,149,153,154,156,199,201,206,210,212,218,231,239,241,245,267,273,274,275,279,284,288,290,297,302,303,304,305,306,313,318,319,324,326,327,328,329,331,333,338,341,342,343,344,350,351,354,355,356,357,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-76,-77,-75,-74,-37,-73,-63,-38,37,37,-36,-35,-72,-40,37,-85,37,37,37,-33,-49,-56,-61,-34,-42,-39,-65,-51,-54,37,37,37,-43,-44,-45,37,-53,37,37,37,-88,-41,-89,37,37,-57,-62,-50,37,-52,37,37,-55,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,52,63,64,66,107,149,153,154,156,199,201,206,210,212,218,231,239,241,245,267,273,274,275,279,284,288,290,297,302,303,304,305,306,313,318,319,324,326,327,328,329,331,333,338,341,342,343,344,350,351,354,355,356,357,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,93,-76,-77,-75,-74,-37,-73,-63,-38,38,38,-36,-35,-72,-40,38,-85,38,38,38,-33,-49,-56,-61,-34,-42,-39,-65,-51,-54,38,38,38,-43,-44,-45,38,-53,38,38,38,-88,-41,-89,38,38,-57,-62,-50,38,-52,38,38,-55,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,41,44,45,46,47,49,50,51,54,56,60,61,63,64,66,67,68,69,85,92,93,94,95,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,127,129,130,133,134,135,149,150,152,153,154,156,192,197,199,201,202,203,205,206,210,212,215,218,222,227,228,231,235,236,237,239,241,244,245,249,255,267,272,273,274,275,279,284,288,290,293,297,298,299,302,303,304,305,306,308,310,311,313,314,318,319,322,324,326,327,328,329,331,333,338,340,341,342,343,344,345,350,351,354,355,356,357,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,53,62,70,86,87,-2,70,70,70,70,70,70,70,-76,-77,-75,70,70,70,131,70,140,141,70,157,70,-74,70,70,70,70,70,70,70,70,70,70,70,70,70,70,177,70,70,70,195,196,70,-37,70,70,-73,-63,-38,233,238,39,39,247,233,70,-36,-35,-72,70,-40,70,70,70,39,269,233,233,-85,39,70,39,282,282,39,233,-33,-49,-56,-61,-34,-42,-39,70,-65,233,-87,-51,-54,39,39,39,70,332,70,-43,70,-44,-45,-86,39,-53,39,39,39,-88,-41,-89,70,39,39,-57,-62,70,-50,39,-52,39,39,-55,]),'CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,63,64,66,107,149,153,154,156,199,201,206,210,212,218,231,239,241,245,267,273,274,275,279,284,288,290,297,302,303,304,305,306,313,318,319,324,326,327,328,329,331,333,338,341,342,343,344,350,351,354,355,356,357,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-76,-77,-75,-74,-37,-73,-63,-38,41,41,-36,-35,-72,-40,41,-85,41,41,41,-33,-49,-56,-61,-34,-42,-39,-65,-51,-54,41,41,41,-43,-44,-45,41,-53,41,41,41,-88,-41,-89,41,41,-57,-62,-50,41,-52,41,41,-55,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,63,64,66,107,149,153,154,156,199,201,206,210,212,218,231,239,241,245,267,273,274,275,279,284,288,290,297,302,303,304,305,306,313,318,319,324,326,327,328,329,331,333,338,341,342,343,344,350,351,354,355,356,357,],[42,42,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-76,-77,-75,-74,-37,-73,-63,-38,42,42,-36,-35,-72,-40,42,-85,42,42,42,-33,-49,-56,-61,-34,-42,-39,-65,-51,-54,42,42,42,-43,-44,-45,42,-53,42,42,42,-88,-41,-89,42,42,-57,-62,-50,42,-52,42,42,-55,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,63,64,66,107,149,153,154,156,199,201,206,210,212,218,231,239,241,245,267,273,274,275,279,284,288,290,297,302,303,304,305,306,313,318,319,324,326,327,328,329,331,333,338,341,342,343,344,350,351,354,355,356,357,],[43,43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-76,-77,-75,-74,-37,-73,-63,-38,43,43,-36,-35,-72,-40,43,-85,43,43,43,-33,-49,-56,-61,-34,-42,-39,-65,-51,-54,43,43,43,-43,-44,-45,43,-53,43,43,43,-88,-41,-89,43,43,-57,-62,-50,43,-52,43,43,-55,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,63,64,66,107,149,153,154,156,199,201,206,210,212,218,231,239,241,245,267,273,274,275,279,284,288,290,297,302,303,304,305,306,313,318,319,324,326,327,328,329,331,333,338,341,342,343,344,350,351,354,355,356,357,],[44,44,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-76,-77,-75,-74,-37,-73,-63,-38,44,44,-36,-35,-72,-40,44,-85,44,44,44,-33,-49,-56,-61,-34,-42,-39,-65,-51,-54,44,44,44,-43,-44,-45,44,-53,44,44,44,-88,-41,-89,44,44,-57,-62,-50,44,-52,44,44,-55,]),'FUNC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,63,64,66,107,149,153,154,156,199,201,206,210,212,218,231,239,241,245,267,273,274,275,279,284,288,290,297,302,303,304,305,306,313,318,319,324,326,327,328,329,331,333,338,341,342,343,344,350,351,354,355,356,357,],[45,45,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-76,-77,-75,-74,-37,-73,-63,-38,45,45,-36,-35,-72,-40,45,-85,45,45,45,-33,-49,-56,-61,-34,-42,-39,-65,-51,-54,45,45,45,-43,-44,-45,45,-53,45,45,45,-88,-41,-89,45,45,-57,-62,-50,45,-52,45,45,-55,]),'INTERFACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,63,64,66,107,149,153,154,156,199,201,206,210,212,218,231,239,241,245,267,273,274,275,279,284,288,290,297,302,303,304,305,306,313,318,319,324,326,327,328,329,331,333,338,341,342,343,344,350,351,354,355,356,357,],[46,46,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-76,-77,-75,-74,-37,-73,-63,-38,46,46,-36,-35,-72,-40,46,-85,46,46,46,-33,-49,-56,-61,-34,-42,-39,-65,-51,-54,46,46,46,-43,-44,-45,46,-53,46,46,46,-88,-41,-89,46,46,-57,-62,-50,46,-52,46,46,-55,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,63,64,66,107,149,153,154,156,206,210,212,218,239,273,274,275,279,284,288,290,297,302,303,313,318,319,326,331,333,338,343,344,350,354,357,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-76,-77,-75,-74,-37,-73,-63,-38,-36,-35,-72,-40,-85,-33,-49,-56,-61,-34,-42,-39,-65,-51,-54,-43,-44,-45,-53,-88,-41,-89,-57,-62,-50,-52,-55,]),'LLAVEDER':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,58,59,63,64,66,70,71,72,73,74,75,76,77,78,79,80,81,102,107,122,123,131,149,153,154,155,156,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,197,206,210,212,218,220,226,229,230,239,241,242,243,245,259,260,262,263,264,267,273,274,275,277,279,283,284,288,289,290,294,295,296,297,299,302,303,313,318,319,322,326,327,328,329,330,331,333,338,341,343,344,350,351,352,354,356,357,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-146,-148,-76,-77,-75,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,-147,-74,-94,-108,-145,-37,-73,-63,-149,-38,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-109,-111,-136,-127,239,-36,-35,-72,-40,-110,-134,-139,-140,-85,274,275,-59,279,-142,-123,-141,-143,-144,297,-33,-49,-56,-58,-61,309,-34,-42,317,-39,-126,-137,-138,-65,-87,-51,-54,-43,-44,-45,-86,-53,343,-60,344,-91,-88,-41,-89,350,-57,-62,-50,354,-90,-52,357,-55,]),'DEFAULT':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,63,64,66,107,149,153,154,156,206,210,212,218,239,242,243,273,274,275,277,279,284,288,290,297,302,303,313,318,319,326,328,331,333,338,343,344,350,354,357,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-76,-77,-75,-74,-37,-73,-63,-38,-36,-35,-72,-40,-85,276,-59,-33,-49,-56,-58,-61,-34,-42,-39,-65,-51,-54,-43,-44,-45,-53,-60,-88,-41,-89,-57,-62,-50,-52,-55,]),'CASE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,63,64,66,107,149,153,154,156,200,206,210,212,218,239,242,243,273,274,275,277,279,284,288,290,297,302,303,313,318,319,326,328,331,333,338,343,344,350,354,357,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-2,-76,-77,-75,-74,-37,-73,-63,-38,244,-36,-35,-72,-40,-85,244,-59,-33,-49,-56,-58,-61,-34,-42,-39,-65,-51,-54,-43,-44,-45,-53,-60,-88,-41,-89,-57,-62,-50,-52,-55,]),'PUNTO':([33,39,58,59,65,70,71,72,73,74,75,76,77,78,79,80,81,82,89,90,91,96,100,102,103,104,122,123,124,131,139,148,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,189,190,211,213,220,226,229,230,250,256,259,260,261,262,263,264,265,266,278,294,295,296,330,349,352,],[48,55,-146,-148,121,126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,128,121,121,121,121,121,-147,121,121,-94,-108,121,-145,121,121,-149,121,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-109,-111,-136,-127,121,121,121,121,121,-110,-134,-139,-140,121,121,-142,-123,121,-141,-143,-144,121,121,121,-126,-137,-138,121,121,121,]),'PARIZQ':([34,35,36,37,39,44,49,50,51,54,56,60,61,67,68,69,70,83,84,86,88,92,95,97,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,173,178,179,181,182,183,184,185,187,188,205,215,222,227,228,244,284,293,308,311,314,323,340,345,],[49,50,51,52,56,69,69,69,69,69,69,69,69,69,69,69,125,129,130,133,135,69,69,150,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,219,221,222,223,224,225,-124,-125,227,228,69,69,69,69,69,69,-34,69,69,69,69,340,69,69,]),'IG':([39,40,53,58,59,62,102,141,142,143,144,145,146,147,155,157,158,208,209,216,233,248,251,253,258,268,],[54,61,95,-146,-148,106,-147,204,205,-78,-79,-80,-81,-82,-149,214,215,252,-47,257,-83,205,285,-46,-48,-84,]),'MAS':([39,57,58,59,65,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,96,100,102,103,104,122,123,124,131,139,148,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,189,190,211,213,220,226,229,230,247,250,256,259,260,261,262,263,264,265,266,278,281,294,295,296,330,349,352,],[57,101,-146,-148,108,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,108,108,108,108,108,-147,108,108,-94,-108,108,-145,108,108,-149,108,-95,-96,-97,-98,-99,108,108,108,108,108,108,108,108,-109,-111,-136,-127,108,108,108,108,108,-110,-134,-139,-140,281,108,108,-142,-123,108,-141,-143,-144,108,108,108,307,-126,-137,-138,108,108,108,]),'CORIZQ':([39,58,59,70,102,141,142,143,144,145,146,147,155,157,158,208,209,216,226,232,233,248,251,252,253,257,258,268,270,271,285,287,293,300,314,321,337,],[60,60,-148,127,-147,-83,207,-78,-79,-80,-81,-82,-149,-83,217,217,-47,217,-149,217,-83,217,-48,287,-46,293,-48,-84,217,217,311,314,314,217,314,217,314,]),'PYC':([42,43,44,58,59,65,70,71,72,73,74,75,76,77,78,79,80,81,96,99,101,102,104,122,123,131,139,141,142,143,144,145,146,147,148,151,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,209,220,226,229,230,233,240,250,251,254,256,258,259,260,262,263,264,268,271,286,291,292,294,295,296,300,309,312,317,336,339,],[63,64,66,-146,-148,107,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,149,153,154,-147,156,-94,-108,-145,202,-83,206,-78,-79,-80,-81,-82,210,212,-149,218,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-109,-111,-136,-127,-84,-110,-134,-139,-140,-83,273,284,-48,288,290,-48,-142,-123,-141,-143,-144,-84,299,313,318,319,-126,-137,-138,322,331,333,338,-129,-128,]),'MENOS':([44,49,50,51,54,56,58,59,60,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,92,95,96,100,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,127,129,130,131,135,139,148,150,152,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,189,190,205,211,213,215,220,222,226,227,228,229,230,244,250,256,259,260,261,262,263,264,265,266,278,284,293,294,295,296,308,311,314,330,340,345,349,352,],[67,67,67,67,67,67,-146,-148,67,67,109,67,67,67,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,109,109,109,67,67,109,109,-147,109,109,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-94,-108,109,67,67,67,67,-145,67,109,109,67,67,-149,109,-95,-96,-97,-98,-99,109,109,109,109,109,109,109,109,-109,-111,-136,-127,109,109,109,67,109,109,67,-110,67,-134,67,67,-139,-140,67,109,109,-142,-123,109,-141,-143,-144,109,109,109,-34,67,-126,-137,-138,67,67,67,109,67,67,109,109,]),'NOT':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,284,293,308,311,314,340,345,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-34,68,68,68,68,68,68,]),'ENTERO':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,284,293,308,311,314,340,345,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-34,71,71,71,71,71,71,]),'DECIMAL':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,284,293,308,311,314,340,345,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-34,72,72,72,72,72,72,]),'CADENA':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,284,293,308,311,314,340,345,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-34,73,73,73,73,73,73,]),'TRUE':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,284,293,308,311,314,340,345,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-34,80,80,80,80,80,80,]),'FALSE':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,284,293,308,311,314,340,345,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-34,81,81,81,81,81,81,]),'OBJECT':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,284,293,308,311,314,340,345,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-34,82,82,82,82,82,82,]),'PARSEFLOAT':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,284,293,308,311,314,340,345,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-34,83,83,83,83,83,83,]),'PARSEINT':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,284,293,308,311,314,340,345,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-34,84,84,84,84,84,84,]),'TYPEOF':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,284,293,308,311,314,340,345,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-34,85,85,85,85,85,85,]),'LOG':([48,],[88,]),'DOSPTS':([53,58,59,62,70,71,72,73,74,75,76,77,78,79,80,81,102,122,123,131,132,140,155,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,194,195,196,220,226,229,230,234,238,259,260,262,263,264,269,276,278,282,294,295,296,332,],[94,-146,-148,105,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,-147,-94,-108,-145,192,203,-149,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-109,-111,-136,-127,-67,236,237,-110,-134,-139,-140,-66,272,-142,-123,-141,-143,-144,298,304,305,308,-126,-137,-138,345,]),'PUSH':([55,],[97,]),'PARDER':([56,58,59,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,98,100,102,122,123,124,125,131,133,143,144,145,146,147,155,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,180,189,190,193,198,211,213,219,220,221,223,224,225,226,229,230,233,246,258,259,260,261,262,263,264,265,266,268,270,294,295,296,307,321,349,],[99,-146,-148,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,136,137,138,151,-93,-147,-94,-108,174,176,-145,194,-78,-79,-80,-81,-82,-149,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-109,220,-111,-136,-127,229,230,234,240,254,-92,259,-110,260,262,263,264,-134,-139,-140,-83,280,-48,-142,-123,294,-141,-143,-144,295,296,-84,-69,-126,-137,-138,-64,-68,353,]),'POR':([58,59,65,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,96,100,102,103,104,122,123,124,131,139,148,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,189,190,211,213,220,226,229,230,250,256,259,260,261,262,263,264,265,266,278,294,295,296,330,349,352,],[-146,-148,110,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,110,110,110,110,110,-147,110,110,-94,-108,110,-145,110,110,-149,110,110,110,-97,-98,-99,110,110,110,110,110,110,110,110,-109,-111,-136,-127,110,110,110,110,110,-110,-134,-139,-140,110,110,-142,-123,110,-141,-143,-144,110,110,110,-126,-137,-138,110,110,110,]),'DIVIDIDO':([58,59,65,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,96,100,102,103,104,122,123,124,131,139,148,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,189,190,211,213,220,226,229,230,250,256,259,260,261,262,263,264,265,266,278,294,295,296,330,349,352,],[-146,-148,111,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,111,111,111,111,111,-147,111,111,-94,-108,111,-145,111,111,-149,111,111,111,-97,-98,-99,111,111,111,111,111,111,111,111,-109,-111,-136,-127,111,111,111,111,111,-110,-134,-139,-140,111,111,-142,-123,111,-141,-143,-144,111,111,111,-126,-137,-138,111,111,111,]),'MODULO':([58,59,65,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,96,100,102,103,104,122,123,124,131,139,148,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,189,190,211,213,220,226,229,230,250,256,259,260,261,262,263,264,265,266,278,294,295,296,330,349,352,],[-146,-148,112,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,112,112,112,112,112,-147,112,112,-94,-108,112,-145,112,112,-149,112,112,112,-97,-98,-99,112,112,112,112,112,112,112,112,-109,-111,-136,-127,112,112,112,112,112,-110,-134,-139,-140,112,112,-142,-123,112,-141,-143,-144,112,112,112,-126,-137,-138,112,112,112,]),'IGIG':([58,59,65,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,96,100,102,103,104,122,123,124,131,139,148,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,189,190,211,213,220,226,229,230,250,256,259,260,261,262,263,264,265,266,278,294,295,296,330,349,352,],[-146,-148,113,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,113,113,113,113,113,-147,113,113,-94,-108,113,-145,113,113,-149,113,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,113,113,-109,-111,-136,-127,113,113,113,113,113,-110,-134,-139,-140,113,113,-142,-123,113,-141,-143,-144,113,113,113,-126,-137,-138,113,113,113,]),'DIF':([58,59,65,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,96,100,102,103,104,122,123,124,131,139,148,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,189,190,211,213,220,226,229,230,250,256,259,260,261,262,263,264,265,266,278,294,295,296,330,349,352,],[-146,-148,114,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,114,114,114,114,114,-147,114,114,-94,-108,114,-145,114,114,-149,114,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,114,114,-109,-111,-136,-127,114,114,114,114,114,-110,-134,-139,-140,114,114,-142,-123,114,-141,-143,-144,114,114,114,-126,-137,-138,114,114,114,]),'MAYQUE':([58,59,65,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,96,100,102,103,104,122,123,124,131,139,148,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,189,190,211,213,220,226,229,230,250,256,259,260,261,262,263,264,265,266,278,294,295,296,330,349,352,],[-146,-148,115,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,115,115,115,115,115,-147,115,115,-94,-108,115,-145,115,115,-149,115,-95,-96,-97,-98,-99,115,115,-102,-103,-104,-105,115,115,-109,-111,-136,-127,115,115,115,115,115,-110,-134,-139,-140,115,115,-142,-123,115,-141,-143,-144,115,115,115,-126,-137,-138,115,115,115,]),'MENQUE':([58,59,65,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,96,100,102,103,104,122,123,124,131,139,148,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,189,190,211,213,220,226,229,230,250,256,259,260,261,262,263,264,265,266,278,294,295,296,330,349,352,],[-146,-148,116,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,116,116,116,116,116,-147,116,116,-94,-108,116,-145,116,116,-149,116,-95,-96,-97,-98,-99,116,116,-102,-103,-104,-105,116,116,-109,-111,-136,-127,116,116,116,116,116,-110,-134,-139,-140,116,116,-142,-123,116,-141,-143,-144,116,116,116,-126,-137,-138,116,116,116,]),'MAYIGUAL':([58,59,65,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,96,100,102,103,104,122,123,124,131,139,148,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,189,190,211,213,220,226,229,230,250,256,259,260,261,262,263,264,265,266,278,294,295,296,330,349,352,],[-146,-148,117,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,117,117,117,117,117,-147,117,117,-94,-108,117,-145,117,117,-149,117,-95,-96,-97,-98,-99,117,117,-102,-103,-104,-105,117,117,-109,-111,-136,-127,117,117,117,117,117,-110,-134,-139,-140,117,117,-142,-123,117,-141,-143,-144,117,117,117,-126,-137,-138,117,117,117,]),'MENIGUAL':([58,59,65,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,96,100,102,103,104,122,123,124,131,139,148,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,189,190,211,213,220,226,229,230,250,256,259,260,261,262,263,264,265,266,278,294,295,296,330,349,352,],[-146,-148,118,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,118,118,118,118,118,-147,118,118,-94,-108,118,-145,118,118,-149,118,-95,-96,-97,-98,-99,118,118,-102,-103,-104,-105,118,118,-109,-111,-136,-127,118,118,118,118,118,-110,-134,-139,-140,118,118,-142,-123,118,-141,-143,-144,118,118,118,-126,-137,-138,118,118,118,]),'OR':([58,59,65,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,96,100,102,103,104,122,123,124,131,139,148,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,189,190,211,213,220,226,229,230,250,256,259,260,261,262,263,264,265,266,278,294,295,296,330,349,352,],[-146,-148,119,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,119,119,119,119,119,-147,119,119,-94,-108,119,-145,119,119,-149,119,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-109,-111,-136,-127,119,119,119,119,119,-110,-134,-139,-140,119,119,-142,-123,119,-141,-143,-144,119,119,119,-126,-137,-138,119,119,119,]),'AND':([58,59,65,70,71,72,73,74,75,76,77,78,79,80,81,89,90,91,96,100,102,103,104,122,123,124,131,139,148,155,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,189,190,211,213,220,226,229,230,250,256,259,260,261,262,263,264,265,266,278,294,295,296,330,349,352,],[-146,-148,120,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,120,120,120,120,120,-147,120,120,-94,-108,120,-145,120,120,-149,120,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,120,-107,-109,-111,-136,-127,120,120,120,120,120,-110,-134,-139,-140,120,120,-142,-123,120,-141,-143,-144,120,120,120,-126,-137,-138,120,120,120,]),'COMA':([58,59,70,71,72,73,74,75,76,77,78,79,80,81,98,100,102,122,123,131,143,144,145,146,147,155,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,180,193,198,213,220,226,229,230,233,258,259,260,262,263,264,268,270,283,289,294,295,296,315,316,320,321,330,334,335,346,347,348,352,],[-146,-148,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,152,-93,-147,-94,-108,-145,-78,-79,-80,-81,-82,-149,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-109,152,-111,-136,-127,235,152,-92,-110,-134,-139,-140,-83,-48,-142,-123,-141,-143,-144,-84,-69,310,310,-126,-137,-138,337,-133,152,-68,-91,152,337,-130,-131,-132,-90,]),'CORDER':([58,59,70,71,72,73,74,75,76,77,78,79,80,81,100,102,103,122,123,131,155,160,161,162,163,164,165,166,167,168,169,170,171,172,174,176,177,180,186,207,213,217,220,226,229,230,259,260,262,263,264,294,295,296,315,316,320,334,335,346,347,348,],[-146,-148,-135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-112,-113,-93,-147,155,-94,-108,-145,-149,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-109,-111,-136,-127,226,251,-92,258,-110,-134,-139,-140,-142,-123,-141,-143,-144,-126,-137,-138,336,-133,339,346,347,-130,-131,-132,]),'LLAVEIZQ':([87,132,136,137,138,143,144,145,146,147,191,194,204,214,232,233,234,258,268,280,301,325,353,],[134,-71,199,200,201,-78,-79,-80,-81,-82,231,-67,249,255,-70,-83,-66,-48,-84,306,324,342,355,]),'NUMBER':([94,105,192,203,236,237,272,298,],[143,143,143,143,143,143,143,143,]),'FLOAT':([94,105,192,203,236,237,272,298,],[144,144,144,144,144,144,144,144,]),'STRING':([94,105,192,203,236,237,272,298,],[145,145,145,145,145,145,145,145,]),'BOOL':([94,105,192,203,236,237,272,298,],[146,146,146,146,146,146,146,146,]),'CHAR':([94,105,192,203,236,237,272,298,],[147,147,147,147,147,147,147,147,]),'TOSTRING':([121,126,],[173,181,]),'INDEXOF':([126,],[179,]),'LENGTH':([126,],[180,]),'TOLOWERCASE':([126,],[182,]),'TOUPPERCASE':([126,],[183,]),'POP':([126,],[184,]),'JOIN':([126,],[185,]),'VALUES':([128,],[187,]),'KEYS':([128,],[188,]),'ELSE':([274,302,303,326,357,],[301,325,-54,-53,-55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'s':([0,],[1,]),'block':([0,199,201,231,304,305,306,324,342,355,],[2,241,245,267,327,328,329,341,351,356,]),'instruccion':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[3,47,3,3,3,47,47,47,3,3,3,3,47,47,47,47,3,47,3,47,]),'print':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'ifinstruction':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'ifElse':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'ifElseIfs':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'ifElseIfsElse':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'switchCase':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'switchCaseDefault':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'whileInstruction':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'forRange':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'declaration':([0,2,52,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[13,13,92,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'declaracionValor':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'declaracionTipo':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'asignacion':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'asignacionIndMatriz':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'declaracionConstante':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'declConstanteValor':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'arrayDeclaration':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'matrizVariable':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'matrizConstante':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'arrayPush':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'breakstmt':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'continuestmt':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'returnstmt':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'functionstmt':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'interdeclaration':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'interfacecreation':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'interdeclarationConst':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'incrementoIns':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'call':([0,2,199,201,231,241,245,267,304,305,306,324,327,328,329,341,342,351,355,356,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'accesoMatriz':([0,2,44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,199,201,205,215,222,227,228,231,241,244,245,267,293,304,305,306,308,311,314,324,327,328,329,340,341,342,345,351,355,356,],[40,40,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,40,40,77,77,77,77,77,40,40,77,40,40,77,40,40,40,77,77,77,40,40,40,40,77,40,40,77,40,40,40,]),'accesosMatriz':([39,70,],[58,58,]),'acceso':([39,58,70,],[59,102,59,]),'expression':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,293,308,311,314,340,345,],[65,89,90,91,96,100,103,104,122,123,124,139,148,159,160,161,162,163,164,165,166,167,168,169,170,171,172,100,186,189,190,100,211,213,250,256,261,265,266,278,100,330,100,100,349,352,]),'booleano':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,293,308,311,314,340,345,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'listArray':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,293,308,311,314,340,345,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'accesoInterface':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,293,308,311,314,340,345,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'funcEspecialObject':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,293,308,311,314,340,345,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'funcionEmbebida':([44,49,50,51,54,56,60,61,67,68,69,92,95,106,108,109,110,111,112,113,114,115,116,117,118,119,120,125,127,129,130,135,150,152,205,215,222,227,228,244,293,308,311,314,340,345,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'expressionList':([56,125,135,293,311,314,],[98,175,198,320,320,334,]),'funcparams':([86,],[132,]),'type':([94,105,192,203,236,237,272,298,],[142,158,232,248,270,271,300,321,]),'popjoin':([126,],[178,]),'functype':([132,],[191,]),'paramsList':([133,],[193,]),'attributeList':([134,],[197,]),'corchetes':([142,158,],[208,216,]),'corchete':([142,158,208,216,232,248,270,271,300,321,],[209,209,253,253,268,268,268,268,268,268,]),'casos':([200,],[242,]),'caso':([200,242,],[243,277,]),'incremento':([202,],[246,]),'interfaceContent':([249,255,],[283,289,]),'matrizPrimitiva':([252,257,],[286,291,]),'arrayPrimitivo':([257,285,],[292,312,]),'elseifs':([274,],[302,]),'elseif':([274,302,],[303,326,]),'listaArrays':([287,293,314,],[315,315,335,]),'arrayMatricial':([287,293,314,337,],[316,316,316,348,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> s","S'",1,None,None,None),
  ('s -> block','s',1,'p_start','parser.py',241),
  ('block -> block instruccion','block',2,'p_instruction_block','parser.py',245),
  ('block -> instruccion','block',1,'p_instruction_block','parser.py',246),
  ('instruccion -> print','instruccion',1,'p_instruction_list','parser.py',255),
  ('instruccion -> ifinstruction','instruccion',1,'p_instruction_list','parser.py',256),
  ('instruccion -> ifElse','instruccion',1,'p_instruction_list','parser.py',257),
  ('instruccion -> ifElseIfs','instruccion',1,'p_instruction_list','parser.py',258),
  ('instruccion -> ifElseIfsElse','instruccion',1,'p_instruction_list','parser.py',259),
  ('instruccion -> switchCase','instruccion',1,'p_instruction_list','parser.py',260),
  ('instruccion -> switchCaseDefault','instruccion',1,'p_instruction_list','parser.py',261),
  ('instruccion -> whileInstruction','instruccion',1,'p_instruction_list','parser.py',262),
  ('instruccion -> forRange','instruccion',1,'p_instruction_list','parser.py',263),
  ('instruccion -> declaration','instruccion',1,'p_instruction_list','parser.py',264),
  ('instruccion -> declaracionValor','instruccion',1,'p_instruction_list','parser.py',265),
  ('instruccion -> declaracionTipo','instruccion',1,'p_instruction_list','parser.py',266),
  ('instruccion -> asignacion','instruccion',1,'p_instruction_list','parser.py',267),
  ('instruccion -> asignacionIndMatriz','instruccion',1,'p_instruction_list','parser.py',268),
  ('instruccion -> declaracionConstante','instruccion',1,'p_instruction_list','parser.py',269),
  ('instruccion -> declConstanteValor','instruccion',1,'p_instruction_list','parser.py',270),
  ('instruccion -> arrayDeclaration','instruccion',1,'p_instruction_list','parser.py',271),
  ('instruccion -> matrizVariable','instruccion',1,'p_instruction_list','parser.py',272),
  ('instruccion -> matrizConstante','instruccion',1,'p_instruction_list','parser.py',273),
  ('instruccion -> arrayPush','instruccion',1,'p_instruction_list','parser.py',274),
  ('instruccion -> breakstmt','instruccion',1,'p_instruction_list','parser.py',275),
  ('instruccion -> continuestmt','instruccion',1,'p_instruction_list','parser.py',276),
  ('instruccion -> returnstmt','instruccion',1,'p_instruction_list','parser.py',277),
  ('instruccion -> functionstmt','instruccion',1,'p_instruction_list','parser.py',278),
  ('instruccion -> interdeclaration','instruccion',1,'p_instruction_list','parser.py',279),
  ('instruccion -> interfacecreation','instruccion',1,'p_instruction_list','parser.py',280),
  ('instruccion -> interdeclarationConst','instruccion',1,'p_instruction_list','parser.py',281),
  ('instruccion -> incrementoIns','instruccion',1,'p_instruction_list','parser.py',282),
  ('instruccion -> call','instruccion',1,'p_instruction_list','parser.py',283),
  ('print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC','print',7,'p_instruccion_console','parser.py',288),
  ('declaration -> VAR ID DOSPTS type IG expression PYC','declaration',7,'p_instruccion_declaration','parser.py',294),
  ('declaracionValor -> VAR ID IG expression PYC','declaracionValor',5,'p_instruccion_declarationValor','parser.py',300),
  ('declaracionTipo -> VAR ID DOSPTS type PYC','declaracionTipo',5,'p_instruccion_declarationTipo','parser.py',306),
  ('asignacion -> ID IG expression PYC','asignacion',4,'p_instruccion_assignment','parser.py',313),
  ('asignacionIndMatriz -> accesoMatriz IG expression PYC','asignacionIndMatriz',4,'p_instruccion_asignacionIndMatriz','parser.py',318),
  ('declaracionConstante -> CONST ID DOSPTS type IG expression PYC','declaracionConstante',7,'p_instruccion_declarationConstante','parser.py',325),
  ('declConstanteValor -> CONST ID IG expression PYC','declConstanteValor',5,'p_instruccion_declarationConstanteValor','parser.py',331),
  ('arrayDeclaration -> VAR ID DOSPTS type CORIZQ CORDER IG arrayPrimitivo PYC','arrayDeclaration',9,'p_instruccion_array_declaration','parser.py',339),
  ('arrayPush -> ID PUNTO PUSH PARIZQ expression PARDER PYC','arrayPush',7,'p_instruccion_arrayPush','parser.py',346),
  ('matrizVariable -> VAR ID DOSPTS type corchetes IG matrizPrimitiva PYC','matrizVariable',8,'p_instruccion_matriz_variable','parser.py',353),
  ('matrizConstante -> CONST ID DOSPTS type corchetes IG matrizPrimitiva PYC','matrizConstante',8,'p_instruccion_matriz_constante','parser.py',360),
  ('matrizConstante -> CONST ID DOSPTS type corchetes IG arrayPrimitivo PYC','matrizConstante',8,'p_instruccion_matriz_constante','parser.py',361),
  ('corchetes -> corchetes corchete','corchetes',2,'p_corchetes','parser.py',368),
  ('corchetes -> corchete','corchetes',1,'p_corchetes','parser.py',369),
  ('corchete -> CORIZQ CORDER','corchete',2,'p_corchete','parser.py',377),
  ('ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER','ifinstruction',7,'p_instruction_if','parser.py',385),
  ('ifElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER ELSE LLAVEIZQ block LLAVEDER','ifElse',11,'p_instruction_ifElse','parser.py',392),
  ('ifElseIfs -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs','ifElseIfs',8,'p_instruction_ifElseIfs','parser.py',399),
  ('ifElseIfsElse -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER elseifs ELSE LLAVEIZQ block LLAVEDER','ifElseIfsElse',12,'p_instruction_ifElseIfsElse','parser.py',406),
  ('elseifs -> elseifs elseif','elseifs',2,'p_instruction_elseifs','parser.py',413),
  ('elseifs -> elseif','elseifs',1,'p_instruction_elseifs','parser.py',414),
  ('elseif -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER','elseif',8,'p_instruction_elseif','parser.py',422),
  ('switchCase -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos LLAVEDER','switchCase',7,'p_instruction_switchCase','parser.py',430),
  ('switchCaseDefault -> SWITCH PARIZQ expression PARDER LLAVEIZQ casos DEFAULT DOSPTS block LLAVEDER','switchCaseDefault',10,'p_instruction_switchCaseDefault','parser.py',437),
  ('casos -> casos caso','casos',2,'p_instruction_casos','parser.py',444),
  ('casos -> caso','casos',1,'p_instruction_casos','parser.py',445),
  ('caso -> CASE expression DOSPTS block','caso',4,'p_instruction_caso','parser.py',453),
  ('whileInstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER','whileInstruction',7,'p_instruction_whileInstruction','parser.py',460),
  ('forRange -> FOR PARIZQ declaration expression PYC incremento PARDER LLAVEIZQ block LLAVEDER','forRange',10,'p_instruction_forRange','parser.py',467),
  ('incrementoIns -> ID MAS MAS PYC','incrementoIns',4,'p_instruction_incrementoIns','parser.py',473),
  ('incremento -> ID MAS MAS','incremento',3,'p_instruction_incremento','parser.py',479),
  ('functionstmt -> FUNC ID funcparams functype LLAVEIZQ block LLAVEDER','functionstmt',7,'p_instruction_function','parser.py',485),
  ('funcparams -> PARIZQ paramsList PARDER','funcparams',3,'p_instruction_function_params_list','parser.py',490),
  ('funcparams -> PARIZQ PARDER','funcparams',2,'p_instruction_function_params_list','parser.py',491),
  ('paramsList -> paramsList COMA ID DOSPTS type','paramsList',5,'p_expression_param_list','parser.py',498),
  ('paramsList -> ID DOSPTS type','paramsList',3,'p_expression_param_list','parser.py',499),
  ('functype -> DOSPTS type','functype',2,'p_instruction_function_type','parser.py',510),
  ('functype -> <empty>','functype',0,'p_instruction_function_type','parser.py',511),
  ('call -> ID PARIZQ expressionList PARDER PYC','call',5,'p_instruction_call_function','parser.py',519),
  ('call -> ID PARIZQ PARDER PYC','call',4,'p_instruction_call_function','parser.py',520),
  ('returnstmt -> RETURN expression PYC','returnstmt',3,'p_instruction_return','parser.py',529),
  ('returnstmt -> RETURN PYC','returnstmt',2,'p_instruction_return','parser.py',530),
  ('breakstmt -> BREAK PYC','breakstmt',2,'p_instruction_break','parser.py',539),
  ('continuestmt -> CONTINUE PYC','continuestmt',2,'p_instruction_continue','parser.py',545),
  ('type -> NUMBER','type',1,'p_type_prod','parser.py',551),
  ('type -> FLOAT','type',1,'p_type_prod','parser.py',552),
  ('type -> STRING','type',1,'p_type_prod','parser.py',553),
  ('type -> BOOL','type',1,'p_type_prod','parser.py',554),
  ('type -> CHAR','type',1,'p_type_prod','parser.py',555),
  ('type -> ID','type',1,'p_type_prod','parser.py',556),
  ('type -> type corchete','type',2,'p_type_prod','parser.py',557),
  ('interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER','interfacecreation',5,'p_instruction_interface_creation','parser.py',576),
  ('attributeList -> attributeList ID DOSPTS type PYC','attributeList',5,'p_instruction_interface_attribute','parser.py',581),
  ('attributeList -> ID DOSPTS type PYC','attributeList',4,'p_instruction_interface_attribute','parser.py',582),
  ('interdeclaration -> VAR ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC','interdeclaration',9,'p_instruction_interface_declaration','parser.py',593),
  ('interdeclarationConst -> CONST ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC','interdeclarationConst',9,'p_instruction_interface_declarationConst','parser.py',598),
  ('interfaceContent -> interfaceContent COMA ID DOSPTS expression','interfaceContent',5,'p_instruction_interface_content','parser.py',603),
  ('interfaceContent -> ID DOSPTS expression','interfaceContent',3,'p_instruction_interface_content','parser.py',604),
  ('expressionList -> expressionList COMA expression','expressionList',3,'p_expression_list','parser.py',616),
  ('expressionList -> expression','expressionList',1,'p_expression_list','parser.py',617),
  ('expression -> MENOS expression','expression',2,'p_expression_negacionUnaria','parser.py',628),
  ('expression -> expression MAS expression','expression',3,'p_expression_add','parser.py',635),
  ('expression -> expression MENOS expression','expression',3,'p_expression_sub','parser.py',641),
  ('expression -> expression POR expression','expression',3,'p_expression_mult','parser.py',647),
  ('expression -> expression DIVIDIDO expression','expression',3,'p_expression_div','parser.py',653),
  ('expression -> expression MODULO expression','expression',3,'p_expression_mod','parser.py',659),
  ('expression -> expression IGIG expression','expression',3,'p_expression_esIgual','parser.py',665),
  ('expression -> expression DIF expression','expression',3,'p_expression_noIgual','parser.py',671),
  ('expression -> expression MAYQUE expression','expression',3,'p_expression_mayorQue','parser.py',677),
  ('expression -> expression MENQUE expression','expression',3,'p_expression_menorQue','parser.py',683),
  ('expression -> expression MAYIGUAL expression','expression',3,'p_expression_mayorIgual','parser.py',689),
  ('expression -> expression MENIGUAL expression','expression',3,'p_expression_menorIgual','parser.py',695),
  ('expression -> expression OR expression','expression',3,'p_expression_or','parser.py',701),
  ('expression -> expression AND expression','expression',3,'p_expression_and','parser.py',707),
  ('expression -> NOT expression','expression',2,'p_expression_not','parser.py',713),
  ('expression -> PARIZQ expression PARDER','expression',3,'p_expression_agrupacion','parser.py',719),
  ('expression -> ID PARIZQ expressionList PARDER','expression',4,'p_expression_call_function','parser.py',724),
  ('expression -> ID PARIZQ PARDER','expression',3,'p_expression_call_function','parser.py',725),
  ('booleano -> TRUE','booleano',1,'p_booleano','parser.py',733),
  ('booleano -> FALSE','booleano',1,'p_booleano','parser.py',734),
  ('expression -> ENTERO','expression',1,'p_expression_primitiva','parser.py',742),
  ('expression -> DECIMAL','expression',1,'p_expression_primitiva','parser.py',743),
  ('expression -> CADENA','expression',1,'p_expression_primitiva','parser.py',744),
  ('expression -> booleano','expression',1,'p_expression_primitiva','parser.py',745),
  ('expression -> listArray','expression',1,'p_expression_primitiva','parser.py',746),
  ('expression -> accesoInterface','expression',1,'p_expression_primitiva','parser.py',747),
  ('expression -> accesoMatriz','expression',1,'p_expression_primitiva','parser.py',748),
  ('expression -> funcEspecialObject','expression',1,'p_expression_primitiva','parser.py',749),
  ('expression -> funcionEmbebida','expression',1,'p_expression_primitiva','parser.py',750),
  ('expression -> ID PUNTO popjoin PARIZQ PARDER','expression',5,'p_expresion_arrayPopJoin','parser.py',755),
  ('popjoin -> POP','popjoin',1,'p_popjoin','parser.py',762),
  ('popjoin -> JOIN','popjoin',1,'p_popjoin','parser.py',763),
  ('expression -> ID PUNTO INDEXOF PARIZQ expression PARDER','expression',6,'p_expresion_arrayIndexOf','parser.py',770),
  ('expression -> ID PUNTO LENGTH','expression',3,'p_expresion_arrayLength','parser.py',776),
  ('arrayPrimitivo -> CORIZQ expressionList CORDER','arrayPrimitivo',3,'p_expression_array_primitiva','parser.py',783),
  ('matrizPrimitiva -> CORIZQ listaArrays CORDER','matrizPrimitiva',3,'p_expression_matriz_primitiva','parser.py',789),
  ('arrayMatricial -> CORIZQ expressionList CORDER','arrayMatricial',3,'p_expression_array_matricial','parser.py',795),
  ('arrayMatricial -> CORIZQ listaArrays CORDER','arrayMatricial',3,'p_expression_array_matricial','parser.py',796),
  ('listaArrays -> listaArrays COMA arrayMatricial','listaArrays',3,'p_expression_listaArrays','parser.py',801),
  ('listaArrays -> arrayMatricial','listaArrays',1,'p_expression_listaArrays','parser.py',802),
  ('listArray -> ID CORIZQ expression CORDER','listArray',4,'p_expression_list_array','parser.py',812),
  ('listArray -> ID','listArray',1,'p_expression_list_array','parser.py',813),
  ('accesoInterface -> ID PUNTO ID','accesoInterface',3,'p_expresion_accesoInterface','parser.py',823),
  ('funcEspecialObject -> OBJECT PUNTO VALUES PARIZQ expression PARDER','funcEspecialObject',6,'p_expression_funcEspecialObject','parser.py',829),
  ('funcEspecialObject -> OBJECT PUNTO KEYS PARIZQ expression PARDER','funcEspecialObject',6,'p_expression_funcEspecialObject','parser.py',830),
  ('funcionEmbebida -> PARSEFLOAT PARIZQ expression PARDER','funcionEmbebida',4,'p_expression_funcionEmbebida','parser.py',839),
  ('funcionEmbebida -> PARSEINT PARIZQ expression PARDER','funcionEmbebida',4,'p_expression_funcionEmbebida','parser.py',840),
  ('funcionEmbebida -> ID PUNTO TOSTRING PARIZQ PARDER','funcionEmbebida',5,'p_expression_funcionEmbebida','parser.py',841),
  ('funcionEmbebida -> expression PUNTO TOSTRING PARIZQ PARDER','funcionEmbebida',5,'p_expression_funcionEmbebida','parser.py',842),
  ('funcionEmbebida -> ID PUNTO TOLOWERCASE PARIZQ PARDER','funcionEmbebida',5,'p_expression_funcionEmbebida','parser.py',843),
  ('funcionEmbebida -> ID PUNTO TOUPPERCASE PARIZQ PARDER','funcionEmbebida',5,'p_expression_funcionEmbebida','parser.py',844),
  ('funcionEmbebida -> TYPEOF ID','funcionEmbebida',2,'p_expression_funcionEmbebida','parser.py',845),
  ('accesoMatriz -> ID accesosMatriz','accesoMatriz',2,'p_expression_accesoMatriz','parser.py',871),
  ('accesosMatriz -> accesosMatriz acceso','accesosMatriz',2,'p_accesosMatriz','parser.py',877),
  ('accesosMatriz -> acceso','accesosMatriz',1,'p_accesosMatriz','parser.py',878),
  ('acceso -> CORIZQ expression CORDER','acceso',3,'p_acceso','parser.py',886),
]
